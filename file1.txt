S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;7	for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Right;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(7)} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) if(HasNumberOfUnits(Light,3)) then {for(Unit u){for(Unit u){if(u.canHarvest()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}}} else { u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.train(Worker,Right,25)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;6;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;C;Train;Worker;Up;15;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;EnemyDir;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest	for(Unit u){u.idle() for(Unit u){u.idle()}} for(Unit u){u.moveAway() for(Unit u){u.harvest(6)}} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){u.train(Worker,Up,15)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,EnemyDir,15)}} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Strongest) u.attack(Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;3;S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;For_S;S;C;Harvest;50;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Up,3)}} for(Unit u){u.train(Heavy,Right,100)} for(Unit u){for(Unit u){u.harvest(50)}}} for(Unit u){u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Harvest;50;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Left,3)} for(Unit u){u.train(Heavy,Right,100)} for(Unit u){u.harvest(50)}} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Left;7;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Train;Light;Left;7;S;C;Train;Heavy;Right;2;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.harvest(5) u.build(Barracks,Left,7)} u.attack(Strongest)} for(Unit u){u.train(Light,Right,10) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.train(Light,Left,7)} u.train(Heavy,Right,2) u.train(Worker,Left,6)} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Up;7;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;S_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Right;2;S;C;Train;Worker;Left;6	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Up,7)} u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.train(Light,Left,7) u.moveToUnit(Ally,Weakest)} u.train(Heavy,Right,2) u.train(Worker,Left,6)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Up;7;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Right;2;S;C;Train;Worker;Left;6	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Up,7)} u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){if(u.canAttack()) then {e} else { u.train(Light,Left,7) u.moveToUnit(Ally,Weakest)} u.train(Heavy,Right,2) u.train(Worker,Left,6)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;5;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Right;2;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(5)} u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){if(u.isBuilder()) then {e} else { if(u.OpponentHasUnitInPlayerRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}}} u.train(Heavy,Right,2) u.train(Light,Up,7) u.train(Worker,Left,6) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest)}}
S;For_S;S;C;Attack;Closest	for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,10)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;10	for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;10	for(Unit u){for(Unit u){for(Unit u){u.harvest(4)}} u.attack(LessHealthy) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(4)} if(u.canHarvest()) then {e} else { u.train(Worker,EnemyDir,50)} for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;4;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;15;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(2) u.train(Worker,Right,4) u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest) if(HasNumberOfUnits(Base,2)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,Right,15)} if(u.is(Barracks)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;4;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,5) u.harvest(2) u.train(Worker,Right,4) u.attack(Strongest)} for(Unit u){u.train(Light,Right,5)} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;4;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,5) u.harvest(2) u.train(Worker,Right,4) u.idle() u.attack(Strongest)} for(Unit u){u.train(Light,Right,5)} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;4;S;C;Idle;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,5) u.harvest(2) u.train(Worker,Right,4) u.idle()} for(Unit u){u.train(Light,Right,5)} for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Left;4;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;C;Build;Barracks;Up;3;S;C;Attack;Closest;S;C;Train;Light;Right;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.train(Worker,Left,4)} for(Unit u){u.train(Heavy,Down,6) u.build(Barracks,Up,3) u.attack(Closest) u.train(Light,Right,5)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;EnemyDir;4;S;For_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;C;Build;Barracks;Up;3;S;C;Attack;Closest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,4)} for(Unit u){u.train(Heavy,Down,6) u.build(Barracks,Up,3) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Left,100)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Base;Down;8;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){for(Unit u){u.build(Base,Down,8)} u.idle() u.harvest(6) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,Up,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Right;20;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;C;Train;Light;Right;7;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(2) u.moveToUnit(Enemy,Closest) u.idle()} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Right,20)}} for(Unit u){u.attack(Strongest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} else { for(Unit u){if(u.canAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)}}} u.train(Worker,Left,9) u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.train(Worker,Up,100) u.train(Light,Right,7)} for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Down;15;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;8;S;C;Harvest;100;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,1) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Closest) u.train(Ranged,Down,15) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.harvest(3)}}} else { for(Unit u){u.train(Light,EnemyDir,8)} u.harvest(100)}} for(Unit u){u.attack(Farthest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;9;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,50) u.harvest(9) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.train(Light,EnemyDir,8)}}} for(Unit u){u.attack(Closest) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;9;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Down;50	for(Unit u){u.build(Barracks,Up,50) u.harvest(9) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} else { for(Unit u){u.train(Light,EnemyDir,8) u.idle()}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.train(Heavy,Down,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;9;S;C;Train;Worker;Left;2;S;C;Idle;S;C;Train;Heavy;Right;2;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;9;S;C;Train;Heavy;Left;7;S;Empty;S;For_S;S;C;Train;Light;EnemyDir;25	for(Unit u){u.build(Barracks,Up,25) u.harvest(9) u.train(Worker,Left,2) u.idle() u.train(Heavy,Right,2)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)} if(HasLessNumberOfUnits(Light,9)) then {u.train(Heavy,Left,7)} else { e} for(Unit u){u.train(Light,EnemyDir,25)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;9;S;C;Train;Worker;Left;2;S;C;Idle;S;C;Train;Heavy;Right;2;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Up;15;S;For_S;S;C;Train;Light;EnemyDir;25	for(Unit u){u.build(Barracks,Up,25) u.harvest(9) u.train(Worker,Left,2) u.idle() u.train(Heavy,Right,2)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Heavy,Up,15)} for(Unit u){u.train(Light,EnemyDir,25)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Idle;S;C;Harvest;10;S;C;Train;Worker;Left;2;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Up,25) u.idle() u.harvest(10) u.train(Worker,Left,2) u.attack(MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,5)} u.train(Ranged,Left,25) for(Unit u){u.train(Heavy,Down,9)} for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;LessHealthy;S;Empty;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;5;S;C;Train;Ranged;Left;25;S;For_S;S;C;Train;Heavy;Down;9	for(Unit u){u.build(Barracks,Up,25) u.idle() u.harvest(10) u.train(Worker,Left,2) if(u.isBuilder()) then {u.attack(LessHealthy)} else { e} u.attack(MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,5)} u.train(Ranged,Left,25) for(Unit u){u.train(Heavy,Down,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;LessHealthy;S;Empty;S;C;Attack;Weakest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;5;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,25) u.idle() u.harvest(10) u.train(Worker,Left,2) if(u.isBuilder()) then {u.attack(LessHealthy)} else { e} u.attack(Weakest)} for(Unit u){for(Unit u){u.train(Light,Left,5)} for(Unit u){u.train(Heavy,Down,9)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;50;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,50) for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Heavy,50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.attack(Weakest)}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;C;Build;Base;Left;5;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Harvest;3;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,50) for(Unit u){u.idle()} u.build(Base,Left,5) for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;C;Build;Base;Left;5;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,50) for(Unit u){u.idle()} u.build(Base,Left,5) for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.harvest(3)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,50) for(Unit u){u.idle()} for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;50;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;100	for(Unit u){u.idle() u.harvest(7) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,50)} u.moveAway()} for(Unit u){for(Unit u){u.train(Heavy,Right,25)} u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Train;Light;Left;9;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;EnemyDir;100;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.harvest(7) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,50)} u.train(Light,Left,9) u.moveToUnit(Enemy,MostHealthy) u.moveAway()} for(Unit u){for(Unit u){u.train(Heavy,Right,25)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.attack(LessHealthy) u.train(Ranged,EnemyDir,100) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;9;S;C;MoveAway;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.harvest(7) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,50)} u.train(Light,Left,9) u.moveAway() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;9;S;C;MoveAway;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.harvest(7) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,1)} u.train(Light,Left,9) u.moveAway() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;9;S;C;MoveAway;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Left;3;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.harvest(7) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,1)} u.train(Light,Left,9) u.moveAway() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,Left,3)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.harvest(7) u.attack(Weakest) for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.train(Heavy,Up,6)} u.train(Worker,Up,2) for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.harvest(7) u.attack(Weakest) for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.train(Heavy,Up,6)} u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Harvest;15;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.idle() u.build(Barracks,Down,4) u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Light,EnemyDir,7) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Harvest;15;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Light;Up;7;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.idle() u.build(Barracks,Down,4) u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Light,Up,7) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Harvest;15;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Light;Down;7;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.idle() u.build(Barracks,Down,4) u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Light,Down,7) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;7;S;Empty;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.build(Barracks,Left,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} u.moveToUnit(Enemy,MostHealthy) u.idle() u.attack(MostHealthy) u.train(Light,EnemyDir,9) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Barracks,7)) then {e} else { u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up;50	for(Unit u){for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Up,50)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;4;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(HasLessNumberOfUnits(Barracks,4)) then {u.attack(Closest)} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.train(Ranged,EnemyDir,10) u.harvest(6)}}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;4;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Up;15;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(HasLessNumberOfUnits(Barracks,4)) then {u.attack(Closest)} else { u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()} u.train(Light,Up,15) u.build(Barracks,Left,25) u.harvest(6)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;6;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Up;15;S;S_S;S;C;Build;Barracks;Right;25;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(HasLessNumberOfUnits(Base,6)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()} u.train(Light,Up,15) u.build(Barracks,Right,25) u.harvest(6)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Up;15;S;S_S;S;C;Build;Barracks;Right;25;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()} u.train(Light,Up,15) u.build(Barracks,Right,25) u.harvest(6)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Idle;S;C;Train;Light;Up;15;S;C;Harvest;100;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.build(Barracks,Left,15) u.idle()} u.train(Light,Up,15) u.harvest(100)}} for(Unit u){u.moveAway() u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;Build;Barracks;Left;25;S;S_S;S;C;Train;Light;Left;7;S;For_S;S;C;Train;Worker;EnemyDir;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Idle;S;C;Harvest;1	for(Unit u){u.harvest(5) u.attack(Strongest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(2)) then {u.build(Barracks,Left,25)} u.train(Light,Left,7) for(Unit u){u.train(Worker,EnemyDir,100)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.idle() u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;Build;Barracks;Left;25;S;S_S;S;C;Train;Light;Left;7;S;For_S;S;C;Train;Worker;EnemyDir;100;S;C;Idle;S;C;Harvest;1	for(Unit u){u.harvest(2) u.attack(Strongest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(2)) then {u.build(Barracks,Left,25)} u.train(Light,Left,7) for(Unit u){u.train(Worker,EnemyDir,100)} u.idle() u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;10;S;S_S;S;S_S;S;C;Train;Ranged;Right;3;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveAway;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Harvest;2	for(Unit u){u.idle() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,9)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway() if(u.canHarvest()) then {u.attack(Farthest)} u.moveToUnit(Enemy,Farthest)} else { for(Unit u){u.harvest(10)}} u.train(Ranged,Right,3) if(u.isBuilder()) then {u.moveAway()} else { for(Unit u){u.idle()}} if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Closest)}} else { e} u.train(Light,Left,3) for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.harvest(2)}}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;10;S;S_S;S;S_S;S;C;Train;Ranged;Right;3;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveAway;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Harvest;2	for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,9)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway() if(u.canHarvest()) then {u.attack(Farthest)} u.moveToUnit(Enemy,Farthest)} else { for(Unit u){u.harvest(10)}} u.train(Ranged,Right,3) if(u.isBuilder()) then {u.moveAway()} else { for(Unit u){u.idle()}} if(u.canAttack()) then {for(Unit u){u.build(Barracks,Down,10)} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Closest)}} else { e} u.train(Light,Left,3) for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.harvest(2)}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.moveAway() if(u.canHarvest()) then {for(Unit u){for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Worker;Left;6;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Strongest)}} for(Unit u){u.train(Worker,Left,6) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(15) for(Unit u){for(Unit u){u.idle()}} u.attack(Strongest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(3)}} u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Worker,Left,6)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Down;7;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Idle;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(1)}} for(Unit u){u.build(Barracks,Up,25)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(LessHealthy) u.train(Ranged,Down,7) for(Unit u){u.train(Worker,EnemyDir,3) u.idle()}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Down;7;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Idle;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(1)}} for(Unit u){u.build(Barracks,Up,25)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(LessHealthy) u.train(Ranged,Down,7) for(Unit u){u.train(Worker,EnemyDir,3) u.idle()}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.harvest(1)}} for(Unit u){u.build(Barracks,Up,25)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)} u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Up,4) for(Unit u){u.attack(Closest) for(Unit u){u.train(Worker,EnemyDir,3)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;Train;Heavy;Up;15;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;8;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Farthest) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { u.build(Barracks,Left,4) u.harvest(1)}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Closest) for(Unit u){u.train(Worker,EnemyDir,3)}} u.train(Heavy,Up,15) for(Unit u){u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Down,8) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;Up;4;S;C;Harvest;100;S;C;Train;Ranged;Right;7;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;8;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Base;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { u.build(Barracks,Up,4) u.harvest(100)}} u.train(Ranged,Right,7) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveAway()}} for(Unit u){u.train(Light,Down,8) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Base,9)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;Up;4;S;C;Harvest;100;S;C;Train;Ranged;Right;7;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;100;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Enemy,Farthest) u.attack(Weakest) if(u.canAttack()) then {for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { u.build(Barracks,Up,4) u.harvest(100)}} u.train(Ranged,Right,7) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveAway()}} for(Unit u){u.train(Light,Down,100) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;Up;4;S;C;Harvest;100;S;C;Train;Ranged;Right;7;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;100;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;20;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Enemy,Farthest) u.attack(Farthest) if(u.canAttack()) then {for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { u.build(Barracks,Up,4) u.harvest(100)}} u.train(Ranged,Right,7) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveAway()}} for(Unit u){u.train(Light,Down,100) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Farthest) if(OpponentHasNumberOfUnits(Ranged,20)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Light;EnemyDir;100;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;Train;Worker;Right;3;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Light,Left,10)} for(Unit u){u.moveAway() for(Unit u){u.train(Light,EnemyDir,100)} for(Unit u){u.build(Barracks,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(25) u.attack(Strongest)}} u.train(Worker,Right,3) u.attack(Strongest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Up;50;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;C;Train;Worker;Right;3;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;20;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Light,Left,10)} for(Unit u){for(Unit u){for(Unit u){u.harvest(2)}} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Up,50)} for(Unit u){u.build(Barracks,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(9)} for(Unit u){u.idle()}}} u.train(Worker,Right,3) for(Unit u){u.idle()} for(Unit u){u.harvest(20)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Strongest) u.train(Worker,EnemyDir,10) u.moveToUnit(Ally,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){for(Unit u){u.harvest(3)}} u.train(Worker,EnemyDir,5) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,Right,20) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Base;Down;4;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Base,Down,4)} for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.train(Worker,Down,25) for(Unit u){if(u.canAttack()) then {u.harvest(2) u.attack(Strongest)}}}}}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;50	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.attack(Closest) u.train(Worker,Up,50)}}
S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.attack(Farthest) u.train(Worker,Right,25) for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.attack(Closest)}} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;Train;Ranged;Left;100	for(Unit u){u.harvest(4) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.train(Ranged,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;S_S;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;50;S;If_B_then_S;B;HasNumberOfUnits;Light;4;S;C;Train;Worker;Right;10	for(Unit u){u.harvest(5) u.attack(Weakest) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.harvest(2)} u.moveToUnit(Ally,Strongest) u.train(Light,Left,50) if(HasNumberOfUnits(Light,4)) then {u.train(Worker,Right,10)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;8;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;4;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Right;20	for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(3) if(HasNumberOfUnits(Worker,8)) then {u.attack(LessHealthy)} else { e} if(u.canHarvest()) then {if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) u.harvest(4) u.attack(MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Right,20)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;4;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Right;20	for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(3) if(u.canHarvest()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) u.harvest(4) u.attack(MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Right,20)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;EnemyDir;20;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) if(u.canHarvest()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)} else { u.moveToUnit(Enemy,Weakest) u.moveAway()}} for(Unit u){u.idle()} u.harvest(4) u.attack(MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,EnemyDir,20) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;10;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(3) if(HasLessNumberOfUnits(Worker,10)) then {u.idle()} if(HasNumberOfWorkersHarvesting(3)) then {u.attack(Closest)} u.idle() u.attack(MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,EnemyDir,20) for(Unit u){u.build(Barracks,Down,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(3) if(u.canHarvest()) then {u.idle()} if(HasNumberOfWorkersHarvesting(3)) then {u.attack(Closest)} u.idle() u.attack(MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,EnemyDir,20) for(Unit u){u.build(Barracks,Down,100)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Harvest;6;S;C;Train;Heavy;Right;5;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest)} else { e} u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle() for(Unit u){u.harvest(3)}} for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {if(u.HasUnitInOpponentRange()) then {u.harvest(6)}} u.train(Heavy,Right,5)} u.train(Worker,EnemyDir,20) for(Unit u){u.build(Barracks,Down,100)} for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest)} else { e} u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle() for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,EnemyDir,20) for(Unit u){u.build(Barracks,Down,100)} for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Closest)}
S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;MostHealthy	for(Unit u){if(u.canHarvest()) then {u.attack(MostHealthy)}}
S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest	for(Unit u){if(u.canHarvest()) then {u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;9;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle() u.train(Worker,Down,9)}} if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Up;4;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,Up,4) if(u.is(Light)) then {u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {e} else { u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;Harvest;3;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8) u.harvest(3) for(Unit u){u.idle()} u.attack(Strongest)} if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,EnemyDir,8) for(Unit u){u.idle()} u.attack(Strongest)} if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.harvest(3)} u.train(Worker,EnemyDir,8) for(Unit u){u.idle()} u.attack(Strongest)} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;For_S;S;C;Train;Ranged;Right;25;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} if(u.isBuilder()) then {u.build(Barracks,EnemyDir,4)} u.harvest(4) u.moveToUnit(Enemy,Farthest) u.attack(Weakest) for(Unit u){u.train(Ranged,Right,25)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;9	for(Unit u){for(Unit u){u.idle()} if(u.isBuilder()) then {u.build(Barracks,Left,2)} u.harvest(4) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;9	for(Unit u){for(Unit u){u.idle()} if(u.isBuilder()) then {u.build(Barracks,Left,2)} u.harvest(4) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Left,6)} u.harvest(1) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Left,6)} u.harvest(9) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Down,6)} u.harvest(9) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,2) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Down,6)} u.harvest(9) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Down,6)} u.harvest(20) if(u.canHarvest()) then {u.attack(LessHealthy)} u.attack(MostHealthy) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveAway;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Light,Left,20) if(u.isBuilder()) then {u.build(Barracks,Down,6)} u.harvest(50) if(u.HasUnitInOpponentRange()) then {if(u.canHarvest()) then {e} else { for(Unit u){if(OpponentHasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Ally,Closest)}}}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveAway()} u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(25) u.moveToUnit(Ally,Closest) for(Unit u){u.idle()} u.train(Worker,Left,5)}
S;S_S;S;For_S;S;For_S;S;C;Build;Base;Up;100;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;15;S;C;MoveAway	for(Unit u){for(Unit u){u.build(Base,Up,100)}} for(Unit u){for(Unit u){for(Unit u){u.harvest(2)}} u.moveToUnit(Enemy,Farthest) for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,15) u.moveAway()}
S;S_S;S;For_S;S;C;Build;Base;Up;100;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;15;S;C;MoveAway	for(Unit u){u.build(Base,Up,100)} for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,15) u.moveAway()}
S;S_S;S;For_S;S;C;Build;Base;Up;100;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;15;S;C;MoveAway	for(Unit u){u.build(Base,Up,100)} for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,15) u.moveAway()}
S;S_S;S;For_S;S;C;Build;Base;Up;100;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;15;S;C;MoveAway	for(Unit u){u.build(Base,Up,100)} for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,15) u.moveAway()}
S;S_S;S;For_S;S;C;Build;Base;Up;100;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;15	for(Unit u){u.build(Base,Up,100)} for(Unit u){for(Unit u){u.idle() u.harvest(2) u.attack(Weakest)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,15)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;1;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;Empty	for(Unit u){if(HasNumberOfUnits(Barracks,1)) then {u.moveToUnit(Enemy,Weakest)} else { for(Unit u){u.idle() u.harvest(5) u.attack(Closest)}} u.train(Worker,Down,50) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { e}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;4;S;S_S;S;For_S;S;C;Harvest;7;S;C;Train;Heavy;EnemyDir;7;S;For_S;S;C;Train;Light;EnemyDir;10	for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Left,4)} for(Unit u){u.harvest(7)} u.train(Heavy,EnemyDir,7) for(Unit u){u.train(Light,EnemyDir,10)}}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;4;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Heavy;EnemyDir;7;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,Left,4)} for(Unit u){u.idle()} u.train(Light,EnemyDir,9) u.train(Heavy,EnemyDir,7) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.harvest(100)} u.moveToUnit(Enemy,Closest)} else { e} u.moveAway()} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Heavy;EnemyDir;7;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle() u.harvest(20)} u.train(Light,EnemyDir,9) u.train(Heavy,EnemyDir,7) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} u.moveAway()} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Heavy;EnemyDir;20;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle() u.harvest(20)} u.train(Light,EnemyDir,9) u.train(Heavy,EnemyDir,20) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} u.moveAway()} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Heavy;EnemyDir;20;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveAway;S;C;Train;Light;Down;25	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle() u.harvest(20)} u.train(Light,EnemyDir,9) u.train(Heavy,EnemyDir,20) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} u.moveAway()} u.train(Light,Down,25)}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;100;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Down;25	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle() u.harvest(100)} u.train(Light,EnemyDir,9) u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}} u.train(Light,Down,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;25;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle()} u.train(Light,EnemyDir,9) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Down,9)} for(Unit u){u.harvest(25) u.moveToUnit(Enemy,Closest)} u.train(Light,Down,25) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;25;S;For_S;S;C;Attack;LessHealthy	if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Worker,Left,2) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Down,9)} for(Unit u){u.harvest(25) u.moveToUnit(Enemy,Closest)} u.train(Light,Down,25) for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;4;S;Empty	for(Unit u){u.train(Worker,Left,2) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,9)} u.attack(LessHealthy) for(Unit u){if(u.canAttack()) then {for(Unit u){if(u.is(Worker)) then {u.harvest(4)}}} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;9;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;4;S;Empty	for(Unit u){u.train(Worker,Left,2) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,9)} u.attack(Weakest) for(Unit u){if(u.canAttack()) then {for(Unit u){if(u.is(Worker)) then {u.harvest(4)}}} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;9;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;4;S;Empty	for(Unit u){u.train(Worker,Left,2) for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) for(Unit u){if(u.canAttack()) then {for(Unit u){if(u.is(Worker)) then {u.harvest(4)}}} else { e}}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){if(OpponentHasNumberOfUnits(Light,25)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){if(OpponentHasNumberOfUnits(Light,25)) then {u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy;S;Empty	for(Unit u){u.train(Worker,Right,4) for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}} else { e}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;20;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;For_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Down;15;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.harvest(4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){if(OpponentHasNumberOfUnits(Ranged,20)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,MostHealthy)}}} for(Unit u){u.attack(Closest)} if(HasNumberOfUnits(Worker,8)) then {for(Unit u){for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)}}}} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Down,15)}} else { e} if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Ally,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Down;15;S;Empty;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.harvest(4)} u.idle() if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Down,15)}} else { e} if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)}}} if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Down;15;S;Empty;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.harvest(1)} if(u.canHarvest()) then {for(Unit u){u.train(Worker,Down,15)}} else { e} if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)}}} if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle() u.harvest(1)} u.attack(Strongest) u.train(Worker,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,15)} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveAway;S;Empty;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,15)} for(Unit u){if(u.canAttack()) then {u.moveAway()} else { e} u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.idle() u.harvest(2)} if(HasLessNumberOfUnits(Worker,4)) then {u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,15)} for(Unit u){u.moveAway() if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest)} if(u.canAttack()) then {u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;C;Build;Barracks;Right;6	for(Unit u){for(Unit u){u.idle() u.harvest(2)} if(HasLessNumberOfUnits(Worker,4)) then {u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.attack(MostHealthy) for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,7)} u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Ranged;Right;3	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,50)}}} for(Unit u){u.train(Ranged,Right,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Ranged;Right;3	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,50)}}} for(Unit u){u.train(Ranged,Right,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;C;Train;Ranged;Right;3	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,50)} for(Unit u){u.train(Heavy,Left,8)}}} for(Unit u){u.train(Ranged,Right,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;50;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Ranged;EnemyDir;3	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,50)}} u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Ranged,EnemyDir,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;50;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;3	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,50)}} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Ranged,EnemyDir,3)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;C;Build;Barracks;Right;4;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.harvest(2)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.harvest(7) for(Unit u){u.train(Light,Up,25) u.build(Barracks,Right,4)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Left;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;C;Build;Barracks;Right;4;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.harvest(3) u.train(Heavy,Left,25)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.harvest(7) for(Unit u){u.train(Light,Up,25) u.build(Barracks,Right,4)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;C;Build;Barracks;Right;4;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.harvest(3)} u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,25) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.harvest(7) for(Unit u){u.train(Light,Up,25) u.build(Barracks,Right,4)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;4	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.build(Barracks,Right,4) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(LessHealthy)} u.train(Heavy,EnemyDir,15)} else { u.harvest(4)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Left;25;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(6)} u.train(Worker,Left,25) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,Down,50)} u.harvest(5) u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Right;20	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(1)} u.train(Worker,Right,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;7;S;C;Train;Worker;Up;15	for(Unit u){for(Unit u){u.idle()} u.harvest(3) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,5) u.harvest(7) u.train(Worker,Up,15)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Train;Worker;Left;100;S;For_S;S;C;Train;Ranged;Up;8;S;C;Attack;Weakest	for(Unit u){u.harvest(2) for(Unit u){u.idle()} u.build(Barracks,Down,4) u.train(Worker,Left,100) for(Unit u){u.train(Ranged,Up,8)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Heavy;2;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Ranged;Up;8;S;C;Attack;Weakest	for(Unit u){u.harvest(2) for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Weakest)} if(HasNumberOfUnits(Heavy,2)) then {u.moveToUnit(Ally,Farthest)}} u.build(Barracks,Down,4) u.train(Worker,Left,6) for(Unit u){u.train(Ranged,Up,8)} u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;C;Build;Barracks;Right;5;S;S_S;S;C;Harvest;10;S;C;Attack;Closest	for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.train(Ranged,Up,8) u.build(Barracks,Right,5) u.harvest(10) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;2;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Train;Worker;Up;6;S;For_S;S;C;Train;Light;Up;10;S;C;Attack;Weakest	for(Unit u){u.harvest(2) for(Unit u){if(HasNumberOfUnits(Heavy,2)) then {u.moveToUnit(Ally,Strongest)}} u.build(Barracks,Down,4) u.train(Worker,Up,6) for(Unit u){u.train(Light,Up,10)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;20;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Right;7;S;C;Train;Heavy;Right;6;S;C;Train;Worker;Up;25	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,20)} else { u.idle()} u.idle() for(Unit u){u.harvest(1)} u.harvest(3) u.attack(Closest) u.moveToUnit(Ally,Farthest) u.train(Worker,Right,7) u.train(Heavy,Right,6) u.train(Worker,Up,25)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;20;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Right;7;S;C;Train;Heavy;Right;6	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,20)} else { u.idle()} u.idle() for(Unit u){u.harvest(1)} u.harvest(3) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} for(Unit u){u.train(Heavy,Up,3)} u.moveToUnit(Ally,Farthest) u.train(Worker,Right,7) u.train(Heavy,Right,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;50;S;For_S;S;C;Harvest;2;S;C;Train;Ranged;Up;50;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.build(Barracks,Right,4) u.train(Worker,EnemyDir,6) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,50)} for(Unit u){u.harvest(2)}} else { u.train(Ranged,Up,50)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.harvest(2)}} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Light;Down;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;20;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;6	for(Unit u){u.train(Heavy,Down,20) if(u.HasUnitInOpponentRange()) then {u.train(Light,Down,20)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,20)} else { u.idle()} u.idle() for(Unit u){u.harvest(1)} u.attack(Closest) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} else { e} for(Unit u){u.harvest(3)} u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Light;Down;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;20;S;Empty;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;6	for(Unit u){u.train(Heavy,Down,20) if(u.HasUnitInOpponentRange()) then {u.train(Light,Down,20)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,20)} else { e} u.idle() for(Unit u){u.harvest(1)} u.attack(Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} if(u.canHarvest()) then {for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} u.train(Worker,Up,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;Right;1;S;C;Attack;Closest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Light,Left,3)} if(u.isBuilder()) then {u.build(Barracks,Right,1) u.attack(Closest)} else { e} for(Unit u){u.train(Worker,Right,5) for(Unit u){u.idle()}} for(Unit u){u.harvest(2)}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;Left;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Down;10;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Light,Left,20)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Down,10)} else { for(Unit u){u.idle()}} for(Unit u){u.train(Worker,Right,5) for(Unit u){u.idle()}} for(Unit u){u.harvest(2)}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;50;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;15;S;For_S;S;For_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Heavy;Up;3;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.build(Barracks,Right,1) u.harvest(5) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,50)}} else { for(Unit u){u.build(Base,Down,15)} for(Unit u){for(Unit u){u.train(Light,Up,100)}} u.build(Barracks,Right,50)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.harvest(2) u.train(Heavy,Up,3)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;15;S;For_S;S;For_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Heavy;Up;3;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.build(Barracks,Right,1) u.harvest(5) u.attack(Closest)} else { for(Unit u){u.build(Base,Down,15)} for(Unit u){for(Unit u){u.train(Light,Up,100)}} u.build(Barracks,Right,50)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.harvest(2) u.train(Heavy,Up,3)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;C;Build;Base;EnemyDir;15;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Base;Down;9;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Up;3;S;C;Harvest;3;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.build(Barracks,Right,1) u.build(Base,EnemyDir,15) u.harvest(20) u.attack(Closest)} else { for(Unit u){u.build(Base,Down,9)} u.build(Barracks,Right,50)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.harvest(2) u.train(Heavy,Up,3) u.harvest(3)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Base;Down;9;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Ranged,EnemyDir,6) u.harvest(20) u.attack(Closest)} else { for(Unit u){u.build(Base,Down,9)} u.build(Barracks,Right,50)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.harvest(2) u.train(Heavy,Up,4) u.harvest(3)}} for(Unit u){u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Base;Down;9;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Worker;Right;5;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Up;9;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Light,Left,3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Ranged,EnemyDir,6) u.harvest(20) u.attack(Closest)} else { for(Unit u){u.build(Base,Down,9)} u.build(Barracks,Right,50)} for(Unit u){u.train(Worker,Right,5)} u.attack(Weakest) u.train(Light,Up,9) for(Unit u){u.harvest(2) u.train(Heavy,Up,4) u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;9;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Ranged;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;10	for(Unit u){if(HasLessNumberOfUnits(Worker,9)) then {u.attack(Closest)} for(Unit u){u.harvest(5)} u.train(Ranged,Down,7) u.build(Barracks,Right,9) u.attack(MostHealthy) u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;9;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Ranged;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Down;20	for(Unit u){if(HasLessNumberOfUnits(Worker,9)) then {u.moveAway()} for(Unit u){u.harvest(5)} u.train(Ranged,Down,7) u.build(Barracks,Right,9) u.moveAway() u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle()} u.train(Worker,Down,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.harvest(5)} u.idle() u.train(Ranged,Down,7) u.build(Barracks,Right,9) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;For_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;C;Train;Light;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} for(Unit u){u.harvest(5)} u.idle() u.train(Light,Down,7) u.build(Barracks,Right,9) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;5;S;C;Build;Barracks;Left;1;S;For_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;Train;Light;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,Left,1) for(Unit u){u.harvest(3)} u.idle() u.train(Light,Down,7) u.build(Barracks,Right,9) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Left;100;S;S_S;S;C;Train;Ranged;Left;5;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;Train;Light;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Left,100)} else { u.train(Ranged,Left,5) for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} u.idle() u.train(Light,Down,7) u.build(Barracks,Right,9) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Harvest;3;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;4;S;C;MoveAway;S;C;Train;Ranged;Up;2;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Heavy;Down;25;S;S_S;S;C;Train;Light;Down;7;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.build(Barracks,Left,1) for(Unit u){u.harvest(3)} if(HasNumberOfUnits(Light,4)) then {u.moveAway()} else { u.train(Ranged,Up,2)} u.idle() u.harvest(4) u.train(Heavy,Down,25) u.train(Light,Down,7) u.build(Barracks,Right,9) u.moveToUnit(Enemy,Strongest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;5;S;C;Build;Barracks;Left;1;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;3;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Train;Worker;Right;7;S;C;MoveAway;S;For_S;S;C;Train;Heavy;Right;50	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,Left,1) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.build(Barracks,Right,9) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,3) if(OpponentHasNumberOfUnits(Worker,3)) then {u.train(Worker,Right,7)} u.moveAway() for(Unit u){u.train(Heavy,Right,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;3;S;C;Train;Worker;Down;5	for(Unit u){for(Unit u){u.train(Light,Right,10)} u.build(Barracks,Left,1) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.attack(Closest) u.moveToUnit(Enemy,Closest) u.train(Worker,Left,3) u.train(Worker,Down,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;Attack;Closest;S;C;Train;Worker;Down;5	for(Unit u){for(Unit u){u.train(Light,Right,10)} u.build(Barracks,Left,1) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.attack(Closest) u.train(Worker,Down,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;S_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Harvest;50;S;C;Attack;Closest;S;C;Train;Ranged;Right;50;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Train;Heavy;Left;50	for(Unit u){for(Unit u){u.train(Light,Down,3)} if(HaveQtdUnitsAttacking(2)) then {e} else { u.build(Barracks,Left,1) for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} if(HaveQtdUnitsAttacking(5)) then {u.harvest(50)} u.attack(Closest) u.train(Ranged,Right,50) u.train(Worker,Down,5) for(Unit u){u.train(Heavy,Left,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;3;S;C;Harvest;1;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;1;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Harvest;50;S;C;Attack;Closest;S;C;Train;Ranged;Right;50;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;Up;20;S;C;Train;Worker;Down;5;S;For_S;S;C;Train;Heavy;EnemyDir;50	for(Unit u){u.idle() for(Unit u){u.train(Light,Down,3) u.harvest(1)} if(OpponentHasNumberOfUnits(Barracks,1)) then {e} else { u.moveAway() u.harvest(5) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} if(HaveQtdUnitsAttacking(5)) then {u.harvest(50)} u.attack(Closest) u.train(Ranged,Right,50) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Up,20)} u.train(Worker,Down,5) for(Unit u){u.train(Heavy,EnemyDir,50)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;25;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Down;9	for(Unit u){for(Unit u){u.build(Barracks,Left,2)} u.harvest(25) u.attack(MostHealthy) for(Unit u){u.train(Light,Down,9)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;25;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Down;9	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,2)} u.harvest(25) u.attack(MostHealthy) for(Unit u){u.train(Light,Down,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;25;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Light;Down;9;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;15;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() for(Unit u){u.idle() u.build(Barracks,Left,25)} u.attack(MostHealthy) for(Unit u){u.train(Light,Down,9)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(15)}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;S_S;S;C;Train;Heavy;Down;4;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;50	for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.harvest(7) u.train(Worker,Right,3) u.train(Heavy,Down,4) u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,50)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;1;S;S_S;S;C;Train;Light;Up;7;S;C;Idle;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Ranged;Down;6;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;EnemyDir;3	for(Unit u){if(u.canAttack()) then {u.harvest(1)} u.train(Light,Up,7) u.idle() u.build(Barracks,Left,7)} for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(8)} u.train(Ranged,Down,6) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { e} for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Worker,EnemyDir,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;S_S;S;C;Train;Light;Up;7;S;C;Idle;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Ranged;Left;9;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;20;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Heavy,EnemyDir,25) u.train(Light,Up,7) u.idle() u.build(Barracks,Left,7)} for(Unit u){u.harvest(2) u.train(Ranged,Left,9) u.moveToUnit(Enemy,LessHealthy) u.harvest(20) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,EnemyDir,3)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;S_S;S;C;Train;Heavy;Right;5;S;For_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;Attack;MostHealthy;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){u.idle()} for(Unit u){u.harvest(7) u.train(Worker,Right,3) u.train(Heavy,Right,5) for(Unit u){u.train(Light,EnemyDir,5)} u.attack(Closest) for(Unit u){if(u.is(Light)) then {u.attack(MostHealthy)} u.build(Barracks,EnemyDir,50)}} for(Unit u){u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Train;Worker;Left;2;S;C;Build;Barracks;Down;2;S;C;Harvest;1;S;S_S;S;For_S;S;C;Harvest;50;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Heavy,Up,7) u.train(Worker,Left,2) u.build(Barracks,Down,2) u.harvest(1)} for(Unit u){u.harvest(50)} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}} for(Unit u){u.harvest(7) u.train(Worker,Right,3) u.attack(Closest) for(Unit u){u.train(Heavy,EnemyDir,7) u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Light;Left;3;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}} for(Unit u){u.harvest(7) if(u.HasUnitInOpponentRange()) then {u.train(Light,Left,3)} u.train(Worker,Right,3) u.train(Heavy,Left,4) u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Heavy,Down,8)}
S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}} for(Unit u){u.harvest(7) u.train(Worker,Right,3) u.train(Heavy,Left,4) u.attack(Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){for(Unit u){u.train(Heavy,Down,5) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(7) u.train(Worker,Right,3) u.attack(Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){for(Unit u){u.train(Heavy,Down,6)} if(u.isBuilder()) then {for(Unit u){u.train(Heavy,EnemyDir,100)}} u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;100	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,Left,100)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Harvest;5	for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Worker,Right,100) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;9	for(Unit u){for(Unit u){u.harvest(4)} for(Unit u){u.attack(Closest)} u.train(Worker,EnemyDir,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;C;Harvest;1;S;C;Attack;Closest;S;C;Train;Worker;Left;50	for(Unit u){for(Unit u){u.train(Worker,Right,10) u.harvest(1) u.attack(Closest)} u.train(Worker,Left,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Down;25;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,Right,50) for(Unit u){u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,Down,20) u.attack(LessHealthy)} if(u.is(Base)) then {u.train(Worker,Down,25)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;50;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Left;7;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Down;25;S;Empty	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,Right,50) for(Unit u){if(HasLessNumberOfUnits(Heavy,4)) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Left,7)}}}} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,Down,20) u.attack(LessHealthy)} if(u.is(Base)) then {u.train(Worker,Down,25)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;9;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Right;25;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;15	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,9)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,Right,50) for(Unit u){u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(LessHealthy)} u.moveToUnit(Ally,Strongest) if(u.is(Base)) then {u.train(Worker,Right,25)} else { if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)}} u.train(Light,Down,15)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Right;25;S;S_S;S;C;Train;Light;Left;15;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Right,5) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} for(Unit u){u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(Weakest)} u.moveToUnit(Ally,Strongest) if(u.is(Base)) then {u.train(Worker,Right,25)} else { u.train(Light,Left,15) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;4;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Right;15	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(4)}} u.train(Worker,Right,5) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} for(Unit u){u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(Weakest)} u.moveToUnit(Ally,Strongest) u.train(Light,Right,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;6;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;is_Type;Base;S;S_S;S;C;Train;Worker;Up;25;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.build(Base,Down,6)} for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.train(Worker,Down,7) for(Unit u){u.train(Light,Up,50) u.build(Barracks,Down,20) u.attack(Closest)} u.moveToUnit(Enemy,Farthest) if(u.is(Base)) then {u.train(Worker,Up,25) u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Light;Up;20;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Up,3)} u.train(Light,Up,20) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,4)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Light;Down;10;S;S_S;S;C;Train;Heavy;Left;6;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;Train;Light;EnemyDir;25;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Light,Down,10)}} u.train(Heavy,Left,6) u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(Closest)} u.train(Light,EnemyDir,25) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;Train;Light;EnemyDir;25;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.train(Light,EnemyDir,10)} for(Unit u){u.harvest(5)} for(Unit u){u.train(Heavy,Left,6) u.train(Ranged,EnemyDir,1) u.idle() u.build(Barracks,Down,20) u.attack(Closest)} u.train(Light,EnemyDir,25) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Heavy;Up;6;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Heavy,Up,6)} for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.train(Light,EnemyDir,20) u.build(Barracks,Down,20) u.attack(Closest)} u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.train(Worker,EnemyDir,7)}} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Right;8;S;C;Train;Light;Left;25;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;6;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Right,8)} u.train(Light,Left,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Right,6) u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(Closest)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Train;Heavy;Right;8;S;C;Train;Light;Left;25;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;6;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.train(Heavy,Right,8)} u.train(Light,Left,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Right,6) u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,20) u.attack(Closest)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;EnemyDir;3;S;C;Train;Worker;Up;6;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,3) u.train(Worker,Up,6) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;EnemyDir;3;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,3) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;EnemyDir;3;S;C;Train;Heavy;Down;4;S;C;Train;Light;Down;10	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,3) u.train(Heavy,Down,4) u.train(Light,Down,10)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;EnemyDir;3;S;C;Train;Worker;Left;6;S;C;Train;Heavy;Left;4	for(Unit u){u.idle() u.build(Barracks,EnemyDir,9) u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,3) u.train(Worker,Left,6) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Harvest;8;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;C;Train;Ranged;Left;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;6;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.idle()} else { u.train(Ranged,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,6) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;5;S;C;Train;Ranged;Right;7;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.idle() u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,EnemyDir,3) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,5) u.train(Ranged,Right,7) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Ranged;Right;2;S;C;Train;Light;Up;6;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;5;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Ranged,Right,2) u.train(Light,Up,6) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,5) u.train(Heavy,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;Train;Worker;Left;3;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Right,20) u.train(Ranged,EnemyDir,10) u.harvest(1) u.idle() u.train(Worker,Left,3) u.harvest(3) for(Unit u){u.train(Light,Down,2)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Build;Barracks;Right;20;S;C;Train;Light;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.build(Barracks,Right,20) u.train(Light,EnemyDir,10) u.harvest(3) u.idle() for(Unit u){u.train(Light,Down,2)} u.attack(Weakest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;20;S;C;Train;Light;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Left;3;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Attack;Weakest;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Right,20) u.train(Light,EnemyDir,10) u.harvest(3) u.train(Worker,Left,3) for(Unit u){u.train(Light,Down,2)} u.attack(Weakest) u.train(Ranged,Down,100) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;20;S;C;Train;Light;Up;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Worker;Left;3;S;C;Harvest;15;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Down;2	for(Unit u){u.idle() u.build(Barracks,Right,20) u.train(Light,Up,25) u.harvest(1) u.train(Worker,Left,3) u.harvest(15) u.attack(Weakest) for(Unit u){u.train(Light,Down,2)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;100;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;6;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.train(Heavy,Up,100) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Left,5) u.moveToUnit(Ally,MostHealthy) u.train(Light,Right,6) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Train;Light;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Left;3;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;9;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,20) u.train(Light,EnemyDir,10) for(Unit u){u.harvest(2)} for(Unit u){u.idle()} u.train(Worker,Left,3) u.harvest(3) for(Unit u){if(OpponentHasNumberOfUnits(Base,9)) then {u.moveToUnit(Ally,Weakest)}} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Left;5;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up;3;S;S_S;S;C;Train;Heavy;Up;7;S;C;Train;Light;Left;10	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest) u.moveAway()} u.attack(Closest) u.train(Heavy,Left,5) u.moveToUnit(Enemy,Farthest) u.train(Worker,Up,3) u.train(Heavy,Up,7) u.train(Light,Left,10)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Up;4;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Up;6	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(8) u.idle() u.attack(Closest) for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Up,4)} else { u.train(Worker,Left,4)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;7;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest	for(Unit u){u.build(Barracks,Down,9) u.harvest(6) u.train(Heavy,Left,9) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Light,EnemyDir,4)} else { u.train(Worker,Left,4) for(Unit u){u.train(Heavy,EnemyDir,8)}} u.train(Worker,Down,4) u.moveToUnit(Enemy,Closest) u.idle() if(OpponentHasNumberOfUnits(Light,7)) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Light;Down;4;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;7;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Down,9) u.harvest(6) u.train(Heavy,Left,9) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Light,Down,4)} else { u.train(Worker,Left,4) for(Unit u){u.train(Heavy,EnemyDir,8)}} u.train(Worker,Down,4) u.moveToUnit(Enemy,Closest) u.idle() if(OpponentHasNumberOfUnits(Light,7)) then {u.moveToUnit(Enemy,Closest)} else { u.moveAway()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Light;Down;4;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;7;S;C;Attack;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;7;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Up,9) u.harvest(6) u.train(Heavy,Left,9) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Light,Down,4)} else { u.train(Worker,Left,4) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle() u.train(Heavy,Left,7) u.attack(Weakest)} else { e}} for(Unit u){u.train(Heavy,EnemyDir,8)}} u.train(Worker,Left,4) u.moveToUnit(Enemy,Closest) u.idle() if(OpponentHasNumberOfUnits(Light,7)) then {u.moveToUnit(Enemy,Closest)} else { u.moveAway()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;For_S;S;C;Train;Heavy;Left;6	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(8) u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,3) for(Unit u){for(Unit u){u.train(Heavy,Left,6)}}}
S;S_S;S;For_S;S;C;Train;Worker;Up;8;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,8)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.harvest(2) u.attack(Weakest) u.train(Worker,EnemyDir,10)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Worker;Up;10;S;C;Build;Barracks;EnemyDir;100;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Right;100;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Heavy;Right;7	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(6) u.train(Worker,Up,10) u.build(Barracks,EnemyDir,100)} u.moveToUnit(Enemy,Weakest) u.train(Light,Right,100) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Heavy,Right,7)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;8;S;C;Train;Heavy;Right;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;20;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(2) u.build(Barracks,EnemyDir,8) u.train(Heavy,Right,3)} u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Light,Down,20) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;8;S;C;Train;Heavy;Right;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Down;20;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(2) u.build(Barracks,EnemyDir,8) u.train(Heavy,Right,3)} u.moveToUnit(Enemy,Weakest) u.attack(MostHealthy) u.train(Light,Down,20) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Right;9;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(2) u.build(Barracks,EnemyDir,1) u.train(Heavy,Right,9)} u.attack(LessHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;2;S;C;Idle;S;C;Build;Barracks;Down;2;S;C;Train;Heavy;Right;3;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,25) for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(2) u.idle() u.build(Barracks,Down,2) u.train(Heavy,Right,3)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;2;S;C;Train;Heavy;Down;2;S;C;Build;Barracks;Down;2;S;S_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;9;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(2) u.train(Heavy,Down,2) u.build(Barracks,Down,2) u.idle() u.train(Ranged,EnemyDir,9)} u.attack(Closest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.isBuilder()) then {e} else { if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)}}}}
S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;3;S;C;Train;Heavy;Up;1;S;C;Build;Barracks;Down;6;S;S_S;S;C;Train;Light;Right;3;S;C;Train;Light;EnemyDir;9;S;C;Attack;Closest	for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(3) u.train(Heavy,Up,1) u.build(Barracks,Down,6) u.train(Light,Right,3) u.train(Light,EnemyDir,9)} u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { u.train(Worker,EnemyDir,3)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)}}}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Base;EnemyDir;8;S;C;MoveAway	for(Unit u){u.train(Worker,Up,10) u.harvest(2) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)}} u.attack(Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest) for(Unit u){u.build(Base,EnemyDir,8) u.moveAway()}}}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Up,2) u.train(Ranged,EnemyDir,25) u.harvest(20) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;3;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Ranged;Right;9;S;C;Harvest;100;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(3)} u.train(Worker,EnemyDir,5) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} for(Unit u){u.build(Barracks,EnemyDir,50)} u.train(Ranged,Right,9) u.harvest(100)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;3;S;C;Train;Worker;Right;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Attack;Closest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,50)}} u.harvest(3) u.train(Worker,Right,5) for(Unit u){u.idle()} u.train(Light,EnemyDir,4) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;C;Idle;S;C;Train;Heavy;Right;100;S;S_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;Train;Light;Left;5;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){u.idle()} u.train(Heavy,Right,100) for(Unit u){u.harvest(20) u.train(Light,Left,5)} u.moveToUnit(Enemy,Closest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;1;S;C;Train;Light;Down;25;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Harvest;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Left;50;S;S_S;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,25) if(OpponentHasNumberOfUnits(Worker,1)) then {u.train(Light,Down,25)} u.train(Worker,Up,2) u.harvest(100) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.idle()}} u.train(Ranged,Left,50) u.moveAway() u.attack(Weakest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Idle;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;50	for(Unit u){u.build(Barracks,EnemyDir,25) u.train(Worker,Up,2) for(Unit u){u.idle()} u.harvest(100) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Left,50)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;For_S;S;C;Train;Light;Right;9;S;C;Train;Heavy;Left;100;S;S_S;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Right;20;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Ranged,Right,1) u.train(Worker,Up,2) for(Unit u){u.train(Light,Right,9)} u.train(Heavy,Left,100) u.harvest(100) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Right,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20)} u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Light;Right;9;S;C;Train;Heavy;Left;100;S;S_S;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Right;20;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Ranged,Right,1) u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,Right,9)} u.train(Heavy,Left,100) u.harvest(100) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Right,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20)} u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Light;Right;9;S;C;Harvest;100;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Ranged;Left;4;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;100	for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Ranged,Right,1) u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,Right,9)} u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,Left,4)}} u.attack(MostHealthy) u.train(Light,EnemyDir,100)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Light;Right;9;S;C;Train;Heavy;Left;100;S;C;Harvest;100;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Train;Light;EnemyDir;100	for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Ranged,Right,1) u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,Right,9)} u.train(Heavy,Left,100) u.harvest(100) if(u.isBuilder()) then {u.moveAway()} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Light,EnemyDir,100)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;Up;100;S;S_S;S;C;Harvest;100;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Up;20	for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(7)}}}} u.train(Worker,EnemyDir,2) u.harvest(1) for(Unit u){u.idle()} u.train(Heavy,Up,100) u.harvest(100) u.attack(Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20)}}
S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;C;Harvest;100;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Up;20	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,3)}} for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Ranged,Right,1) u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,Right,9)} u.harvest(100) u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20)}}
S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;2;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;9;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Up;20	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,3)}} for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.train(Worker,Up,2) u.harvest(3) for(Unit u){u.train(Light,Right,9)} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest) if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.idle()}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;C;Train;Light;Right;9;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Up,3)}} for(Unit u){u.build(Barracks,EnemyDir,25) u.train(Worker,Up,2) u.harvest(3) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} else { e}} for(Unit u){u.train(Light,Right,9)} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;C;Idle;S;C;Train;Heavy;Up;100;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;100	for(Unit u){u.build(Barracks,Down,25) u.harvest(7) u.train(Worker,EnemyDir,2) if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} u.idle() u.train(Heavy,Up,100) u.attack(MostHealthy) u.train(Light,EnemyDir,100)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Up;10;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Down;10;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;6;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest)} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Up,10) u.moveToUnit(Ally,Strongest) u.train(Light,Down,10) if(HasLessNumberOfUnits(Worker,6)) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;10;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Heavy;Up;10;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {if(HasLessNumberOfUnits(Heavy,10)) then {u.moveToUnit(Enemy,Weakest)}} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.train(Ranged,EnemyDir,2)} u.train(Heavy,Up,10) u.moveToUnit(Ally,Strongest) u.train(Light,Up,20) if(HasLessNumberOfUnits(Light,2)) then {e} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Heavy;Left;10;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest)} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.train(Ranged,EnemyDir,2)} u.train(Heavy,Left,10) u.moveToUnit(Ally,Strongest) u.train(Light,Up,20) if(HasLessNumberOfUnits(Light,2)) then {e} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Train;Heavy;Left;1;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Heavy;Right;10;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,25) u.train(Heavy,Left,1) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest)} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.train(Ranged,EnemyDir,2)} u.train(Heavy,Right,10) u.moveToUnit(Ally,Strongest) u.train(Light,Up,20) if(HasLessNumberOfUnits(Light,2)) then {e} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Heavy;Right;10;S;C;Train;Light;Up;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest) u.idle() u.moveAway()} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.train(Ranged,EnemyDir,2)} u.train(Heavy,Right,10) u.train(Light,Up,20) if(HasLessNumberOfUnits(Light,2)) then {e} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;If_B_then_S;B;is_Type;Light;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Down;6	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest) u.idle() u.moveAway()} u.harvest(15) u.idle() u.train(Worker,EnemyDir,2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.attack(Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) u.train(Heavy,Right,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Strongest) u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;If_B_then_S;B;is_Type;Light;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;8;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;4;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;Train;Ranged;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Down;6	for(Unit u){u.build(Barracks,Down,25) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest) u.idle() u.moveAway()} u.idle() u.train(Worker,EnemyDir,2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.harvest(3) u.attack(Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Worker,8)) then {if(u.isBuilder()) then {if(OpponentHasNumberOfUnits(Light,4)) then {u.moveToUnit(Ally,MostHealthy)}} else { e} u.train(Ranged,EnemyDir,2)} u.train(Heavy,Right,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Strongest) u.train(Light,Down,6)}
S;For_S;S;C;Attack;Weakest	for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;50;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(50) u.train(Ranged,Up,7) u.moveToUnit(Enemy,Strongest) u.attack(Closest)}
S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Closest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Strongest) u.train(Worker,EnemyDir,100)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;3;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,100) u.harvest(3) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;7;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.harvest(3) if(OpponentHasNumberOfUnits(Light,7)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { u.attack(LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle()}}} for(Unit u){u.train(Worker,EnemyDir,15)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,100) for(Unit u){u.idle()} u.harvest(2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Up;50;S;C;Attack;Strongest;S;C;Train;Heavy;Down;20	for(Unit u){for(Unit u){u.harvest(2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,15)} if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Up,50)} u.attack(Strongest) u.train(Heavy,Down,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Train;Ranged;Down;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Left;50;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,100) for(Unit u){u.train(Ranged,Down,50)} for(Unit u){u.idle()} u.harvest(2) u.build(Barracks,Left,50) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Up;50;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;9;S;C;Train;Light;Down;100	for(Unit u){for(Unit u){u.harvest(2)} u.train(Worker,Right,7) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Up,50)} u.attack(Strongest) for(Unit u){u.idle() u.build(Barracks,Up,9) u.train(Light,Down,100)}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Up,100) u.idle() for(Unit u){u.train(Heavy,Right,8)} u.train(Worker,EnemyDir,2) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,Closest)} else { u.harvest(20) u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Ranged;EnemyDir;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Up,100) u.idle() for(Unit u){u.train(Heavy,Right,8)} u.train(Ranged,EnemyDir,2) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.harvest(20) u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Down;15;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;100;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Right,8)} u.train(Worker,EnemyDir,2) u.build(Barracks,Down,15) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,Closest)} else { u.train(Ranged,Left,100) u.harvest(20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;9;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;4;S;C;Build;Barracks;Down;15;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Light,Down,9) for(Unit u){u.train(Heavy,Right,8)} u.train(Worker,EnemyDir,4) u.build(Barracks,Down,15) u.harvest(6) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(2)} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;4;S;C;Build;Barracks;Down;15;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Light,Down,1) for(Unit u){u.train(Heavy,Right,8)} u.train(Worker,EnemyDir,4) u.build(Barracks,Down,15) u.harvest(6) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(2)} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;1;S;If_B_then_S;B;HasNumberOfUnits;Base;4;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;4;S;C;Build;Barracks;Down;15;S;C;Harvest;25;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Light,Down,1) if(HasNumberOfUnits(Base,4)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Heavy,Right,8)} u.train(Worker,EnemyDir,4) u.build(Barracks,Down,15) u.harvest(25) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(2)} u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Light;Up;1;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Down;15;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;Train;Light;Right;8;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Up,1) u.train(Light,EnemyDir,6) u.idle() for(Unit u){u.train(Heavy,EnemyDir,8) u.idle()} u.train(Worker,EnemyDir,2) u.build(Barracks,Down,15) u.harvest(100) if(u.canHarvest()) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)} u.train(Light,Right,8) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;7;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Down,25) u.train(Light,Right,7) u.train(Worker,EnemyDir,2) u.build(Barracks,EnemyDir,15) u.idle() if(u.is(Base)) then {u.moveToUnit(Enemy,Strongest)} else { u.harvest(25) u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;7;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Down,25) u.train(Light,Right,7) u.train(Worker,EnemyDir,2) u.build(Barracks,EnemyDir,15) u.idle() if(u.is(Base)) then {u.moveToUnit(Enemy,Strongest)} else { u.harvest(6)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;7;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Up;6;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;EnemyDir;15;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Heavy,Down,25) u.train(Light,Right,7) u.harvest(1) u.train(Ranged,Up,6) u.train(Worker,EnemyDir,2) u.build(Barracks,EnemyDir,15) if(u.is(Base)) then {u.moveToUnit(Ally,Farthest)} else { u.harvest(25) u.attack(Weakest)}}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;8	for(Unit u){u.harvest(2)} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Farthest) u.train(Worker,Left,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;8;S;S_S;S;C;Harvest;20;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;10	for(Unit u){u.idle() u.build(Barracks,Left,8) u.harvest(20) if(OpponentHasNumberOfUnits(Worker,5)) then {u.attack(MostHealthy)} else { e} u.attack(MostHealthy) u.train(Ranged,Left,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Left,10)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;8;S;S_S;S;C;Harvest;20;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Left,8) u.harvest(20) if(OpponentHasNumberOfUnits(Worker,5)) then {u.attack(MostHealthy)} else { e} u.attack(MostHealthy) u.train(Light,Right,4) u.train(Ranged,Left,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Light;Right;100;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Left;50;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Up;4	for(Unit u){u.train(Light,Right,100) u.harvest(3) u.train(Worker,Left,50) u.attack(Closest) for(Unit u){u.build(Barracks,Up,4)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;10;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Light;Down;6;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;Left;100;S;C;Attack;Strongest;S;C;Train;Worker;Up;7	for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Left,10) if(u.canHarvest()) then {e} else { u.train(Light,Down,6)} for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,100)} u.attack(Strongest)} u.train(Worker,Up,7)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Train;Heavy;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;10;S;If_B_then_S_else_S;B;CanHarvest;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;20;S;C;Attack;Strongest;S;C;Train;Worker;Down;7	for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Right,1) u.build(Barracks,Left,10) if(u.canHarvest()) then {u.idle()} else { u.attack(Closest) u.train(Light,Left,20)} u.attack(Strongest)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;C;Build;Barracks;Left;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;Train;Heavy;Left;7	for(Unit u){u.train(Worker,Up,2) u.idle() u.build(Barracks,Left,8) u.harvest(3) u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} else { e} u.train(Heavy,Left,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;C;Attack;Weakest;S;C;Train;Heavy;Left;9	for(Unit u){u.train(Worker,Up,2) u.idle() u.build(Barracks,EnemyDir,8) u.harvest(10) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}} u.attack(Weakest) u.train(Heavy,Left,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;10;S;S_S;S;C;Train;Light;Left;5;S;C;Train;Light;Up;7;S;C;Attack;Closest;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.harvest(3)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.train(Heavy,Right,1) u.build(Barracks,Left,10) u.train(Light,Left,5) u.train(Light,Up,7) u.attack(Closest)} u.train(Worker,Down,4) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;is_Type;Light;S;C;Attack;Strongest;S;C;Idle;S;C;Build;Barracks;Left;8;S;For_S;S;C;Train;Heavy;Right;5;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Train;Light;Up;2;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Up,2) if(u.is(Light)) then {u.attack(Strongest)} u.idle() u.build(Barracks,Left,8) for(Unit u){u.train(Heavy,Right,5)} u.harvest(3) u.attack(Weakest) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.train(Light,Up,2)} else { e} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Base;Down;100;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Light;Up;8;S;C;Build;Barracks;Left;1;S;For_S;S;C;Train;Heavy;Right;100;S;S_S;S;C;Harvest;3;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Base,Down,100)} else { e}} u.train(Worker,Up,2) u.train(Light,Up,8) u.build(Barracks,Left,1) for(Unit u){u.train(Heavy,Right,100)} u.harvest(3) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Base;Down;100;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;15;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Left;1;S;For_S;S;C;Train;Heavy;Right;100;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Base,Down,100)} else { e}} u.train(Light,Down,15) u.train(Worker,Up,2) u.build(Barracks,Left,1) for(Unit u){u.train(Heavy,Right,100)} u.harvest(20) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;10;S;C;Attack;LessHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;10;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Light;Right;4;S;C;Train;Ranged;Right;15	for(Unit u){u.train(Worker,Up,2) u.idle() u.build(Barracks,EnemyDir,8) u.harvest(10) u.attack(LessHealthy) if(u.isBuilder()) then {for(Unit u){u.harvest(5)}} if(u.is(Light)) then {u.moveToUnit(Ally,Strongest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) u.train(Light,Up,10)} else { u.train(Heavy,Down,3) u.train(Light,Right,4)} u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;Train;Light;Left;5;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.train(Heavy,Right,100)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(4) u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)}} u.harvest(3) u.build(Barracks,Left,50) u.train(Light,Left,5) u.attack(Weakest)} u.train(Worker,Down,50) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Up;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Left;4;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1	for(Unit u){u.idle() u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) u.train(Light,Up,2) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Farthest)} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.harvest(10)} u.train(Worker,Left,4)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Up;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Left;15;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1	for(Unit u){u.idle() u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) u.train(Light,Up,2) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Farthest)} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.harvest(1)} u.train(Worker,Left,15)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;4;S;C;Harvest;1;S;C;Train;Worker;Left;15;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;6	for(Unit u){u.idle() u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveAway()}} if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.train(Ranged,Up,4) u.harvest(1)} u.train(Worker,Left,15)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.train(Light,EnemyDir,3) u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)} u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {for(Unit u){u.harvest(6)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;4;S;C;Harvest;8;S;C;Train;Worker;Left;15;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;2;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;6	for(Unit u){u.idle() u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveAway()}} if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.train(Ranged,Up,4) u.harvest(8)} u.train(Worker,Left,15)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Base,2)) then {u.moveToUnit(Ally,Closest)}} u.train(Light,EnemyDir,3) u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)} u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {for(Unit u){u.harvest(6)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Up;15;S;C;Train;Light;Up;2;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Left;4;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;For_S;S;C;Idle	for(Unit u){u.idle() u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {u.train(Heavy,Up,15)} u.train(Light,Up,2) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Ally,Farthest) for(Unit u){u.moveAway() u.harvest(8)}} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.harvest(10)} u.train(Worker,Left,4)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Up;15;S;C;Train;Light;Up;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;15;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Left;4;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,2) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {u.train(Heavy,Up,15)} u.train(Light,Up,2) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(15) u.moveAway()}} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.harvest(10)} u.train(Worker,Left,4)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Train;Heavy;Left;4;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Up;15;S;C;Train;Light;Up;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;15;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Left;4;S;Empty;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,2) u.train(Heavy,Left,4) u.build(Barracks,EnemyDir,8) u.harvest(3) u.attack(Weakest) if(u.HasUnitInOpponentRange()) then {u.train(Heavy,Up,15)} u.train(Light,Up,2) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(15) u.moveAway()}} else { if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.harvest(10)} u.train(Worker,Left,4)} else { e} u.train(Heavy,Left,8) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,3) u.attack(Closest)} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Idle;S;C;Train;Light;Up;1;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,3) u.idle() u.train(Light,Up,1)} u.harvest(1) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;C;Attack;Weakest;S;C;Train;Ranged;Up;2;S;For_S;S;C;Harvest;10	for(Unit u){u.train(Heavy,Down,2) u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,EnemyDir,3)} u.attack(Weakest) u.train(Ranged,Up,2) for(Unit u){u.harvest(10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;15;S;If_B_then_S;B;HasNumberOfUnits;Worker;10;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){u.idle() u.build(Barracks,Down,15) if(HasNumberOfUnits(Worker,10)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} u.harvest(2) u.attack(LessHealthy)} for(Unit u){u.train(Light,EnemyDir,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;6;S;C;Harvest;6;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;EnemyDir;6	for(Unit u){u.idle() u.build(Barracks,Left,6) u.harvest(6) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) u.train(Light,EnemyDir,6)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;7;S;C;Build;Barracks;Left;2;S;For_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,7)} u.build(Barracks,Left,2)} for(Unit u){u.harvest(25) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Down;10;S;C;Idle;S;S_S;S;C;Train;Light;Up;3;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Ranged;Right;100;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.build(Barracks,Right,50) for(Unit u){u.harvest(4) u.train(Worker,Down,10)} u.idle() u.train(Light,Up,3) u.attack(Weakest)} for(Unit u){u.train(Ranged,Right,100) u.train(Worker,EnemyDir,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;C;Train;Worker;Right;9;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;C;Train;Light;Down;25;S;For_S;S;C;Harvest;3	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} u.train(Worker,Right,9) for(Unit u){u.build(Barracks,EnemyDir,15)} u.train(Light,Down,25) for(Unit u){u.harvest(3)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;3;S;For_S;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;C;Train;Ranged;Right;100;S;C;Train;Worker;Left;15	for(Unit u){u.build(Barracks,Right,50) u.idle() for(Unit u){u.harvest(4)} u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,3)} for(Unit u){u.train(Heavy,Down,7) u.train(Ranged,Right,100) u.train(Worker,Left,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;S_S;S;For_S;S;C;Harvest;4;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Left;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Light;Right;3;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Ranged;Up;100	for(Unit u){u.build(Barracks,Right,50) for(Unit u){u.harvest(4)} u.idle() if(u.canHarvest()) then {e} else { u.train(Worker,Left,20)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,3) u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Down,7) u.train(Ranged,Up,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Light;Down;3;S;For_S;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;C;Train;Ranged;Right;100;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.build(Barracks,Right,50) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Up,3)} u.train(Light,Down,3)} for(Unit u){u.train(Heavy,Down,7) u.train(Ranged,Right,100) u.train(Worker,EnemyDir,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Train;Heavy;Up;100;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Up;3;S;For_S;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.build(Barracks,Up,50) u.train(Heavy,Up,100) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Up,3)}} for(Unit u){u.train(Worker,EnemyDir,15)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Down;8	for(Unit u){u.attack(Closest)} if(HasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Down,8)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;8;S;C;Harvest;4;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Right,8) u.harvest(4)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;50;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,50) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,50) for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Left;15	for(Unit u){for(Unit u){u.idle()} u.harvest(2) u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,Left,15)}
S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Light;Down;9;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;15;S;C;Attack;Strongest;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Down,9) for(Unit u){u.build(Barracks,Down,10)}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(15) u.attack(Strongest)}}} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Closest)}}}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;4;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;6	for(Unit u){u.harvest(2)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){if(OpponentHasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest)} for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Enemy,LessHealthy) u.harvest(4) u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Idle;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Right,5) u.idle() u.harvest(7)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;1;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.canAttack()) then {u.harvest(1) for(Unit u){u.train(Worker,Left,15)}} for(Unit u){u.idle()}} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.attack(Closest)}}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;C;Train;Ranged;Right;2;S;C;Build;Barracks;Down;15;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;0;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Ranged,Right,2)} u.build(Barracks,Down,15)}} for(Unit u){for(Unit u){u.harvest(3)} u.train(Ranged,Up,20)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){if(HasNumberOfUnits(Base,0)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;C;Train;Ranged;Right;2;S;C;Build;Barracks;Up;15;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;0;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Ranged,Right,2)} u.build(Barracks,Up,15)}} for(Unit u){for(Unit u){u.harvest(3)} u.train(Ranged,Up,20)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){if(HasNumberOfUnits(Base,0)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Down;3;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Right,10)} for(Unit u){u.idle() u.harvest(15) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Up,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.attack(MostHealthy)} u.train(Ranged,Down,3) u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Right,10)} for(Unit u){u.idle() u.harvest(10)} for(Unit u){u.train(Heavy,Down,9) u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Right,6) u.idle() for(Unit u){u.harvest(1) u.idle()}} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.harvest(1) u.idle()}} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;C;MoveAway	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20)} u.moveAway()}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20)} u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20) u.moveAway()} u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20) u.moveAway()} u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;S_S;S;C;MoveAway;S;For_S;S;C;Build;Base;EnemyDir;5	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20)} u.moveAway() for(Unit u){u.build(Base,EnemyDir,5)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;9;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;S_S;S;C;MoveAway;S;For_S;S;C;Build;Base;EnemyDir;5	for(Unit u){u.idle() u.harvest(9)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,20)} u.moveAway() for(Unit u){u.build(Base,EnemyDir,5)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;4;S;C;Harvest;9;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Light;EnemyDir;100;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Down,4)} u.harvest(9)} for(Unit u){u.moveAway()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Light,EnemyDir,100)}} u.attack(Weakest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Light;EnemyDir;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,EnemyDir,4)} u.harvest(2)} for(Unit u){u.moveAway()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Light,EnemyDir,100)}} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Light;EnemyDir;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,EnemyDir,4)} u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Light,EnemyDir,100)}} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Right;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,EnemyDir,4)} u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveAway() u.train(Ranged,Right,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;6;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,6)} u.harvest(4)} for(Unit u){u.build(Barracks,Down,4)} u.harvest(6) u.attack(LessHealthy) u.train(Light,EnemyDir,50)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;6;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,6)} u.harvest(4)} for(Unit u){u.build(Barracks,Down,4)} u.train(Ranged,Down,1) u.attack(LessHealthy) u.train(Light,EnemyDir,50)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;For_S;S;C;Train;Light;Left;6;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;3;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Down;9	for(Unit u){for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,Left,3) u.idle() for(Unit u){u.train(Light,Left,6)}}} else { for(Unit u){if(u.canAttack()) then {u.idle()}}} u.harvest(3)} for(Unit u){for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest)}} u.train(Heavy,Down,9)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;EnemyDir;25;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Up,15)} for(Unit u){for(Unit u){u.harvest(15)} for(Unit u){u.attack(Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,EnemyDir,25)} else { e}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(10)} u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveAway()} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Heavy;Up;15;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Left;20;S;S_S;S;For_S;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(10)} u.train(Heavy,Up,15) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,Left,20)} for(Unit u){u.moveAway()} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,3) for(Unit u){u.idle()} u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,100)} for(Unit u){u.harvest(20)} for(Unit u){u.attack(MostHealthy)} u.train(Light,Left,4)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Harvest;20;S;For_S;S;C;MoveAway;S;C;Train;Light;Left;4;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Worker,Left,3) for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,100)} for(Unit u){u.harvest(20)} for(Unit u){u.moveAway()} u.train(Light,Left,4)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Heavy;Right;15;S;For_S;S;C;MoveAway;S;C;Train;Light;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,3) for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,100)} for(Unit u){u.harvest(20)} u.train(Heavy,Right,15) for(Unit u){u.moveAway()} u.train(Light,Left,4)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Heavy;Right;15;S;C;Train;Light;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,3) for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,100)} for(Unit u){u.harvest(20)} u.train(Heavy,Right,15) u.train(Light,Left,4)} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;100;S;For_S;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;4;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;2	for(Unit u){for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(100)} for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Heavy,Right,4) u.attack(Closest) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,Down,50)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){u.train(Worker,EnemyDir,2)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;4;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Ranged;EnemyDir;2	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(9)} for(Unit u){u.train(Heavy,Right,4) u.attack(Closest)} u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,Down,50)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}} for(Unit u){u.train(Ranged,EnemyDir,2)}
S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Down;15;S;C;Train;Light;Right;7;S;For_S;S;C;Train;Worker;Up;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;C;Harvest;8;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Down,15)} else { u.train(Light,Right,7)}}} for(Unit u){u.train(Worker,Up,2)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { u.harvest(8)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway()}}
S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Down;15;S;C;Train;Light;Right;7;S;For_S;S;C;Train;Worker;Up;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Down,15)} else { u.train(Light,Right,7)}} for(Unit u){u.train(Worker,Up,2)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(8)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway()}
S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Down;15;S;C;Train;Light;Right;7;S;For_S;S;C;Train;Worker;Up;3;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;8;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest	if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Down,15)} else { u.train(Light,Right,7)}} for(Unit u){u.train(Worker,Up,3)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(8)}} for(Unit u){if(u.canAttack()) then {u.attack(Closest)}}
S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;100;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;8;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;15	if(OpponentHasNumberOfUnits(Light,100)) then {u.moveToUnit(Enemy,Closest)} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.build(Barracks,Up,4)}} for(Unit u){u.idle()} for(Unit u){u.harvest(8)} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Light,Down,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Attack;Strongest;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.harvest(15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveAway()} u.attack(Strongest) for(Unit u){for(Unit u){u.build(Barracks,Down,9)}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}} for(Unit u){u.train(Heavy,Right,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;C;Train;Ranged;Right;9	for(Unit u){u.harvest(15) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.attack(Strongest) for(Unit u){u.build(Barracks,Down,9)}} for(Unit u){u.train(Ranged,Right,9)}
S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Train;Light;EnemyDir;4;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;Down;4;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;C;Attack;MostHealthy	for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.harvest(4)} u.train(Worker,EnemyDir,10) u.train(Light,EnemyDir,4) for(Unit u){u.idle()} u.train(Heavy,Down,4) for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.attack(MostHealthy)}}}
S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Train;Light;EnemyDir;10;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;C;Attack;MostHealthy	for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.harvest(4)} u.train(Worker,EnemyDir,10) u.train(Light,EnemyDir,10) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.attack(MostHealthy)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;8;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Ranged;Left;50;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;9;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.build(Barracks,Up,10) u.harvest(100) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,8) u.attack(MostHealthy)} for(Unit u){u.train(Ranged,Left,50)} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {u.moveToUnit(Ally,Closest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;8;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Ranged;Left;50;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;9;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,10) u.harvest(100) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,8) u.attack(MostHealthy)} for(Unit u){u.train(Ranged,Left,50)} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;20	for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,Left,20) u.harvest(9) u.attack(LessHealthy) u.train(Heavy,Left,20)}
S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Right;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Right;4	for(Unit u){u.train(Worker,Left,4) for(Unit u){u.build(Barracks,Right,1)} u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.idle()} u.harvest(15) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveAway()} u.train(Ranged,Right,6) for(Unit u){u.attack(LessHealthy) u.train(Light,Right,4)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(7) u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9)} else { u.train(Heavy,Up,9) for(Unit u){u.train(Worker,Left,2) u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} else { e}}}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(7) u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9)} else { u.train(Heavy,Down,7) for(Unit u){u.train(Worker,Left,2) u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} else { e}}}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9) u.harvest(7)} else { u.idle() u.train(Heavy,Down,7) for(Unit u){u.train(Worker,Left,2) u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} else { e}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Down;7;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle	for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9) u.harvest(7)} else { u.train(Heavy,Down,7) for(Unit u){u.train(Worker,Left,2) u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9) u.harvest(3)} else { u.train(Heavy,Down,7) for(Unit u){u.train(Worker,Left,2) u.idle()} u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle	for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9) u.harvest(3)} else { u.train(Heavy,Down,7) u.attack(MostHealthy) for(Unit u){u.train(Worker,Left,2) u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Down;7;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Idle	for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,9) u.harvest(3)} else { u.train(Heavy,Down,7) u.attack(Strongest) for(Unit u){u.train(Worker,Left,2) u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;100;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;1	for(Unit u){u.train(Worker,Down,9) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(3)} else { for(Unit u){for(Unit u){u.train(Light,EnemyDir,100)} u.idle() u.build(Barracks,Up,1)}}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;50;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Ranged;Down;7;S;For_S;S;C;Idle;S;C;Train;Ranged;Right;9;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.harvest(50) u.moveAway() u.attack(Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.canAttack()) then {e} else { u.train(Ranged,Down,7) for(Unit u){u.idle()}}}} u.train(Ranged,Right,9)} for(Unit u){if(u.isBuilder()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}} else { e}}
S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;Empty	for(Unit u){u.idle() if(u.canAttack()) then {u.attack(LessHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.idle()} u.attack(Weakest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,Down,15)}
S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Weakest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} u.harvest(6)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(6) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Left,15) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Ranged;Down;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;MostHealthy;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;C;Idle	for(Unit u){if(u.canAttack()) then {e} else { u.train(Ranged,Down,6)} if(u.isBuilder()) then {e} else { u.attack(MostHealthy)} u.build(Barracks,EnemyDir,5) if(u.isBuilder()) then {u.harvest(3)} for(Unit u){u.idle()}}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;8;S;S_S;S;C;Train;Heavy;Down;6;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,25)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(8)} u.train(Heavy,Down,6) u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;3;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Closest) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Worker,Left,10)} if(OpponentHasNumberOfUnits(Ranged,3)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;9;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(9)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)}}} for(Unit u){u.train(Worker,Right,9)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;10;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()}}} for(Unit u){u.harvest(10) u.moveAway()} for(Unit u){u.attack(Weakest) u.train(Worker,Left,20) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;15;S;C;Build;Barracks;Up;10;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;10;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;100;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,Left,15) u.build(Barracks,Up,10)}} for(Unit u){if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.harvest(10) u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest)} if(OpponentHasNumberOfUnits(Ranged,100)) then {u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){u.idle()} for(Unit u){u.harvest(7) u.attack(Strongest)} for(Unit u){for(Unit u){u.train(Light,EnemyDir,4)} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Left,10)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,EnemyDir,10) for(Unit u){u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Up,15)}} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,EnemyDir,10) for(Unit u){u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){u.moveAway()} for(Unit u){for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Up,15)}} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Train;Ranged;Up;9;S;C;Harvest;15;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Up,50) u.train(Ranged,Up,9) u.harvest(15) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,Weakest)} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Worker;Up;8;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;25;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Up,8) for(Unit u){if(u.isBuilder()) then {u.harvest(1)}} u.moveToUnit(Ally,Weakest) u.train(Worker,Right,25) if(u.isBuilder()) then {u.attack(LessHealthy)} else { u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Down;100;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Down;2;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(1) for(Unit u){u.build(Barracks,Down,1)}} u.train(Heavy,Down,20) if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Down,100) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){for(Unit u){u.attack(Strongest) u.train(Worker,Down,2)}} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Down;100;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(1) for(Unit u){u.build(Barracks,Down,1)}} u.train(Heavy,Down,20) if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Down,100) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Light;Left;50;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Left,15) u.idle() if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Closest)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}}} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,50) for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Light;Left;50;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Left,15) u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}}} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,50) for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Idle;S;C;Train;Light;Up;50;S;For_S;S;C;Build;Barracks;Up;50;S;For_S;S;C;Harvest;20	for(Unit u){u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.idle()}} u.train(Light,Up,50) for(Unit u){u.build(Barracks,Up,50)} for(Unit u){u.harvest(20)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Down;2;S;C;Train;Heavy;Right;20;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(20)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Down,2)} u.train(Heavy,Right,20) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;8;S;Empty;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;Train;Ranged;Down;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,8)} else { e}} for(Unit u){for(Unit u){u.harvest(9)} u.train(Ranged,Down,6) for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Closest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Strongest)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,LessHealthy)} else { e}}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;3;S;Empty;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Strongest;S;Empty	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,3)} else { e}} for(Unit u){for(Unit u){u.harvest(9)} for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} if(HaveQtdUnitsAttacking(6)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;3;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,3)} else { e}} for(Unit u){for(Unit u){u.harvest(9)} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} if(HaveQtdUnitsAttacking(6)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;10;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Weakest) for(Unit u){u.moveAway()}}}} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Light,Left,10)}} for(Unit u){u.harvest(3) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Left,10)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;100;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;1;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){if(OpponentHasNumberOfUnits(Light,100)) then {u.moveToUnit(Ally,Farthest)} else { u.harvest(1)}} for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Left,100)}}
S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Left,100)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;0;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Down,25)}} else { u.moveToUnit(Ally,Closest)}} for(Unit u){if(HasLessNumberOfUnits(Light,0)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;25;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Base;EnemyDir;8;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,25)} for(Unit u){u.idle() u.harvest(5)} u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(u.isBuilder()) then {u.build(Base,EnemyDir,8)} else { e}}}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.canAttack()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.train(Worker,Down,25)}} else { u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){if(HasNumberOfUnits(Light,3)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;25;S;S_S;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Base;EnemyDir;8;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,25)} u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(u.isBuilder()) then {u.build(Base,EnemyDir,8)} else { e}}} for(Unit u){u.idle()}} u.moveToUnit(Enemy,LessHealthy) if(HasLessNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.attack(Closest)}} else { u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;50;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy) if(HasLessNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Closest)} u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;100	for(Unit u){u.harvest(2)} for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,100)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Harvest;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Farthest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} u.harvest(7) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.harvest(6)} if(u.isBuilder()) then {u.attack(Farthest)} else { e}} for(Unit u){u.train(Worker,Up,50) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;15;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Harvest;8;S;C;Attack;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,Down,15) if(u.is(Ranged)) then {if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(8) u.attack(Closest)} if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;15;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;100;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.build(Barracks,EnemyDir,15) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(100)}} for(Unit u){for(Unit u){u.attack(Closest)} u.train(Light,Down,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;8	for(Unit u){u.build(Barracks,Left,50)} for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest) u.moveAway() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Heavy,EnemyDir,8)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;EnemyDir;8	for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Heavy,EnemyDir,8)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Right;9	for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Heavy,Right,9)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Up;20;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;20	for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){for(Unit u){u.idle()} u.harvest(8) if(u.canAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Up,20)}}} u.moveToUnit(Enemy,Farthest) u.train(Ranged,Left,20)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;1;S;C;Train;Ranged;Right;2;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;LessHealthy;S;C;Harvest;1;S;S_S;S;C;Train;Ranged;Left;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){u.train(Worker,Right,1) u.train(Ranged,Right,2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(LessHealthy)} u.harvest(1)} u.train(Ranged,Left,20) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;1;S;For_S;S;C;Train;Heavy;Up;9;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;7;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;C;Harvest;6;S;C;MoveAway	if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,LessHealthy)} if(HasNumberOfUnits(Worker,1)) then {for(Unit u){u.train(Heavy,Up,9)}} else { for(Unit u){u.attack(Strongest)}} for(Unit u){u.idle() u.build(Barracks,Left,7) u.train(Heavy,Up,7) u.harvest(6) u.moveAway()}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveAway()} u.attack(Weakest) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.moveToUnit(Ally,LessHealthy)} u.attack(Closest) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,Left,5)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.harvest(6)} u.attack(Weakest)} for(Unit u){u.train(Worker,Down,100)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Right;4;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(50)) then {if(u.canAttack()) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Right,4)} else { for(Unit u){u.train(Heavy,EnemyDir,100)}}}}} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)}} for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Ally,LessHealthy)} else { if(u.is(Worker)) then {u.harvest(20)}}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Left;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Light;Up;8;S;Empty;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(4) u.train(Worker,Left,20)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Light,Up,8)}} else { e} for(Unit u){u.build(Barracks,EnemyDir,7)}} if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.idle() u.attack(MostHealthy)}} for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,MostHealthy)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;20;S;C;Harvest;8;S;C;Attack;Closest;S;For_S;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){u.train(Worker,Up,20) u.harvest(8)} u.attack(Closest)} for(Unit u){for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Farthest)}}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;20;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Up,20)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy)}} if(HasNumberOfUnits(Barracks,4)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;C;Train;Worker;Up;6;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Ally,Weakest)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.harvest(15)} u.train(Worker,Right,5) if(u.canHarvest()) then {for(Unit u){for(Unit u){u.train(Worker,Up,6)}}} if(u.canAttack()) then {e} else { for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)}}} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;7;S;S_S;S;C;Train;Light;Right;15;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.attack(Strongest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.harvest(6)} for(Unit u){u.build(Barracks,Right,7)} u.train(Light,Right,15) if(u.canHarvest()) then {for(Unit u){u.train(Worker,Up,6)}} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Train;Worker;Down;5	for(Unit u){u.attack(MostHealthy)} for(Unit u){for(Unit u){u.train(Worker,Down,5)}}
S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Down;5	for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Down,5)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.harvest(3)} u.idle() u.attack(Closest) if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}}} for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.train(Worker,EnemyDir,50)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Strongest;S;C;Harvest;20;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()} else { for(Unit u){u.harvest(3) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(4)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Strongest)} else { u.harvest(20)}} for(Unit u){u.moveToUnit(Ally,Weakest)} u.attack(Weakest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle()}}} for(Unit u){u.moveAway() u.attack(Weakest)} for(Unit u){u.train(Worker,EnemyDir,20)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;For_S;S;C;Harvest;8;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()} else { for(Unit u){u.harvest(8)}}} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,20)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;For_S;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()} else { for(Unit u){u.harvest(8)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,20)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {u.harvest(9) for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveAway()} u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,EnemyDir,3)}
S;For_S;S;For_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;100;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle	for(Unit u){for(Unit u){u.attack(Farthest) for(Unit u){u.harvest(2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(100)) then {u.train(Worker,EnemyDir,50)} else { u.moveToUnit(Enemy,LessHealthy)} u.idle()}}}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;100;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle	for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(100)) then {u.train(Worker,EnemyDir,50)} else { u.moveToUnit(Enemy,LessHealthy)} u.idle()}}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;10;S;For_S;S;C;Harvest;20;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Light,Up,10) for(Unit u){u.harvest(20)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.idle()}} u.attack(Closest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;100;S;Empty;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Down;3;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,100) u.idle()} for(Unit u){if(u.isBuilder()) then {u.harvest(100)} else { e}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Down,3)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Enemy,Closest)} else { e} u.attack(Closest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;100;S;Empty;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Down;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,100) u.idle()} for(Unit u){if(u.isBuilder()) then {u.harvest(100)} else { e}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Down,3)} for(Unit u){if(OpponentHasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Enemy,Closest)} else { e} u.attack(Closest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;4;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Right;8	for(Unit u){u.train(Heavy,Up,15)} for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.harvest(6)} for(Unit u){if(HasNumberOfUnits(Ranged,4)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Right,8)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Train;Light;Right;6;S;S_S;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Strongest) u.train(Light,Right,6) u.train(Ranged,Left,25) for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;100;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;5;S;S_S;S;C;Harvest;15;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Light,Down,100)} u.idle() for(Unit u){if(OpponentHasNumberOfUnits(Light,5)) then {u.harvest(15) if(u.is(Worker)) then {for(Unit u){u.idle()}}}} u.build(Barracks,Left,5) u.harvest(4) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} if(OpponentHasNumberOfUnits(Barracks,50)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;9	for(Unit u){u.build(Barracks,Left,5) u.harvest(4) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} u.train(Light,EnemyDir,9)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;10;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;4;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Heavy;Left;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Ally;MostHealthy;S;Empty	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Down,10)}} for(Unit u){for(Unit u){u.train(Heavy,Down,4) u.harvest(3)} u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,Left,20) u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Ally,MostHealthy)} else { e}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;15;S;S_S;S;C;Idle;S;C;MoveAway	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Worker,Left,15)} u.idle() u.moveAway()}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Idle	for(Unit u){if(u.isBuilder()) then {u.moveAway() u.moveToUnit(Enemy,MostHealthy)} else { e} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.idle()}}
S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(7)} for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,Left,5)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} u.train(Worker,Down,25) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Light;Right;20;S;C;Build;Barracks;Up;4	for(Unit u){u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Light,Right,20) u.build(Barracks,Up,4)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;C;Idle;S;For_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Down,10)} u.idle()} for(Unit u){u.harvest(8)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Weakest)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,50)}} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;50;S;C;Idle;S;C;Harvest;7;S;For_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,LessHealthy)} else { u.train(Light,Down,50)} u.idle() u.harvest(7)} for(Unit u){for(Unit u){u.harvest(10)}} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(15) u.moveToUnit(Enemy,LessHealthy) u.attack(LessHealthy) if(u.canHarvest()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,20)}}} if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;8;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Up;100;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,5) for(Unit u){for(Unit u){u.build(Barracks,Up,8)} u.harvest(6) u.attack(Strongest)}} for(Unit u){u.train(Worker,Up,100)} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { e}}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,5) for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.harvest(2)} u.attack(Strongest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;Right;25;S;C;Harvest;4;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Up;10	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Right,25) u.harvest(4)} else { u.attack(Strongest)}} for(Unit u){u.train(Light,Up,10)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;Down;6;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Harvest;25;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,100) for(Unit u){for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Heavy,Down,6)} for(Unit u){u.idle()}}} for(Unit u){for(Unit u){u.harvest(25)}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;20	for(Unit u){u.idle() u.harvest(5) for(Unit u){u.build(Barracks,Left,10)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway()} u.train(Light,EnemyDir,3) u.attack(Weakest)} for(Unit u){if(u.is(Light)) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,20)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Left;25	for(Unit u){u.idle() u.harvest(5) for(Unit u){u.build(Barracks,Left,10)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.train(Light,EnemyDir,3) u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.is(Light)) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Left,25)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;100;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;0;S;C;Harvest;4;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;15;S;S_S;S;For_S;S;C;Train;Light;Up;6;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Down,100) if(OpponentHasNumberOfUnits(Heavy,0)) then {u.harvest(4)} else { u.moveToUnit(Ally,Weakest)}} if(HasNumberOfWorkersHarvesting(3)) then {u.attack(Weakest)} u.train(Worker,EnemyDir,15)} for(Unit u){u.train(Light,Up,6)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;1;S;If_B_then_S;B;HasNumberOfUnits;Heavy;100;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;C;Train;Light;Up;25;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;6;S;Empty;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;4;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Up,6) u.harvest(1)} if(HasNumberOfUnits(Heavy,100)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.train(Light,Up,25)}} for(Unit u){u.idle() u.moveToUnit(Enemy,Closest)} if(OpponentHasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(10) u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(6)) then {e} else { for(Unit u){if(OpponentHasNumberOfUnits(Worker,6)) then {e} else { for(Unit u){u.attack(Weakest)}}}}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,4)) then {if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Down,6) u.moveToUnit(Ally,Strongest) u.attack(Strongest) if(u.canAttack()) then {u.moveToUnit(Ally,Closest)}} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;1;S;If_B_then_S;B;HasNumberOfUnits;Light;20;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Up,6) u.harvest(1)} if(HasNumberOfUnits(Light,20)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Enemy,Closest)} if(HaveQtdUnitsAttacking(100)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;1;S;If_B_then_S;B;HasNumberOfUnits;Light;20;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Up,6) u.harvest(1)} if(HasNumberOfUnits(Light,20)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Enemy,Strongest)} if(HaveQtdUnitsAttacking(100)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Right;4;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,EnemyDir,8) u.train(Light,Left,2) if(u.isBuilder()) then {u.build(Barracks,Right,4)} u.idle() u.harvest(9) u.moveToUnit(Enemy,LessHealthy) u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;C;Train;Heavy;Down;4	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.idle()} u.moveToUnit(Ally,Closest) u.train(Light,Up,2) for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}} else { if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.train(Heavy,Down,4)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Harvest;4;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.idle()} u.train(Heavy,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Closest) u.train(Light,Up,2) for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Train;Heavy;EnemyDir;9;S;C;MoveAway;S;C;Train;Worker;Down;4;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Down;4;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.idle()} u.train(Heavy,EnemyDir,9) u.moveAway() u.train(Worker,Down,4) u.train(Light,Up,2) for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Down,4) for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Train;Worker;Down;4;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Down;4;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveAway() u.train(Heavy,EnemyDir,9) u.train(Worker,Down,4) u.train(Light,Up,2) for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Down,4) for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Down;4;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveAway() u.train(Light,Up,2) for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Down,4) for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Down;4;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.moveAway() u.train(Light,Up,2) for(Unit u){u.build(Barracks,Up,4) u.idle() u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Down,4) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;6;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;10;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;3;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { e}} for(Unit u){u.build(Barracks,Up,100)} if(HaveQtdUnitsAttacking(5)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){u.harvest(15) u.idle()} for(Unit u){if(HasLessNumberOfUnits(Worker,6)) then {e} else { for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Strongest)} else { e} for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,10)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,3) if(u.OpponentHasUnitInPlayerRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)}}}}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;9;S;C;Train;Heavy;Left;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;100;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;8;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;25;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.attack(LessHealthy)}} for(Unit u){u.idle() u.build(Barracks,Left,9) u.train(Heavy,Left,50) if(OpponentHasNumberOfUnits(Heavy,100)) then {u.moveToUnit(Ally,Closest)} else { u.train(Worker,Down,8)} if(HasNumberOfWorkersHarvesting(3)) then {if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.attack(Weakest)} u.harvest(4) u.attack(Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy)} u.harvest(25) u.moveAway() u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;C;Idle;S;For_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;2;S;For_S;S;C;Attack;Farthest;S;For_S;S;C;Train;Light;Left;9;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(MostHealthy) for(Unit u){u.build(Barracks,Left,5) u.idle()} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Heavy,2)) then {for(Unit u){u.attack(Farthest)}} for(Unit u){u.train(Light,Left,9)} if(OpponentHasNumberOfUnits(Base,6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;C;Idle;S;For_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Left;9;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,Left,5) u.idle()} for(Unit u){u.harvest(4)} for(Unit u){u.train(Light,Left,9)} if(OpponentHasNumberOfUnits(Base,6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;10;S;S_S;S;C;Harvest;25;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Up,10)} u.harvest(25) u.idle() for(Unit u){u.build(Barracks,Left,10)} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;50;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;MoveAway;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,50) u.build(Barracks,Right,50)} u.idle() u.harvest(50) u.moveAway()} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;50;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,50) u.build(Barracks,Right,50)} u.idle() u.harvest(50) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;100;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(3)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(MostHealthy) u.train(Worker,Down,100)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;100;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.attack(MostHealthy) u.train(Worker,Down,100)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Weakest)} u.train(Worker,Up,4) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,10)} u.moveToUnit(Ally,LessHealthy) u.moveAway() u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Worker,EnemyDir,50)} u.moveAway() u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;15;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;2	for(Unit u){for(Unit u){u.idle() if(u.canHarvest()) then {for(Unit u){u.train(Light,Up,4) u.moveAway()}} for(Unit u){u.build(Barracks,Up,1) u.harvest(15)} u.attack(Weakest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;15;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;2	for(Unit u){u.idle() if(u.canHarvest()) then {for(Unit u){u.train(Light,Up,4)}} for(Unit u){u.build(Barracks,Up,1) u.harvest(15)} u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Heavy;Right;5;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;15;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;2	for(Unit u){u.idle() if(u.canHarvest()) then {for(Unit u){u.train(Heavy,Right,5)}} for(Unit u){u.build(Barracks,Up,1) u.harvest(15)} u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,2)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;20;S;S_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(1) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.harvest(2) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.idle()} u.attack(LessHealthy) u.train(Worker,EnemyDir,20) if(u.canAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { e}} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;50;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Heavy,EnemyDir,5)} u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.idle() u.moveToUnit(Ally,Closest)} u.attack(MostHealthy)}} else { if(OpponentHasNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Weakest) u.attack(Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;50;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Left;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){for(Unit u){u.idle() u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest)} u.attack(MostHealthy)}} else { if(OpponentHasNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.train(Light,Left,8)}} for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){for(Unit u){u.idle() u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest)}}} else { u.moveToUnit(Ally,Closest) if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Left,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Attack;Weakest;S;C;Harvest;100;S;For_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Train;Heavy;Right;100;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.attack(Weakest)} else { u.harvest(100)} for(Unit u){u.build(Barracks,Left,50) u.train(Heavy,Right,100)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;EnemyDir;10;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;9;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.harvest(2)} u.train(Worker,EnemyDir,10) for(Unit u){u.attack(Closest)}} for(Unit u){if(HasNumberOfUnits(Worker,9)) then {e} else { u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;7;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Left;25;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;Empty	for(Unit u){u.build(Barracks,Down,2)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(7)}} if(OpponentHasNumberOfUnits(Worker,15)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Left,25)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;C;Harvest;9;S;C;Train;Light;Up;100;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Up;6	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,10) u.harvest(9)} u.train(Light,Up,100)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.train(Worker,Up,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Right;6;S;C;Idle;S;C;Train;Light;Left;50;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.harvest(6) u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,6)} u.idle() u.train(Light,Left,50)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Right;6;S;C;Idle;S;C;Train;Light;Left;50;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,6)} u.idle() u.train(Light,Left,50)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest)} else { e}}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;20;S;If_B_then_S;B;CanAttack;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.build(Barracks,Right,9)}} u.harvest(15) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Right,20)} if(u.canAttack()) then {u.moveAway()}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;20	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.build(Barracks,Right,9)}} u.harvest(15) u.attack(Strongest) for(Unit u){u.train(Light,Right,20)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;20	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.build(Barracks,Right,9)}} u.harvest(15) u.attack(LessHealthy) for(Unit u){u.train(Light,Right,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;25;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Harvest;9;S;S_S;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Right;3;S;Empty;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Right;2;S;C;Train;Light;Down;4;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;8;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;Up;15;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.idle() for(Unit u){for(Unit u){u.idle()} u.harvest(25)}} else { e} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.harvest(9)} else { u.train(Heavy,Right,7) for(Unit u){u.idle()} u.harvest(2) if(u.canAttack()) then {u.build(Barracks,Right,3)} else { e} u.attack(Farthest) if(HasLessNumberOfUnits(Heavy,1)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Heavy,Right,2)} u.train(Light,Down,4) if(u.is(Base)) then {e} else { u.moveToUnit(Ally,Weakest)}} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,Closest)} else { e} u.attack(MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.train(Light,Left,8)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,Up,15) for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;10;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;For_S;S;C;Train;Ranged;Left;2;S;S_S;S;C;Train;Worker;Up;50;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Up,10)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(25) u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){for(Unit u){u.train(Ranged,Left,2)}}} u.train(Worker,Up,50) for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Idle;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Up;25;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.idle()}} else { e} u.attack(LessHealthy) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Up,25)}} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;25	for(Unit u){u.moveToUnit(Enemy,Closest) u.idle() if(u.canHarvest()) then {for(Unit u){u.idle()}} else { u.moveToUnit(Ally,MostHealthy)} u.moveAway() for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,25)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;100;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Left,100)} u.harvest(6) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest)}}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;Down;20;S;S_S;S;C;Train;Ranged;Down;2;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Down;1	for(Unit u){u.train(Heavy,Left,8) u.idle() u.attack(Weakest) u.train(Worker,Down,20) u.train(Ranged,Down,2) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Down,1)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;25;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Down;4;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Closest;S;For_S;S;C;Harvest;4	for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,25) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveAway()}} for(Unit u){if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Down,4)}} for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Strongest) u.attack(Closest) for(Unit u){u.harvest(4)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;25;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Down;4;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;4;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,25) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.harvest(4) u.moveAway()}} for(Unit u){if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Down,4)}} for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(4)} for(Unit u){u.attack(Strongest)}}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Left;15;S;For_S;S;C;Build;Barracks;Up;15	for(Unit u){u.idle()} for(Unit u){u.harvest(9) if(HasNumberOfWorkersHarvesting(1)) then {e} else { u.moveToUnit(Enemy,MostHealthy)} if(u.isBuilder()) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} else { u.train(Light,Left,15) for(Unit u){u.build(Barracks,Up,15)}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) u.idle() u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest)}} else { u.moveAway() u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { e}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest)}} else { u.moveAway() u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { e}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.idle() u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(4) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest)}} else { u.moveToUnit(Enemy,Closest) u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { e}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Heavy,Up,8) u.idle() for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}}} else { e}} for(Unit u){u.build(Barracks,Down,6) u.harvest(20) u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {for(Unit u){u.moveAway()}} if(u.canAttack()) then {u.attack(Strongest) u.moveToUnit(Enemy,Strongest)} u.train(Heavy,Right,9)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Right;9;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle() for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e}} for(Unit u){u.build(Barracks,Down,6) u.harvest(20) u.moveToUnit(Enemy,Strongest) if(u.canAttack()) then {u.attack(Strongest) u.moveToUnit(Enemy,Strongest)} u.train(Heavy,Right,9)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Right;9;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle()} else { e}} for(Unit u){u.build(Barracks,Down,6) u.harvest(20) u.moveToUnit(Enemy,Strongest) if(u.canAttack()) then {u.attack(Strongest) u.moveToUnit(Enemy,Strongest)} u.train(Heavy,Right,9)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Train;Heavy;Right;20;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Down,6) u.train(Heavy,Right,20) u.idle() u.train(Light,EnemyDir,50) u.harvest(3) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Train;Heavy;Right;20;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Down,6) u.train(Heavy,Right,20) u.idle() u.train(Light,EnemyDir,50) u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Left,20) u.harvest(7) for(Unit u){u.train(Light,Right,10)} u.idle() u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Heavy,100)) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Left,20) u.harvest(7) for(Unit u){u.train(Light,Right,10)} u.idle() u.moveAway() u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Heavy,100)) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;LessHealthy;S;C;Build;Barracks;Left;2;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Train;Light;Left;25;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(20) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(LessHealthy)} else { u.build(Barracks,Left,2)}} u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Light,Left,25)}} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;3;S;C;Attack;Closest;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;EnemyDir;3;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;6	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,15)}} for(Unit u){u.train(Worker,Down,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(3) u.attack(Closest)} else { u.attack(LessHealthy)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { e}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,6)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1) u.harvest(100) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}} for(Unit u){for(Unit u){u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}}} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){for(Unit u){u.train(Heavy,Left,100)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1) u.harvest(100) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}} for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,Strongest)}} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.train(Heavy,Left,100)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1) u.harvest(100) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}} for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,Strongest)}} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.train(Heavy,Left,100)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;3;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1) u.harvest(100) if(u.isBuilder()) then {if(u.is(Ranged)) then {u.moveToUnit(Ally,Closest)}} if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}} for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,Strongest)}} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Light,Up,3) u.moveAway() u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Heavy,Left,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;3;S;C;Idle;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest	for(Unit u){u.train(Ranged,Left,3) u.idle() u.moveAway() for(Unit u){u.train(Worker,Right,20) u.harvest(4)}} for(Unit u){u.moveToUnit(Enemy,Farthest) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;3;S;C;Idle;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest	for(Unit u){u.train(Ranged,Left,3) u.idle() u.moveAway() for(Unit u){u.train(Worker,Right,20) u.harvest(4)}} for(Unit u){u.train(Light,Down,4) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HaveQtdUnitsAttacking(7)) then {if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}}} else { for(Unit u){u.harvest(6)}}} if(OpponentHasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.train(Worker,Right,10)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;S_S;S;For_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HaveQtdUnitsAttacking(7)) then {if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}}} else { for(Unit u){u.harvest(6)}}} if(OpponentHasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.harvest(7)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Up;6;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(4) u.train(Worker,Up,6) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) u.idle()} u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;9	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(7) for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,Up,9)}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;6;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Train;Ranged;Left;15;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;100;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(6)} for(Unit u){if(HasLessNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,EnemyDir,6) for(Unit u){u.train(Ranged,Left,15)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Ally,Closest) u.train(Worker,Up,100) u.moveToUnit(Ally,Weakest)}} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}} if(OpponentHasNumberOfUnits(Heavy,100)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;6;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Train;Ranged;Left;15;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(6)} for(Unit u){if(HasLessNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,EnemyDir,6) for(Unit u){u.train(Ranged,Left,15)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}} if(OpponentHasNumberOfUnits(Heavy,100)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;6;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Ranged;Left;15;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(6)} for(Unit u){if(HasLessNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Up,3) for(Unit u){u.train(Ranged,Left,15)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}} if(OpponentHasNumberOfUnits(Heavy,100)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;6;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;Train;Light;Right;2;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;100;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(6)} for(Unit u){for(Unit u){u.train(Heavy,Right,10) u.train(Light,Right,2) for(Unit u){u.moveToUnit(Enemy,Weakest)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)}} else { e} u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(MostHealthy)} if(OpponentHasNumberOfUnits(Heavy,100)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;10;S;C;Train;Light;Right;2;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(6)} for(Unit u){for(Unit u){u.train(Heavy,Left,10) u.train(Light,Right,2) for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Train;Worker;Left;20	for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}} for(Unit u){if(HasLessNumberOfUnits(Worker,2)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.train(Worker,Left,20)}}
S;S_S;S;For_S;S;C;Build;Base;Right;3;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Idle;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Base,Right,3)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,50) u.idle()} for(Unit u){u.harvest(2)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Ally,Weakest)} for(Unit u){u.attack(Strongest) if(u.is(Light)) then {u.moveToUnit(Ally,Closest)}}}
S;S_S;S;For_S;S;C;Build;Base;Down;3;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Idle;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Base,Down,3)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,50) u.idle()} for(Unit u){u.harvest(2)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Ally,Weakest)} for(Unit u){u.attack(Closest) if(u.is(Light)) then {u.moveToUnit(Ally,Closest)}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;6;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(4) u.moveAway()} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,EnemyDir,50)}} for(Unit u){u.build(Barracks,EnemyDir,1) u.attack(Weakest)} for(Unit u){u.train(Worker,Right,6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;6;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(4) u.moveAway()} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,50)}} for(Unit u){u.build(Barracks,EnemyDir,1) u.attack(Weakest)} for(Unit u){u.train(Worker,Right,6)} for(Unit u){u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Build;Barracks;Up;3;S;S_S;S;For_S;S;C;Attack;Farthest;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.harvest(1)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} u.build(Barracks,Up,3)} for(Unit u){u.attack(Farthest)} for(Unit u){u.train(Worker,Right,100)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.harvest(1)} for(Unit u){u.attack(MostHealthy)} for(Unit u){u.train(Worker,Right,100)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.harvest(3) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.build(Barracks,Left,7)}} u.attack(Strongest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Light;Left;10;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Light,Left,10) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Left,7)}} for(Unit u){u.harvest(2)} for(Unit u){if(u.canHarvest()) then {e} else { u.attack(Weakest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveAway;S;S_S;S;C;Train;Light;Down;10;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;C;Train;Light;Right;15	for(Unit u){u.harvest(2) u.moveAway() u.train(Light,Down,10) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}}} for(Unit u){u.build(Barracks,Right,25) u.train(Light,Right,15)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;C;Train;Light;Right;15	for(Unit u){u.harvest(2) u.moveAway() u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}}} for(Unit u){u.build(Barracks,Right,25) u.train(Light,Right,15)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;25;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Heavy,EnemyDir,5) u.attack(LessHealthy) for(Unit u){u.idle() u.build(Barracks,Left,4) if(u.is(Barracks)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) for(Unit u){u.train(Worker,EnemyDir,4)} if(u.canHarvest()) then {if(OpponentHasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Ally,LessHealthy)}}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;Train;Light;Left;8	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){u.harvest(3)} if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.attack(LessHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.train(Light,Left,8)}}
S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,50)}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;50;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(5)} u.train(Worker,Left,50)} for(Unit u){u.attack(Strongest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;Empty;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Attack;Strongest;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;9;S;For_S;S;C;Train;Worker;Right;8;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Train;Light;Right;100	for(Unit u){for(Unit u){u.harvest(1) u.idle()}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.attack(LessHealthy)}}} else { e}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(Strongest)} u.build(Barracks,EnemyDir,1) u.harvest(9)} for(Unit u){u.train(Worker,Right,8)} for(Unit u){if(u.is(Light)) then {e} else { u.train(Light,Right,100)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Strongest;S;C;Attack;Strongest;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;9;S;For_S;S;C;Train;Worker;Right;8;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Train;Light;Right;100	for(Unit u){u.harvest(1) u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Strongest)}} else { u.attack(Strongest)} u.build(Barracks,EnemyDir,1) u.harvest(9)} for(Unit u){u.train(Worker,Right,8)} for(Unit u){if(u.is(Light)) then {e} else { u.train(Light,Right,100)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Idle;S;C;Harvest;7;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Light;Right;1;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Left;3;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.idle() u.harvest(7) u.attack(Strongest)}} for(Unit u){if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.train(Heavy,EnemyDir,9) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Light,Right,1)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Left,3)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;9;S;C;Train;Worker;Up;7;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;100	for(Unit u){u.idle() u.build(Barracks,Down,7) u.harvest(9) u.train(Worker,Up,7)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} else { e}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Light,Right,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Up;50;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Light,Right,20) if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Up,50)} else { e}}}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} for(Unit u){u.moveAway()} for(Unit u){u.train(Light,Right,20) if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){for(Unit u){u.attack(Weakest)}}}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} for(Unit u){u.attack(MostHealthy) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;100;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,7)} for(Unit u){u.idle()} for(Unit u){u.harvest(100)}} for(Unit u){for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;7;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;100;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Right;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){if(HasLessNumberOfUnits(Heavy,7)) then {u.attack(Weakest)}}} else { u.idle() if(HasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Strongest)} else { u.attack(MostHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,100)} u.train(Heavy,Right,6)}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;100;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;For_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Right;6	for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}} else { if(HasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Strongest)} else { e} for(Unit u){for(Unit u){u.idle()}} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,100)} u.train(Heavy,Right,6)}}}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Right;9;S;C;Build;Barracks;EnemyDir;100	for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}} else { if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Worker,Down,3)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Right,9)} u.build(Barracks,EnemyDir,100)}}}}
S;For_S;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}} else { if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Worker,Down,3)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;20;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,25)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}} else { u.train(Light,Right,20) u.attack(Strongest)}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;For_S;S;S_S;S;C;Harvest;15;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,Left,25)} for(Unit u){u.harvest(15) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,25)} u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(15) if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()}} u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(1)} u.moveToUnit(Ally,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {e} else { u.idle()}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)} u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Attack;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(1)} u.moveToUnit(Ally,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {e} else { u.idle()}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(Closest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(1)} u.moveToUnit(Ally,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {e} else { u.idle()}} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Right;20;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Up,25) u.harvest(1)} u.moveToUnit(Ally,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { u.train(Light,Right,20) if(u.canHarvest()) then {e} else { u.idle()}} u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;20;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.train(Light,Left,20) u.build(Barracks,EnemyDir,20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.is(Worker)) then {u.harvest(20)}} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Right;100;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;For_S;S;C;Harvest;7;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Light;Left;10;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Ranged;EnemyDir;100;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Worker,3)) then {u.moveToUnit(Enemy,Weakest)} u.build(Barracks,Right,100)} if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.harvest(7)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveAway()} u.train(Light,Left,10) if(u.is(Barracks)) then {u.train(Ranged,EnemyDir,100)}} for(Unit u){u.attack(MostHealthy)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Right;100;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;Harvest;7;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Left;9;S;C;Train;Light;Left;10;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Worker,3)) then {u.moveToUnit(Enemy,Weakest)} u.build(Barracks,Right,100)} if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.harvest(7)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveAway() u.train(Worker,Left,9)} u.train(Light,Left,10)} for(Unit u){u.attack(MostHealthy)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){for(Unit u){u.attack(Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)}}}} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){for(Unit u){u.train(Worker,Left,9)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;C;Harvest;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;100;S;C;Train;Heavy;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,2)} else { u.idle()}} u.harvest(20) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Weakest) if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Right,100)} u.train(Heavy,Up,4)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;C;Harvest;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Left;7;S;For_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,2)} else { u.idle()}} u.harvest(20) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,Left,7)} for(Unit u){u.train(Worker,Right,100)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Worker;Up;50;S;C;Harvest;20	for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(1) for(Unit u){u.idle()}} u.moveAway() for(Unit u){u.train(Worker,Up,50)} u.harvest(20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;100	for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(1) for(Unit u){u.idle()} u.attack(LessHealthy)} u.train(Worker,EnemyDir,100)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.attack(Closest)} for(Unit u){u.train(Worker,Right,6) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,Weakest)}} if(HasNumberOfUnits(Light,3)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Idle;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,4) u.idle()} for(Unit u){for(Unit u){if(u.isBuilder()) then {u.harvest(50)} else { u.moveToUnit(Enemy,Weakest)}}} for(Unit u){for(Unit u){u.train(Heavy,Right,2)} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Worker;Down;9	for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}} for(Unit u){u.train(Worker,Down,9)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;Empty;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;Strongest;S;C;Train;Worker;Left;10;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.harvest(1)} else { e} if(u.canHarvest()) then {u.attack(Strongest)} else { u.train(Worker,Left,10)}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;Build;Barracks;Left;20;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;C;Train;Light;EnemyDir;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(5)} for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {u.build(Barracks,Left,20)} for(Unit u){if(HasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Down,7) u.train(Light,EnemyDir,100)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;15;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;Empty	for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {u.attack(LessHealthy)} else { u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,15)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} else { e}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;7;S;C;MoveAway;S;S_S;S;C;Build;Base;Down;4;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;EnemyDir;15;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){if(u.isBuilder()) then {u.moveAway() for(Unit u){if(u.is(Worker)) then {u.harvest(7)} u.moveAway()} u.build(Base,Down,4) u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Ally,Weakest)} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Enemy,Closest)} else { e} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,EnemyDir,15)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { e} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){if(u.is(Worker)) then {u.attack(Closest)}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} else { e} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,EnemyDir,8)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Worker,Right,50) u.moveAway()} if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;MoveAway;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Down;15;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveAway;S;For_S;S;C;Train;Ranged;Up;1;S;For_S;S;C;Attack;Farthest	for(Unit u){u.idle() for(Unit u){u.harvest(7)}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.moveAway()}} if(u.canAttack()) then {u.build(Barracks,Down,15)} for(Unit u){u.train(Worker,Right,50) u.moveAway()} for(Unit u){u.train(Ranged,Up,1)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;6;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Farthest	for(Unit u){u.idle() u.train(Worker,Up,6) for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;100;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(7)} for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Down,100)} for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.attack(Strongest) for(Unit u){if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}}}}
S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;2;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest) u.idle() u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,2)} u.moveAway() u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;8;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Base;Down;3;S;C;MoveAway;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Left,8)} for(Unit u){u.harvest(4)} u.build(Base,Down,3) u.moveAway()} for(Unit u){for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;8;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Base;Left;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Left,8)} for(Unit u){u.harvest(4)} u.build(Base,Left,3) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Left;10;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle() u.harvest(4) u.train(Worker,Left,10)} u.moveToUnit(Ally,Weakest) u.attack(Closest) u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;7;S;C;Attack;MostHealthy;S;C;Train;Worker;Right;25	for(Unit u){u.idle()} for(Unit u){u.harvest(2)} for(Unit u){for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.harvest(7)} u.attack(MostHealthy)}} u.train(Worker,Right,25)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;25	for(Unit u){u.idle()} for(Unit u){u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,25)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Left;50;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Ranged;Up;6;S;C;Harvest;20;S;S_S;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Left,50)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.idle()} u.attack(MostHealthy)} else { e} u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Up,6) u.harvest(20) u.train(Worker,Up,20) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;8;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;25;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.train(Light,Right,8)} for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.harvest(25)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.idle() u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Harvest;7;S;S_S;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,50) u.harvest(7) u.attack(Farthest) u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,3)} for(Unit u){for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Harvest;7;S;S_S;S;C;Attack;Farthest;S;S_S;S;C;Train;Ranged;Left;9;S;C;Train;Worker;EnemyDir;3;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,50) u.harvest(7) u.attack(Farthest) u.train(Ranged,Left,9) u.train(Worker,EnemyDir,3)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;C;Train;Worker;Down;7;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Heavy,Left,7)} u.train(Worker,Down,7) u.attack(Closest) for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Down,7)}} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.canHarvest()) then {e} else { u.train(Light,EnemyDir,3)} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;1;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) for(Unit u){u.harvest(1)}} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Light,Down,3)} for(Unit u){u.build(Barracks,Down,25)} for(Unit u){u.harvest(4) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()}
S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Weakest	for(Unit u){if(HaveQtdUnitsAttacking(6)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;Closest	for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Down,10)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;5;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Worker;Right;20;S;C;Idle	for(Unit u){u.attack(MostHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(5)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,20) u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(1) u.attack(LessHealthy) u.train(Worker,Left,9) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;6;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(1)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Closest) u.train(Worker,EnemyDir,25)} if(HasLessNumberOfUnits(Light,6)) then {if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)}} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;EnemyDir;25;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) u.harvest(4)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,EnemyDir,25)} if(HasLessNumberOfUnits(Light,6)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)}} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Build;Base;EnemyDir;50;S;C;Harvest;2;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;25;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Base,EnemyDir,50)}} u.harvest(2)} for(Unit u){for(Unit u){u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,EnemyDir,25)} u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;15;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Ranged;Down;25	for(Unit u){u.harvest(8) u.idle() for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,15)} else { e}} u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy) for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Ranged,Down,25)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;C;Build;Barracks;Right;2;S;For_S;S;C;Harvest;15;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;100;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(6) u.build(Barracks,Right,2)} for(Unit u){u.harvest(15)} for(Unit u){u.attack(Strongest)} for(Unit u){u.train(Light,Up,5) u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Left,9)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)} if(u.HasUnitInOpponentRange()) then {for(Unit u){if(HasLessNumberOfUnits(Heavy,100)) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Ally,Strongest)}}}}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,50) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;100;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,100)} else { u.attack(Weakest)} u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4)} u.moveToUnit(Enemy,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;100;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,100)} else { u.attack(Weakest)} u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4)} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Up;20;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Train;Ranged;Left;20;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Attack;Strongest;S;C;Attack;Farthest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.harvest(3)}} else { u.train(Worker,Up,20) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Left,20) if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveAway()} u.attack(Strongest)} u.attack(Farthest) for(Unit u){u.idle()}} u.build(Barracks,Right,7) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.moveAway()} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Up;20;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Ranged;Left;20;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(3)}} else { u.train(Worker,Up,20) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Left,20) if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest)} else { e}} for(Unit u){u.idle()}} u.build(Barracks,Right,7) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest) u.moveAway()} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Right;100;S;Empty;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Down;5;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} for(Unit u){u.harvest(7)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.attack(Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Right,100)} else { e} for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,Farthest)} u.train(Heavy,Down,5) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;10;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(2)} if(OpponentHasNumberOfUnits(Worker,15)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.idle()} for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,MostHealthy)} if(u.canHarvest()) then {u.attack(LessHealthy)}} u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Left;9;S;For_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.harvest(3)} if(OpponentHasNumberOfUnits(Heavy,1)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Left,9)} for(Unit u){for(Unit u){if(u.canHarvest()) then {u.attack(LessHealthy)}}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;6;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;Empty;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Idle;S;For_S;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,EnemyDir,9)} if(HasLessNumberOfUnits(Ranged,6)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { e}}} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,50) u.idle()}} for(Unit u){u.train(Worker,Down,3)} for(Unit u){u.harvest(8)} for(Unit u){u.train(Worker,Down,4) for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;6;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Idle;S;For_S;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;C;Harvest;8;S;For_S;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,EnemyDir,9)} if(HasLessNumberOfUnits(Ranged,6)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { e}}} for(Unit u){u.build(Barracks,EnemyDir,50) u.idle()} for(Unit u){u.train(Worker,Down,3)} for(Unit u){u.harvest(8)} for(Unit u){u.train(Worker,Down,4) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;100;S;C;Attack;LessHealthy;S;S_S;S;C;Harvest;100;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Up;7;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Right,8)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100) u.attack(LessHealthy)} else { u.harvest(100) u.train(Ranged,EnemyDir,20)}} for(Unit u){for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Up,7)} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;25;S;C;Train;Worker;Up;5;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Down;1;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;Harvest;3;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Train;Worker;Up;20;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,50)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,25) u.train(Worker,Up,5)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Down,1)} u.harvest(100) for(Unit u){u.train(Heavy,Right,10) u.harvest(3)} u.moveAway() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,EnemyDir,10) u.train(Worker,Up,20)}}}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;25;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;Harvest;3;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Train;Worker;Up;20;S;For_S;S;C;Build;Barracks;Up;8;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,50)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,25)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.harvest(100) for(Unit u){u.train(Heavy,Right,10) u.harvest(3)} u.moveAway() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,EnemyDir,10) u.train(Worker,Up,20)} for(Unit u){u.build(Barracks,Up,8)}}}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;S_S;S;C;Train;Ranged;Down;9;S;C;Harvest;1;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;100;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Ranged,Down,9) u.harvest(1)} for(Unit u){for(Unit u){u.moveAway()} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfUnits(Heavy,100)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;S_S;S;C;Train;Ranged;Down;7;S;C;Harvest;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;10;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Ranged,Down,7) u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(HasNumberOfUnits(Barracks,10)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;10;S;S_S;S;C;Train;Heavy;Right;1;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S;B;CanHarvest;S;C;Attack;MostHealthy;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;EnemyDir;50;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,10) u.train(Heavy,Right,1) u.harvest(7)}} for(Unit u){for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {if(u.canHarvest()) then {u.attack(MostHealthy)}}} u.idle()} u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Left,2)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,MostHealthy)} else { for(Unit u){u.train(Heavy,EnemyDir,7)}} u.train(Light,EnemyDir,50)} for(Unit u){u.train(Worker,Left,9) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;10;S;S_S;S;C;Train;Heavy;Right;1;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;If_B_then_S;B;CanHarvest;S;C;Attack;MostHealthy;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;EnemyDir;50	for(Unit u){u.build(Barracks,Left,10) u.train(Heavy,Right,1) u.harvest(7)} for(Unit u){for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {if(u.canHarvest()) then {u.attack(MostHealthy)}}} u.idle()} u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Left,2)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,MostHealthy)} else { for(Unit u){u.train(Heavy,EnemyDir,7)}} u.train(Light,EnemyDir,50)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;EnemyDir;4;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Heavy;Right;1;S;For_S;S;C;Train;Ranged;Right;5	for(Unit u){u.build(Barracks,Down,100) u.idle() u.harvest(4) if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Light,EnemyDir,4) u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Heavy,Right,1)} for(Unit u){u.train(Ranged,Right,5)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Idle;S;C;Harvest;50;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;2;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Up;9;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.idle() u.harvest(50)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Enemy,Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)}} for(Unit u){for(Unit u){u.train(Worker,Up,2)} u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Ally,LessHealthy)} u.train(Light,Up,9) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.is(Base)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)}}}} u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,20) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Train;Light;Down;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;2;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Up;9;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.idle() u.harvest(50)} u.train(Light,Down,1) if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.train(Worker,Up,2)} u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.train(Light,Up,9) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Train;Light;Down;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Up;9;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.idle() u.harvest(50)} u.train(Light,Down,1) if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.attack(Weakest) if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Weakest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.train(Light,Up,9) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Train;Light;Down;1;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Up;9	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.idle() u.harvest(6)} u.train(Light,Down,1)} for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Up,9)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Train;Light;Down;1;S;For_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;25;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Up;9	for(Unit u){for(Unit u){u.build(Barracks,Left,20) u.idle() u.harvest(6)} u.train(Light,Down,1)} for(Unit u){for(Unit u){u.moveAway() if(u.canHarvest()) then {if(OpponentHasNumberOfUnits(Base,25)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,LessHealthy)}} u.attack(Closest)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Up,9)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Train;Light;Down;15;S;For_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.idle() u.harvest(6)} u.train(Light,Down,15)} for(Unit u){for(Unit u){u.moveAway() for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Harvest;9;S;C;Train;Light;Down;15;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.idle() u.harvest(9)} u.train(Light,Down,15)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest) u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Harvest;9;S;C;Train;Light;Down;15;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;Left;2;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.idle() u.harvest(9)} u.train(Light,Down,15)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest) u.train(Worker,Left,2) u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;Train;Worker;Left;2;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.idle() u.harvest(9)} u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Left,6) u.train(Worker,Left,2) u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Left;6;S;C;Train;Worker;Left;2;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Strongest) for(Unit u){u.build(Barracks,Left,1) u.idle() u.harvest(9)} u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Left,6) u.train(Worker,Left,2)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Harvest;15;S;S_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Left;6;S;C;Train;Worker;Left;2;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.harvest(15) u.idle() u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Left,6) u.train(Worker,Left,2)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Down;9;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Harvest;15;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;2	for(Unit u){u.idle() u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Down,9)} for(Unit u){u.build(Barracks,Left,1) u.harvest(15) u.idle() u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)} u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Down;9;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Harvest;15;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;2	for(Unit u){u.idle() u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Down,9)} for(Unit u){u.build(Barracks,Left,1) u.harvest(15) u.idle() u.moveToUnit(Enemy,MostHealthy) u.attack(Closest)} u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,2)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.build(Barracks,Down,20)} for(Unit u){for(Unit u){u.harvest(20)} u.attack(MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)}} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Down;100;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;25;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,100) for(Unit u){u.harvest(2)}} for(Unit u){u.build(Barracks,Left,20) u.attack(MostHealthy) u.train(Worker,Left,25)} for(Unit u){u.moveToUnit(Ally,Farthest)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;6;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;20;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.train(Ranged,Right,6) u.build(Barracks,Up,1)} for(Unit u){u.harvest(20)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Up;5;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { e}} for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.attack(LessHealthy) u.train(Light,Up,5)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Down;5;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveAway;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;8;S;C;Train;Ranged;Down;4;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.harvest(2) u.train(Heavy,Down,5) u.train(Worker,Right,2) u.moveAway() if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Down,6)} u.idle() for(Unit u){u.build(Barracks,Down,8)} u.train(Ranged,Down,4) u.moveToUnit(Ally,MostHealthy) if(u.isBuilder()) then {if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Farthest)} else { e}}} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;S_S;S;For_S;S;C;Build;Barracks;Down;8;S;C;Train;Ranged;Down;4;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(2) u.idle() u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest) u.moveAway() if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Down,6)} for(Unit u){u.build(Barracks,Down,8)} u.train(Ranged,Down,4) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Build;Barracks;Down;8;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(2) u.idle() u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest) u.moveAway() if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Light,Down,6)} for(Unit u){u.build(Barracks,Down,8)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;C;Train;Heavy;EnemyDir;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.harvest(3) u.moveAway()} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.train(Worker,Right,25) u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.harvest(15)} u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;C;Train;Heavy;EnemyDir;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.harvest(3) u.moveAway()} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.attack(Strongest) u.train(Worker,Right,25) u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Light;Left;50;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(5) u.idle() if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { u.train(Light,Left,50)}} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Right,25) u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Idle;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;15;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;20	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.idle() u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,4)}}} for(Unit u){u.moveToUnit(Enemy,Farthest)} if(OpponentHasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Worker,Up,20)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,9)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle()} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;4;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.moveToUnit(Ally,MostHealthy) if(OpponentHasNumberOfUnits(Worker,3)) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.harvest(9)} u.attack(Closest)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,6) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)}} if(OpponentHasNumberOfUnits(Base,4)) then {u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() if(OpponentHasNumberOfUnits(Worker,3)) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.harvest(9)} u.attack(Closest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Left,6) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)}} if(OpponentHasNumberOfUnits(Base,4)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Worker;Right;6;S;C;Train;Worker;Left;100;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,1)}} if(u.canAttack()) then {e} else { u.train(Worker,Right,6) u.train(Worker,Left,100)} if(u.canHarvest()) then {for(Unit u){u.harvest(4)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}} u.moveAway() u.train(Ranged,EnemyDir,20)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;1;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,1)}} if(u.canHarvest()) then {for(Unit u){u.harvest(4)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,20)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;1;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,1)}} if(u.canHarvest()) then {for(Unit u){u.harvest(4)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.canAttack()) then {e} else { u.train(Worker,Right,3)}}} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,20)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Train;Light;Up;100;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;1;S;S_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;9;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,100)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,1)}} u.idle() u.harvest(8) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway() u.train(Worker,Up,9)}} u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;50;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Ranged;Down;1;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;2;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Up;7	for(Unit u){u.harvest(50) for(Unit u){if(u.canAttack()) then {for(Unit u){for(Unit u){u.build(Barracks,Up,5)}}}}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Ranged,Down,1)} for(Unit u){for(Unit u){u.train(Worker,Right,2)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Light,Up,7)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;50;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;For_S;S;C;Train;Light;Up;100	for(Unit u){u.harvest(50) for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,Up,5)}}}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Right,2)} for(Unit u){u.train(Light,Up,100)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;7;S;Empty;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Up;20;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Left;25;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){if(HasNumberOfUnits(Light,7)) then {e} else { u.idle()}} for(Unit u){u.harvest(2) u.moveAway() u.train(Heavy,Up,20)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,25)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Heavy;Up;20;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Heavy,Up,20) u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Heavy;Up;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Heavy,Up,20) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.harvest(6)} for(Unit u){u.train(Heavy,Up,20) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;S_S;S;C;Harvest;6;S;C;Train;Light;Right;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.harvest(6) u.train(Light,Right,4)} for(Unit u){u.train(Heavy,Up,20)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;S_S;S;C;Harvest;20;S;C;Train;Light;Right;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.harvest(20) u.train(Light,Right,4)} for(Unit u){u.train(Heavy,Down,20)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;5;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Light;Left;9	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,25) u.harvest(5)} for(Unit u){for(Unit u){u.attack(LessHealthy)}} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Heavy,Right,100)} for(Unit u){u.train(Light,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;For_S;S;C;Train;Light;Left;1;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Up;2	for(Unit u){u.idle() u.harvest(10) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,20) for(Unit u){u.train(Light,Left,1)} u.moveAway() u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Up,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Left;20;S;For_S;S;C;Train;Light;Left;1;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Up;2	for(Unit u){u.idle() u.harvest(10) u.attack(Closest) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,20) for(Unit u){u.train(Light,Left,1)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Up,2)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;Empty;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){for(Unit u){if(u.canAttack()) then {u.harvest(1)} else { e}} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Ally,LessHealthy)} else { u.train(Worker,EnemyDir,25)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {e} else { for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;Right;100;S;C;Harvest;3;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Ranged,Left,5)} u.build(Barracks,Right,100) u.harvest(3) u.attack(Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Harvest;5;S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;Train;Worker;Right;15	for(Unit u){u.idle()} for(Unit u){u.harvest(1) u.harvest(5) for(Unit u){u.build(Barracks,Up,7)} u.moveAway()} for(Unit u){for(Unit u){u.train(Light,Down,7)} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){for(Unit u){for(Unit u){u.attack(MostHealthy)}}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} if(OpponentHasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)} else { e}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { e}} for(Unit u){u.train(Worker,Right,15)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){u.attack(Weakest) u.train(Worker,Down,25) for(Unit u){u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Down;25;S;For_S;S;C;Harvest;2	for(Unit u){u.attack(Weakest) for(Unit u){u.idle()} u.train(Worker,Down,25) for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.canHarvest()) then {u.idle()} else { e} if(u.canHarvest()) then {for(Unit u){u.train(Worker,EnemyDir,20)}} u.harvest(4) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;25;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;25;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,Down,2)} u.moveToUnit(Enemy,Strongest) u.train(Light,Up,25) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){u.train(Worker,Right,50) for(Unit u){u.moveToUnit(Ally,Closest)} u.moveAway()}} else { e} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(25)} u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;C;Train;Light;Down;25;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;15;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,25) u.train(Light,Down,25)} if(OpponentHasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.harvest(50) u.idle() u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Right;9;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.harvest(10) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9)}} for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Light;EnemyDir;15	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Right,9)}} for(Unit u){u.attack(Weakest) for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;9;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;3;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,9) for(Unit u){u.build(Barracks,Up,9)} u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){if(HasLessNumberOfUnits(Ranged,3)) then {e} else { u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;15;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;100;S;For_S;S;C;Train;Light;Down;50;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,1)} if(OpponentHasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.harvest(100)} for(Unit u){u.train(Light,Down,50)} for(Unit u){for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;5;S;Empty	for(Unit u){u.build(Barracks,Down,7)} for(Unit u){for(Unit u){u.idle() u.harvest(1)} if(u.is(Heavy)) then {u.moveToUnit(Ally,Closest) u.attack(Strongest)} u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,5)} else { e}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;5;S;Empty	for(Unit u){u.build(Barracks,Down,7)} for(Unit u){for(Unit u){u.idle() u.harvest(1)} if(u.is(Heavy)) then {u.moveToUnit(Ally,Closest) u.attack(LessHealthy)} u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,5)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;7;S;For_S;S;S_S;S;For_S;S;C;Harvest;25;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;For_S;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Down,7)} for(Unit u){for(Unit u){u.harvest(25)} u.train(Heavy,EnemyDir,8) for(Unit u){for(Unit u){u.attack(MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Train;Ranged;Up;5;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Worker;Right;10;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Train;Ranged;Left;1;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;15;S;For_S;S;C;Harvest;8	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,5) u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} else { if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Right,10)}} for(Unit u){u.build(Barracks,Left,7) u.train(Ranged,Left,1)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(15)}}} for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Train;Ranged;Left;1;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;8	for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,2) for(Unit u){u.build(Barracks,Left,7) u.train(Ranged,Left,1)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.harvest(8)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;Attack;Farthest;S;S_S;S;C;Build;Barracks;Left;10;S;C;Train;Ranged;Left;2;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;For_S;S;C;Train;Ranged;Right;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Barracks;6;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(7)}} else { u.idle()}} for(Unit u){u.train(Heavy,EnemyDir,5)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.attack(Farthest)} u.build(Barracks,Left,10) u.train(Ranged,Left,2) u.attack(MostHealthy) for(Unit u){u.train(Light,Right,4)}} for(Unit u){for(Unit u){u.train(Ranged,Right,100)}} for(Unit u){u.moveToUnit(Ally,Strongest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Closest)} else { e}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(HasNumberOfUnits(Barracks,6)) then {u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;5;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Light;Right;20;S;C;Attack;Strongest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} for(Unit u){u.build(Barracks,Right,5)} u.idle()} for(Unit u){u.harvest(7) u.train(Light,Right,20) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;20;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Right,5)} u.idle()} for(Unit u){u.harvest(50) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Right,20) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Left;4;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() for(Unit u){u.train(Light,Left,6)} u.build(Barracks,EnemyDir,20) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Left,4)}} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(50)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;9;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() for(Unit u){u.train(Light,Left,6)} u.build(Barracks,EnemyDir,20) u.harvest(9) if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Light;Down;5;S;C;Build;Barracks;Up;4;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;6;S;C;Train;Light;EnemyDir;6;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;10;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,2) u.idle() u.harvest(1) u.train(Light,Down,5) u.build(Barracks,Up,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(HaveQtdUnitsAttacking(0)) then {e} else { for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy)}}}} for(Unit u){u.moveToUnit(Enemy,Closest) u.harvest(6) u.train(Light,EnemyDir,6) if(OpponentHasNumberOfUnits(Barracks,10)) then {u.moveToUnit(Enemy,Closest)} else { u.moveAway()} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;15;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Idle;S;C;Train;Light;Right;1;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;4;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;0;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(2) u.train(Worker,Right,15)} if(HasNumberOfUnits(Base,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.build(Barracks,Right,8)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()}} else { u.train(Light,Right,1)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,Down,7) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { if(OpponentHasNumberOfUnits(Light,4)) then {u.moveToUnit(Ally,Weakest)} if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)}}} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}} if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Farthest)} if(HasNumberOfUnits(Heavy,1)) then {u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;15;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Idle;S;C;Train;Light;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;15;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(2) u.train(Worker,Right,15)} if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.build(Barracks,Right,8)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()}} else { u.train(Light,Right,6)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,Farthest)}} else { if(OpponentHasNumberOfUnits(Worker,15)) then {u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Heavy;EnemyDir;5	for(Unit u){u.build(Barracks,Up,9) u.idle() for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(10)}}}}} for(Unit u){u.attack(Strongest) u.train(Heavy,EnemyDir,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;3;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Heavy;EnemyDir;5	for(Unit u){u.build(Barracks,Right,3) u.idle() for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(10)}}}}} for(Unit u){u.attack(Strongest) u.train(Heavy,EnemyDir,5)}
S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy)}}
S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy) u.train(Worker,Up,5)} else { for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(2)} u.train(Worker,Up,50) for(Unit u){u.idle()} u.attack(Weakest)}
S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;10;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;20;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;7	if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { for(Unit u){u.build(Barracks,Right,8)}} for(Unit u){u.idle()} for(Unit u){u.harvest(20)} for(Unit u){u.attack(Weakest) u.train(Light,Left,7)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;3;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;3;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;9;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,50) u.harvest(3)} u.moveToUnit(Enemy,Closest)} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,Closest)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,3)}} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,3)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,9) u.train(Light,Up,3)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Closest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5)}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) if(OpponentHasNumberOfUnits(Worker,20)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.train(Worker,Right,2) u.train(Heavy,Down,5) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Up;6;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Up,6) if(OpponentHasNumberOfUnits(Worker,20)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Up;6;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Farthest) for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,6)} for(Unit u){u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Up;6;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(LessHealthy)}} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,6)} for(Unit u){u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Up;4;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.train(Heavy,Up,4)} for(Unit u){u.train(Worker,Right,2) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;5;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;15;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Down,20) u.harvest(5)} u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,15)}} for(Unit u){u.train(Worker,Right,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;5;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;15;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Down,20) u.harvest(5)} u.attack(LessHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,15)}} for(Unit u){u.train(Worker,Right,3)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;5;S;C;Attack;Closest;S;For_S;S;C;Train;Light;EnemyDir;15	for(Unit u){for(Unit u){u.build(Barracks,Down,20) u.harvest(5)} u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,15)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Right;50;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Right;8	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.harvest(2)} u.train(Heavy,Right,50) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(MostHealthy)}} for(Unit u){u.train(Light,Right,8)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;Harvest;8;S;S_S;S;C;Train;Light;Right;50;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.harvest(8)} u.train(Light,Right,50) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveAway()}} for(Unit u){if(u.is(Light)) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;Harvest;8;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Right;50;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.harvest(8)} for(Unit u){u.attack(Closest)} u.train(Light,Right,50) for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.is(Light)) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;Harvest;8;S;S_S;S;C;Train;Light;Right;50;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Left;9;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.harvest(8)} u.train(Light,Right,50) for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Left,9)}} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.is(Light)) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}
S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.harvest(3) u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8)} u.idle()} for(Unit u){for(Unit u){u.harvest(3) u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Up;5;S;For_S;S;C;Train;Heavy;Left;2	for(Unit u){u.build(Barracks,Up,50) u.harvest(9) u.attack(Closest) for(Unit u){u.train(Light,Up,5)}} for(Unit u){u.train(Heavy,Left,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;9;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Up;5;S;For_S;S;C;Train;Ranged;EnemyDir;1	for(Unit u){u.build(Barracks,Up,50) u.harvest(9) u.attack(LessHealthy) for(Unit u){u.train(Light,Up,5)}} for(Unit u){u.train(Ranged,EnemyDir,1)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;8;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.build(Barracks,Up,8)} for(Unit u){u.harvest(9)} for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Up,7)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Worker,EnemyDir,2)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Up;25;S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Right;9;S;If_B_then_S;B;CanAttack;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,2) u.build(Barracks,Up,25)} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8)} u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Right,9) if(u.canAttack()) then {u.attack(Weakest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;C;MoveAway;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Up;15	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { u.moveAway()}} for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Light,Up,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;C;MoveAway;S;C;Idle;S;For_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Up;15	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { u.moveAway() u.idle()}} for(Unit u){for(Unit u){u.moveAway()}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Up,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;C;MoveAway;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Up;15	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { u.moveAway() u.idle()}} for(Unit u){u.idle() u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Up,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Up;15	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { u.moveToUnit(Ally,MostHealthy) u.idle()}} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Up,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;For_S;S;C;Train;Light;Down;1;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Left;20;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { for(Unit u){u.train(Light,Down,1)} u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) u.train(Light,Left,20)}} for(Unit u){u.idle()} for(Unit u){u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;For_S;S;C;Train;Light;Down;1;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Left;20;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { for(Unit u){u.train(Light,Down,1)} u.attack(Strongest) u.train(Light,Left,20)}} for(Unit u){u.idle()} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;Harvest;1;S;C;Idle;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;25;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;Harvest;2;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;4	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8) u.harvest(1)} u.idle()} u.harvest(7) if(HasNumberOfUnits(Barracks,25)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,Left,6)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Ranged,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;Harvest;1;S;C;Idle;S;C;Train;Worker;Up;25;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;25;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;2;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;4	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8) u.harvest(1)} u.idle()} u.train(Worker,Up,25) if(HasNumberOfUnits(Barracks,25)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Closest)} else { e} u.attack(MostHealthy) for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,Left,6)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Ranged,Right,4)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Train;Worker;Down;3;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;5	for(Unit u){u.build(Barracks,Right,6) u.train(Worker,Down,3) u.harvest(7) u.attack(Weakest)} for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,5)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Train;Worker;Down;3;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Ranged;Down;20;S;For_S;S;C;Train;Light;Left;5	for(Unit u){u.build(Barracks,Right,6) u.train(Worker,Down,3) u.harvest(7) u.attack(Weakest)} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,20) for(Unit u){u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;MoveAway;S;For_S;S;C;Train;Light;Left;50;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,9)} u.idle() u.harvest(3) u.moveAway() for(Unit u){u.train(Light,Left,50)} if(u.HasUnitInOpponentRange()) then {e} else { u.attack(Weakest) for(Unit u){u.idle()}} u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Harvest;3;S;C;MoveAway;S;For_S;S;C;Train;Light;Left;50;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,9)} u.harvest(3) u.moveAway() for(Unit u){u.train(Light,Left,50)} if(u.HasUnitInOpponentRange()) then {e} else { u.attack(Closest) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;50;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Base;50;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;3;S;C;Idle;S;For_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Base;EnemyDir;6;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Farthest) u.train(Worker,EnemyDir,50) if(u.HasUnitThatKillsInOneAttack()) then {if(HasNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(3)} u.idle()}}} for(Unit u){u.moveAway()} for(Unit u){if(u.canHarvest()) then {u.build(Base,EnemyDir,6)}} for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;Empty	if(HaveQtdUnitsAttacking(100)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}} else { for(Unit u){u.idle() for(Unit u){u.train(Worker,EnemyDir,50)}}} for(Unit u){for(Unit u){u.harvest(5)} u.moveAway() u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} else { e}}
S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.harvest(6)} u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,5)}} u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.canAttack()) then {if(OpponentHasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Left,50)}} for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Up;100;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Up,100) for(Unit u){if(u.canHarvest()) then {for(Unit u){u.harvest(1)}} u.idle()} for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Strongest) for(Unit u){if(u.canAttack()) then {e} else { if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,Farthest)}}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)} else { for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Down;20;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Worker,Down,20) u.idle()}} for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(3)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Strongest;S;C;Train;Worker;Right;6;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)} else { u.harvest(2)}} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest)}} u.train(Worker,Right,6)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;6;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)} else { u.harvest(2)}} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.train(Worker,Right,6)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Light;EnemyDir;10;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;15;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Down;6;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(1)}} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Down,3) u.train(Light,EnemyDir,10) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(2)} for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,Up,5) u.harvest(15)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.train(Worker,Down,6)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(20)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;EnemyDir;10;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;15;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Down;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(1)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Farthest) u.train(Light,EnemyDir,10) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(2)} for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,Up,5) u.harvest(15)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.train(Worker,Down,6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(20)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;4;S;C;Harvest;10;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Right;15;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveAway;S;C;Attack;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;9;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;MostHealthy;S;Empty	for(Unit u){u.idle() u.build(Barracks,Up,4) u.harvest(10)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.train(Light,EnemyDir,5) for(Unit u){u.attack(Weakest)}}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Right,15)} else { u.train(Light,EnemyDir,7) for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveAway()} u.attack(Farthest)} if(OpponentHasNumberOfUnits(Heavy,9)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,MostHealthy)} else { e}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;6;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;8;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,1) u.harvest(6)} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,8)} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;6;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.build(Barracks,Right,1) u.harvest(6)} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,20) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.attack(Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Left;15;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;50;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.train(Heavy,Up,100) u.train(Light,Left,15)} for(Unit u){u.harvest(50) if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest)}} else { if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)}}} for(Unit u){u.attack(Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;100;S;S_S;S;For_S;S;For_S;S;C;Harvest;8;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.idle() u.train(Light,Right,100)} for(Unit u){for(Unit u){u.harvest(8)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Closest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;8;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Left;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;20	for(Unit u){u.build(Barracks,Up,8)} if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Left,5)} for(Unit u){u.idle()} for(Unit u){u.harvest(20)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;Train;Worker;Down;7	for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.canAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(LessHealthy)}} u.moveAway() u.attack(Closest)} else { u.train(Worker,Down,7)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;7;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)} if(HasNumberOfUnits(Heavy,7)) then {u.moveToUnit(Ally,Weakest)} else { e}}} for(Unit u){if(u.canAttack()) then {u.harvest(4) u.moveAway() u.attack(Closest)} else { u.train(Worker,EnemyDir,5)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,EnemyDir,50)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} else { if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(MostHealthy)}} u.harvest(5) u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Up,50)} for(Unit u){if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(3)} for(Unit u){u.train(Worker,Down,5) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Up;7;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(3)} for(Unit u){u.train(Worker,Up,7)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;50;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;EnemyDir;10;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.attack(LessHealthy) if(OpponentHasNumberOfUnits(Ranged,50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.build(Barracks,Down,100) u.harvest(5)}} if(HasNumberOfUnits(Base,5)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,EnemyDir,10)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;50;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;EnemyDir;10;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.attack(LessHealthy) if(OpponentHasNumberOfUnits(Ranged,50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,2) u.harvest(8)}} if(HasNumberOfUnits(Base,5)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,EnemyDir,10)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;15;S;For_S;S;C;Train;Light;EnemyDir;10;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,2) u.harvest(15)}} for(Unit u){u.train(Light,EnemyDir,10)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;1;S;C;Train;Light;Right;15;S;For_S;S;C;Build;Barracks;Up;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,1) u.train(Light,Right,15)} for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.harvest(9)} for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;5;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Light;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,5)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,50)} if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(20) u.attack(LessHealthy)} u.train(Ranged,Right,10)}} for(Unit u){if(u.canHarvest()) then {u.harvest(6)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(LessHealthy)} if(HasNumberOfUnits(Light,8)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;5;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,5)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,50)} if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(20) u.attack(LessHealthy)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(LessHealthy)} if(HasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;LessHealthy	if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){if(u.is(Base)) then {for(Unit u){u.build(Barracks,EnemyDir,20)}}} u.train(Heavy,EnemyDir,15) for(Unit u){u.harvest(10)}} for(Unit u){for(Unit u){u.moveAway()} u.moveToUnit(Ally,Strongest) u.idle() u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.idle()} u.attack(LessHealthy) for(Unit u){u.attack(LessHealthy)}}}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;Empty	if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){if(u.is(Base)) then {for(Unit u){u.build(Barracks,EnemyDir,20)}}} u.train(Heavy,EnemyDir,3) for(Unit u){u.harvest(10)}} for(Unit u){for(Unit u){u.idle() u.attack(MostHealthy)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { e}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Harvest;5;S;C;Idle;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(7) for(Unit u){u.harvest(5)} u.idle()} for(Unit u){u.train(Worker,Left,15)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;Idle;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.harvest(5)} u.idle()} for(Unit u){u.train(Worker,Left,15)} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,LessHealthy) u.idle()} for(Unit u){u.train(Worker,Left,15)} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Build;Barracks;Right;8	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,LessHealthy) u.idle()} for(Unit u){u.train(Worker,Left,15)} for(Unit u){u.build(Barracks,Right,8)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;15	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Worker,Left,15)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Base)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,20)}}} for(Unit u){u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}}} for(Unit u){u.harvest(2)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Base)) then {u.train(Worker,Right,20)}} for(Unit u){u.idle() u.attack(Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(2)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;15;S;S_S;S;For_S;S;C;Train;Ranged;Down;7;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;10	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.harvest(4)} for(Unit u){u.attack(Closest)} u.train(Heavy,EnemyDir,15)} for(Unit u){u.train(Ranged,Down,7)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Down,10)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;10	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(4)} for(Unit u){u.attack(Closest)} u.train(Heavy,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Down,10)}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,15) for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.train(Worker,EnemyDir,9) u.attack(Closest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;100;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,Down,6) u.harvest(3) u.train(Heavy,Up,100)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Down;9;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.idle()} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Farthest) for(Unit u){u.train(Worker,Down,9)} u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Up,50) u.harvest(1) u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.idle()}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;4;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Ranged;Up;15	for(Unit u){u.build(Barracks,Up,5) u.harvest(4)} for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Ranged,Up,15)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;Harvest;100;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;15;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(5) u.idle() u.build(Barracks,EnemyDir,3)} for(Unit u){u.harvest(100)} for(Unit u){u.train(Light,Right,15)} for(Unit u){u.attack(Weakest)} if(OpponentHasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){for(Unit u){u.train(Worker,Up,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;MoveAway;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;15;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(5) u.idle() u.build(Barracks,EnemyDir,3) u.moveAway()} for(Unit u){u.harvest(100)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,15)} for(Unit u){u.attack(Weakest)} if(OpponentHasNumberOfUnits(Barracks,3)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.train(Worker,Up,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy)} else { for(Unit u){if(u.canAttack()) then {u.attack(LessHealthy)} else { for(Unit u){u.idle()}}}} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;50;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;C;Train;Worker;Down;20;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,EnemyDir,5) u.train(Light,Down,50) u.harvest(5) u.attack(Closest) u.train(Worker,Down,20) for(Unit u){u.build(Barracks,EnemyDir,50)} u.moveToUnit(Enemy,MostHealthy) if(u.canHarvest()) then {if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;C;Train;Worker;Down;20;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,EnemyDir,5) u.harvest(5) u.attack(Closest) u.train(Worker,Down,20) for(Unit u){u.build(Barracks,EnemyDir,6)} u.moveToUnit(Enemy,MostHealthy) if(u.canHarvest()) then {if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;C;Train;Worker;Down;20;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;Up;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,EnemyDir,5) u.harvest(5) u.attack(Closest) u.train(Worker,Down,20) for(Unit u){u.build(Barracks,EnemyDir,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,Up,1)} if(u.canHarvest()) then {if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,EnemyDir,5) u.harvest(5) u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,Up,1)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;C;Train;Light;Down;20	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Down,25)}} for(Unit u){u.train(Light,Down,20)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;For_S;S;C;Harvest;6;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;C;Train;Ranged;Right;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)} else { for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(6)}} u.idle() u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.harvest(7)} u.moveToUnit(Enemy,Farthest) if(HaveQtdUnitsAttacking(0)) then {u.train(Ranged,Right,3)} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;For_S;S;C;Harvest;6;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;C;Train;Ranged;Right;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(6)}} u.idle() u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.harvest(7)} u.moveToUnit(Enemy,Farthest) if(HaveQtdUnitsAttacking(0)) then {u.train(Ranged,Right,3)} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,9)} u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;For_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Down;8	for(Unit u){u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest)}}}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Down,8)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(1)} for(Unit u){u.idle()} if(u.is(Barracks)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Right,10)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Up;8;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(10) u.attack(Strongest) u.train(Light,EnemyDir,4) u.train(Heavy,EnemyDir,8) if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,Up,8)}}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;Down;25;S;For_S;S;C;Train;Light;Down;1;S;If_B_then_S;B;HasNumberOfUnits;Light;25;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,50) for(Unit u){u.harvest(7)}}} for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e}} for(Unit u){u.moveToUnit(Ally,Closest) u.train(Heavy,Down,25) for(Unit u){u.train(Light,Down,1)}} if(HasNumberOfUnits(Light,25)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;3;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Left;3	for(Unit u){u.build(Barracks,Down,1) u.harvest(3) u.attack(MostHealthy)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)}} u.train(Heavy,Left,3)}
S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;20;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Base;1;S;If_B_then_S;B;HasNumberOfUnits;Worker;15;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.train(Worker,Right,20)} if(u.is(Base)) then {u.moveToUnit(Enemy,Closest)}} if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Base,1)) then {if(HasNumberOfUnits(Worker,15)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}}}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;C;Train;Worker;Down;50	for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,MostHealthy)} else { if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,4) if(u.is(Base)) then {for(Unit u){u.idle()}} for(Unit u){u.harvest(5)} u.train(Heavy,EnemyDir,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Down,20)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,MostHealthy)}} for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1) u.train(Worker,Down,50)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Right;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Down;2	for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,MostHealthy)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,2)} else { u.train(Worker,Right,4)} u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest)}}}} for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Ranged,EnemyDir,1) u.moveToUnit(Ally,Farthest) u.train(Heavy,Down,2)}}
S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(Closest)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){if(u.canHarvest()) then {u.moveAway() u.idle()} else { for(Unit u){u.harvest(3)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,20)}}}}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;20;S;C;Harvest;5;S;For_S;S;C;Attack;Strongest	for(Unit u){if(u.canHarvest()) then {u.moveAway() u.idle()} else { for(Unit u){u.harvest(3)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,20)}}} u.harvest(5)}} for(Unit u){u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;Empty;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;20;S;C;Harvest;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {e} else { for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,20)}}} u.harvest(5)}} for(Unit u){u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Build;Base;EnemyDir;5;S;C;Train;Worker;EnemyDir;100;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Harvest;6;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){for(Unit u){u.build(Base,EnemyDir,5)}} u.train(Worker,EnemyDir,100)} for(Unit u){u.idle() if(u.canAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,Weakest)}} u.harvest(6) for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle() u.harvest(4)} u.moveAway() u.moveToUnit(Ally,LessHealthy)}} u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;5;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(3) for(Unit u){u.build(Base,EnemyDir,5)} u.train(Worker,EnemyDir,100)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Worker;Left;25;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest	if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} u.attack(LessHealthy)}}} for(Unit u){u.moveToUnit(Enemy,Weakest) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Worker,Left,25)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Weakest)} u.train(Worker,EnemyDir,7)}} u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){u.attack(MostHealthy)} u.train(Worker,EnemyDir,7)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,7)} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Light;Right;20;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Down,20) u.train(Light,Right,20)}} for(Unit u){u.harvest(6) u.idle() u.attack(Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Up;6;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Heavy;Left;15;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,6)} else { u.idle()}} for(Unit u){u.harvest(3)} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { for(Unit u){u.moveToUnit(Enemy,Closest)}}}} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Heavy,Left,15)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Up;6;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,6)} else { u.idle()}} for(Unit u){u.harvest(3)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Strongest)}}} for(Unit u){u.train(Heavy,Left,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Harvest;6;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,2) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,7) for(Unit u){u.build(Barracks,Down,3) u.harvest(6) u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;100;S;Empty;S;C;Harvest;10;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Train;Light;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway	for(Unit u){u.idle() for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,100)} else { e}} u.harvest(10) if(u.is(Barracks)) then {for(Unit u){u.train(Light,Right,6)}} u.moveToUnit(Enemy,Weakest) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Train;Light;Left;5;S;C;Harvest;9;S;C;Attack;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,3)} u.train(Light,Left,5) u.harvest(9) u.attack(MostHealthy)} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;Harvest;25;S;S_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Train;Worker;Left;3;S;S_S;S;C;Train;Light;Left;5;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,3)} u.harvest(25) u.moveAway() for(Unit u){for(Unit u){u.train(Worker,Left,3)}} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy) u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;Harvest;25;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Worker;Up;3;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,3)} u.harvest(25) u.moveAway() for(Unit u){u.train(Worker,Up,3)} u.train(Ranged,Right,50) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} u.harvest(20) u.moveAway() for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.train(Worker,Up,3)} u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Right,50) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} u.harvest(20) u.moveAway() for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.train(Worker,Up,3)} u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Right,50) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Right;6;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(6) for(Unit u){u.build(Barracks,Left,25)} u.moveToUnit(Enemy,Weakest) if(HasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Ally,LessHealthy)} u.moveAway() u.train(Ranged,Right,6) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(3) for(Unit u){u.build(Barracks,Left,25)} u.train(Ranged,EnemyDir,20) u.attack(Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Strongest;S;C;Train;Heavy;Down;8	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Up,5)} for(Unit u){u.harvest(10) u.attack(Strongest) u.train(Heavy,Down,8)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Light;Up;4;S;For_S;S;C;Train;Heavy;Left;4	for(Unit u){u.build(Barracks,Right,25) u.harvest(7)} for(Unit u){u.idle() u.attack(Strongest) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Light,Up,4)} for(Unit u){u.train(Heavy,Left,4)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,7)} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){u.harvest(4)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Down;9	for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){for(Unit u){u.idle()} u.attack(Weakest)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Down,9)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;100;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Right,100)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.moveAway() u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;Right;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3) u.train(Ranged,Right,3) for(Unit u){u.idle()} u.moveAway() u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Right,7)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Ranged;Right;3;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3) u.train(Ranged,Right,3)} for(Unit u){u.train(Light,Right,7)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;10;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;50;S;C;Train;Light;Up;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;Train;Light;Up;5	for(Unit u){for(Unit u){u.build(Barracks,Up,10)} u.moveToUnit(Enemy,Closest) u.attack(Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(50) u.train(Light,Up,3)}}}} for(Unit u){if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Enemy,Strongest)} else { e}} for(Unit u){u.train(Light,Up,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;10;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;50;S;C;Train;Light;Up;3;S;For_S;S;C;Train;Light;Up;50	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,10)} u.moveToUnit(Enemy,Closest) u.attack(Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(50) u.train(Light,Up,3)}}}} for(Unit u){u.train(Light,Up,50)}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Harvest;10;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Train;Light;Left;6;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;10;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,7) u.harvest(10) u.attack(MostHealthy) for(Unit u){u.harvest(5) u.idle()}} u.train(Worker,EnemyDir,2) u.train(Light,Left,6) u.moveToUnit(Ally,MostHealthy) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){if(OpponentHasNumberOfUnits(Base,10)) then {u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;6;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Harvest;10;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Left,25) u.harvest(8) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,6) for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,Right,50)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;6;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;50;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Closest)} u.build(Barracks,Left,25) u.harvest(8) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,6) for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,Right,50)}} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;Closest;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;50	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Closest)} u.moveAway() for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,Right,50)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;50	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,Right,50)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;For_S;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;Train;Ranged;Right;5	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){for(Unit u){u.harvest(25)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.is(Base)) then {e} else { u.train(Ranged,Right,5)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Ranged;Right;5	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.harvest(25)} for(Unit u){u.idle() u.attack(MostHealthy)} for(Unit u){if(u.isBuilder()) then {e} else { u.train(Ranged,Right,5)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Strongest	if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Right,3)} u.harvest(6)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} for(Unit u){u.attack(LessHealthy)} u.train(Worker,Up,2) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Closest)} else { for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,Down,15)}} u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;2;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;8;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Ally;Closest	if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Right,3)} u.harvest(6)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,2)}} for(Unit u){for(Unit u){u.train(Heavy,Right,25)} u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)} else { for(Unit u){if(HasLessNumberOfUnits(Barracks,8)) then {e} else { u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,Down,15)}} u.moveToUnit(Enemy,Strongest)} if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;2;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Ally;Closest	if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Right,3)} u.harvest(6)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,2)}} for(Unit u){for(Unit u){u.train(Heavy,Right,25)} u.idle()} if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)} else { for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,Down,15)}} u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Farthest) u.moveAway() if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Harvest;7;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Train;Light;Down;15;S;C;MoveAway	for(Unit u){u.build(Barracks,Left,3) u.harvest(7)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.train(Light,Down,15)}} u.moveAway()}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;C;Train;Light;EnemyDir;10;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;3;S;Empty;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Train;Ranged;Left;10	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.train(Light,EnemyDir,10) u.build(Barracks,EnemyDir,20)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(3)}} else { e} u.train(Heavy,EnemyDir,50)} for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,2) u.train(Ranged,Left,10)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;S_S;S;C;Harvest;50;S;C;Train;Ranged;Up;9;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;8	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Left,3) u.harvest(50) u.train(Ranged,Up,9) u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HasLessNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Right,8)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;50;S;C;Train;Ranged;Up;9;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(50) u.train(Ranged,Up,9) u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HasLessNumberOfUnits(Barracks,9)) then {u.train(Worker,Up,4) u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Light,Down,6)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6) u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;6;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.train(Light,Down,6)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveAway;S;Empty;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Train;Worker;Left;50;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest) for(Unit u){u.harvest(1)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle() if(u.canAttack()) then {u.moveAway()} else { e}}} else { for(Unit u){for(Unit u){u.attack(LessHealthy)}}} for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Left,50)}}} if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(1)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.attack(LessHealthy)}} u.train(Worker,Right,25) if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;EnemyDir;7;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.build(Barracks,Down,20)} u.train(Ranged,EnemyDir,7)} u.harvest(5)} for(Unit u){u.attack(Weakest)}} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;C;Build;Barracks;Down;20;S;C;Train;Light;Left;50;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.build(Barracks,Down,20)} u.train(Light,Left,50)} u.harvest(5)} for(Unit u){u.attack(Weakest)}} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Light;Left;25;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;15;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;Empty	if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,EnemyDir,4)} for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.attack(MostHealthy) if(u.canAttack()) then {e} else { u.train(Light,Left,25) for(Unit u){u.harvest(5)}}} for(Unit u){u.moveToUnit(Enemy,Closest)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)} else { e}
S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Light;Left;25;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;15;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;Empty	if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,EnemyDir,4) u.idle()} for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.attack(MostHealthy) if(u.canAttack()) then {e} else { u.train(Light,Left,25) for(Unit u){u.harvest(5)}}} for(Unit u){u.moveToUnit(Enemy,Closest)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)} else { e}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;Harvest;9;S;C;Train;Worker;Up;25;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy) if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest)} else { e} for(Unit u){u.harvest(9)} u.train(Worker,Up,25) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveAway()} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.harvest(10)} for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Train;Worker;Right;50;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {e} else { u.train(Worker,Right,50) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { e}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Base;Up;15;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;4	for(Unit u){for(Unit u){if(u.isBuilder()) then {u.build(Base,Up,15)}} for(Unit u){for(Unit u){u.harvest(1)} u.attack(LessHealthy)} for(Unit u){u.train(Worker,Left,4)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Left;6	for(Unit u){for(Unit u){for(Unit u){u.harvest(1)} u.attack(Weakest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Worker,Left,6)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;4;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest;S;C;Train;Light;Left;15	for(Unit u){u.idle() u.build(Barracks,Up,4) u.harvest(7)} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Strongest)} u.train(Light,Left,15)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;25;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Left,2) u.harvest(25) u.attack(MostHealthy) u.moveToUnit(Ally,Strongest) u.train(Heavy,EnemyDir,100) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}} if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { e}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Build;Barracks;Left;4;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;EnemyDir;2	for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(7) u.train(Worker,Left,100) for(Unit u){u.build(Barracks,Left,4)} u.attack(Weakest)}} for(Unit u){u.train(Heavy,EnemyDir,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;10;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveAway() for(Unit u){u.train(Heavy,Up,6)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,6)}} for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,EnemyDir,20)} u.harvest(10) u.attack(Strongest)} for(Unit u){u.train(Ranged,Up,7) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Build;Barracks;Up;4;S;C;Harvest;4;S;C;Train;Ranged;EnemyDir;9;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Worker;Right;20;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,1) u.build(Barracks,Up,4) u.harvest(4) u.train(Ranged,EnemyDir,9) u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.harvest(5)}} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) if(u.isBuilder()) then {for(Unit u){u.train(Worker,Right,20)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;EnemyDir;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(4) u.train(Ranged,EnemyDir,9) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(5) u.train(Light,EnemyDir,20)} for(Unit u){for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.train(Worker,EnemyDir,50)} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(5) u.train(Light,EnemyDir,20)} for(Unit u){for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Train;Light;Up;6	for(Unit u){u.harvest(1) for(Unit u){u.idle()}} for(Unit u){if(u.canAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.build(Barracks,Left,7)}}} for(Unit u){u.moveAway() for(Unit u){u.harvest(5)}} for(Unit u){u.train(Light,Right,4)} for(Unit u){u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,50) u.train(Light,Up,6)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Train;Light;Up;6	for(Unit u){u.harvest(1) for(Unit u){u.idle()}} for(Unit u){if(u.canAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.build(Barracks,Left,7)}}} for(Unit u){u.moveAway() for(Unit u){u.harvest(5)}} for(Unit u){u.train(Light,Right,4)} for(Unit u){u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,50) u.train(Light,Up,6)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Left;7;S;S_S;S;For_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Train;Light;Up;6	for(Unit u){u.harvest(1) for(Unit u){u.idle()}} for(Unit u){if(u.canAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.build(Barracks,Left,7)}}} for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){u.train(Light,Right,4)} for(Unit u){u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,50) u.train(Light,Up,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Light;Down;25;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;4;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(1) u.train(Light,Down,25) u.build(Barracks,Left,2) u.harvest(4)} for(Unit u){for(Unit u){u.idle() u.train(Worker,Down,4)} for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Heavy;Down;7;S;For_S;S;C;Train;Light;Down;3	for(Unit u){u.train(Worker,Down,5) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} u.attack(LessHealthy) for(Unit u){u.build(Barracks,Down,25)}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Enemy,Farthest)} else { e} u.train(Heavy,Down,7)}} for(Unit u){u.train(Light,Down,3)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;Train;Heavy;Down;7;S;For_S;S;C;Train;Light;Down;3	for(Unit u){u.train(Worker,Down,5) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} u.attack(Weakest) for(Unit u){u.build(Barracks,Down,25)}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.train(Heavy,Down,7)}} for(Unit u){u.train(Light,Down,3)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Train;Light;Down;3	for(Unit u){u.train(Worker,Down,5) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} u.attack(Closest) for(Unit u){u.build(Barracks,Down,25)}} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,7)}} for(Unit u){u.train(Light,Down,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Heavy;Down;2;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Light;Down;5;S;C;Train;Worker;Up;6;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Left;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){if(u.isBuilder()) then {e} else { u.attack(Closest)}} u.build(Barracks,EnemyDir,9) u.train(Heavy,Down,2) if(HaveQtdUnitsAttacking(20)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.harvest(5) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Light,Down,5)} u.train(Worker,Up,6) for(Unit u){if(u.canAttack()) then {if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Closest)}}}}} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,50) u.moveToUnit(Ally,Weakest) u.train(Light,Left,6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Heavy;Down;2;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Light;Down;5;S;C;Train;Worker;Up;6;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Left;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Heavy,Down,2) if(HaveQtdUnitsAttacking(20)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(5) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Light,Down,5)} u.train(Worker,Up,6) for(Unit u){if(u.canAttack()) then {if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Closest)}}}}} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,50) u.moveToUnit(Ally,Weakest) u.train(Light,Left,6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Heavy;Down;2;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Light;Down;5;S;C;Train;Worker;Up;6;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Heavy,Down,2) if(HaveQtdUnitsAttacking(20)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(5) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Light,Down,5)} u.train(Worker,Up,6) for(Unit u){if(u.canAttack()) then {if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Closest)}}}}} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;C;Build;Barracks;Down;1;S;C;Train;Worker;Up;4;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Heavy,EnemyDir,50) u.build(Barracks,Down,1) u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Closest) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;C;Build;Barracks;Down;1;S;C;Train;Worker;Up;4;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Heavy,EnemyDir,50) u.build(Barracks,Down,1) u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Down;1;S;C;Train;Worker;Up;4;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Down,1) u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Train;Worker;Up;4;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Heavy,Right,50) u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,EnemyDir,25)} for(Unit u){u.moveToUnit(Ally,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)}} if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Ranged;Down;5;S;For_S;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(3) u.train(Ranged,Down,5)} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;15;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Worker,Up,15)} for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;7;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Left;3	for(Unit u){u.idle() u.attack(LessHealthy) if(HasNumberOfUnits(Worker,7)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Left,3)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Idle;S;C;Build;Barracks;Down;100;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;100;S;For_S;S;C;Attack;Weakest	for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,LessHealthy) u.idle() u.build(Barracks,Down,100) u.train(Worker,Right,25) for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(100)} for(Unit u){u.attack(Weakest)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Up;50;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){u.harvest(100)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Weakest) u.idle()}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.attack(Closest) u.train(Ranged,Up,50) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){u.harvest(100)} for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.train(Ranged,Left,50) u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){u.harvest(100)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Strongest)}} for(Unit u){for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Ranged,Left,50) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){u.harvest(100) u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Ranged,Left,50) u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;8;S;C;Build;Barracks;Up;9;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;5;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;100;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Farthest	for(Unit u){u.idle() u.train(Heavy,Right,8) u.build(Barracks,Up,9) if(OpponentHasNumberOfUnits(Base,5)) then {u.moveToUnit(Ally,Strongest)} else { u.harvest(100)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Light,EnemyDir,9)} if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveAway()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Right;9;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Strongest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.idle()}} for(Unit u){u.harvest(1)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Right,9)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.attack(Strongest)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Right;20;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Right,50) u.idle() u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) u.moveAway()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest) u.train(Heavy,Right,20)} u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;6;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;3;S;C;Train;Light;EnemyDir;15;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,10) u.idle() u.harvest(15) u.train(Worker,Left,3) u.train(Light,EnemyDir,15)} for(Unit u){u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;6;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;3;S;C;Train;Light;EnemyDir;15;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,10) u.idle() u.harvest(15) u.train(Worker,Left,3) u.train(Light,EnemyDir,15)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Build;Barracks;Down;3;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;2;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Down,3)}} for(Unit u){u.harvest(25) u.attack(Weakest)} for(Unit u){for(Unit u){u.train(Heavy,Right,2)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;15;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Ranged,Right,15) for(Unit u){u.idle()}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,3)} for(Unit u){u.harvest(25) u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;7;S;S_S;S;C;Harvest;5;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Up;2;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Left;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.build(Barracks,Up,7) u.harvest(5) u.attack(MostHealthy)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)}} if(HasNumberOfWorkersHarvesting(20)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Closest)}} else { for(Unit u){u.moveToUnit(Enemy,Farthest) u.train(Light,Up,2)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Left,50)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;7;S;S_S;S;C;Harvest;2;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Left;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Left;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.build(Barracks,Up,7) u.harvest(2) u.attack(MostHealthy)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)}} if(HasNumberOfWorkersHarvesting(20)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Closest)}} else { for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Heavy,Left,50)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,8) u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Ranged;Up;8;S;C;Harvest;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Left,2)} for(Unit u){for(Unit u){for(Unit u){u.harvest(4) u.train(Ranged,Up,8)} u.harvest(15)} for(Unit u){u.idle()}} for(Unit u){u.train(Worker,EnemyDir,20) if(u.isBuilder()) then {if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,LessHealthy)}} else { e} u.attack(Closest)} if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Heavy;Right;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;0;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){for(Unit u){u.train(Ranged,Left,5) u.idle()} u.attack(Weakest) for(Unit u){u.build(Barracks,Down,100)} if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.harvest(6)} u.train(Heavy,Right,1) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy) if(HasLessNumberOfUnits(Light,0)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Right;9;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,2)}} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.attack(Weakest) u.train(Light,Right,9)} for(Unit u){if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;8;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;20;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Heavy,EnemyDir,50)} for(Unit u){u.build(Barracks,Down,8)} for(Unit u){u.train(Light,Right,20) u.idle() u.harvest(4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){if(HasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}}}
S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;7;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canHarvest()) then {for(Unit u){for(Unit u){u.train(Worker,Up,4)} if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} u.train(Worker,Right,7)} for(Unit u){if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Weakest)}} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Farthest)}}}
S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Train;Worker;Right;7	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle() u.harvest(6)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)} u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.train(Worker,Right,7)}}}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;20;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Left;3;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Train;Worker;Down;50;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()}} if(HaveQtdUnitsAttacking(20)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} else { for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(1)} u.train(Worker,Left,3)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){if(u.is(Base)) then {for(Unit u){u.train(Worker,Down,50)}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveAway;S;C;Harvest;20;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveAway() u.harvest(20) for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,8) u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.harvest(1)} for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Enemy,Weakest) if(OpponentHasNumberOfUnits(Worker,6)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,50)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;5;S;C;Harvest;20;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;25;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest) u.train(Worker,Left,5) u.harvest(20) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Ranged,25)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,EnemyDir,50)}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;C;Build;Barracks;Up;8;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;8;S;For_S;S;C;Train;Light;Left;1;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Light;Left;4	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { u.moveToUnit(Enemy,MostHealthy)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} u.build(Barracks,Up,8)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Ranged,EnemyDir,4) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)} if(u.isBuilder()) then {if(OpponentHasNumberOfUnits(Worker,8)) then {for(Unit u){u.train(Light,Left,1)}}} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,5)}} for(Unit u){u.train(Light,Left,4)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;C;Build;Barracks;Up;100;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { u.moveToUnit(Enemy,MostHealthy)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} u.build(Barracks,Up,100)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Ranged,EnemyDir,4) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Idle;S;C;Attack;MostHealthy;S;C;Build;Barracks;Up;100;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.canHarvest()) then {u.idle()} else { u.attack(MostHealthy)}} u.build(Barracks,Up,100)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Ranged,EnemyDir,4) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;S_S;S;For_S;S;C;Train;Light;Right;25;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;MostHealthy;S;C;Build;Barracks;Up;100;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { for(Unit u){u.train(Light,Right,25)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.idle()} if(u.canHarvest()) then {e} else { u.attack(MostHealthy)}} u.build(Barracks,Up,100)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Ranged,EnemyDir,4) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;100;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Up,100)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(9) for(Unit u){u.moveToUnit(Enemy,Weakest) if(u.canAttack()) then {u.moveAway()}}}}} for(Unit u){u.train(Ranged,Right,4) for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;5;S;For_S;S;C;Idle;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;100;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,5)} else { for(Unit u){u.idle()}} for(Unit u){u.idle()} u.build(Barracks,Up,100)} for(Unit u){for(Unit u){u.harvest(9)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}}} for(Unit u){u.train(Ranged,Right,4) for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;C;Train;Worker;Up;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;Harvest;1	for(Unit u){u.train(Worker,Up,10)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,20) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;Harvest;1	for(Unit u){u.train(Worker,Up,3)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,20) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Worker,Up,3)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,20) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.harvest(3)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Build;Barracks;Right;20;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,EnemyDir,10) for(Unit u){u.build(Barracks,Right,20)}} for(Unit u){u.harvest(20)} for(Unit u){u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Build;Barracks;Right;20;S;For_S;S;S_S;S;C;Train;Light;Right;4;S;C;Harvest;20;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,EnemyDir,10) for(Unit u){u.build(Barracks,Right,20)}} for(Unit u){u.train(Light,Right,4) u.harvest(20)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;EnemyDir;20;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,8) u.harvest(9)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,EnemyDir,20)} else { e}} for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,LessHealthy)} else { e}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;15;S;For_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle() u.build(Barracks,Left,15) for(Unit u){for(Unit u){u.train(Heavy,Down,9)}}} for(Unit u){u.harvest(2)} for(Unit u){u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;1;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.harvest(1)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Up,15) u.moveToUnit(Enemy,Strongest) if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Farthest)} if(u.is(Base)) then {if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Up;2;S;For_S;S;C;Harvest;100;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(MostHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,7)}} for(Unit u){if(u.is(Ranged)) then {for(Unit u){u.idle()}}} for(Unit u){u.train(Ranged,Up,2)} for(Unit u){u.harvest(100)}} if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;50;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} else { e}} else { if(u.is(Worker)) then {u.build(Barracks,Left,6)} else { u.moveAway() for(Unit u){u.train(Light,Left,50)} for(Unit u){u.train(Worker,Right,8)} u.attack(LessHealthy) for(Unit u){u.idle()}} u.harvest(2)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} else { e}} else { if(u.is(Worker)) then {u.build(Barracks,Left,6)} else { for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.idle()}} u.harvest(2)} u.attack(LessHealthy)} for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} else { e}} else { if(u.is(Worker)) then {e} else { for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.attack(Closest)}}}} for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { for(Unit u){u.train(Worker,Left,50)}}} for(Unit u){for(Unit u){u.harvest(1)} u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){u.harvest(20) u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(8) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)}}} for(Unit u){u.train(Light,Up,4) u.moveAway() u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;S_S;S;C;Train;Worker;Down;9;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy	for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { u.train(Worker,Down,9) u.attack(LessHealthy)}} for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){u.harvest(3) u.attack(MostHealthy)}}}}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.canHarvest()) then {u.harvest(4)}} for(Unit u){if(HaveQtdUnitsAttacking(1)) then {e} else { for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}}}} for(Unit u){for(Unit u){u.train(Worker,Left,50)} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Up;7;S;For_S;S;C;Harvest;2;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Heavy;Right;5;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(4) u.build(Barracks,Left,6) u.attack(Closest) for(Unit u){u.idle()} u.train(Ranged,Up,7) for(Unit u){u.harvest(2)} if(u.canAttack()) then {for(Unit u){u.train(Heavy,Right,5)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,MostHealthy)} else { e}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Ally,Weakest)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,EnemyDir,7)}
S;S_S;S;For_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;C;Harvest;1;S;C;Harvest;25;S;C;Idle;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;9;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Light;Left;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;LessHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Down,4)} for(Unit u){for(Unit u){u.build(Barracks,Down,10)} u.harvest(1) u.harvest(25) u.idle()} for(Unit u){if(HasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Closest)}} if(HasNumberOfUnits(Base,9)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Left,20)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy)} else { u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;15;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;9;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;25	if(HasNumberOfUnits(Light,15)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.idle() u.train(Light,Up,9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}} else { e} u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(25)}}
S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;15;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;9;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;25	if(HasNumberOfUnits(Light,15)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.idle() u.train(Light,Up,9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}} else { e} u.attack(MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(25)}}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Light;Down;9;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;25	for(Unit u){u.moveAway() u.train(Light,Down,9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}} else { e} u.attack(MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(25)}}
S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;10	for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Right,10)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;7;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.idle() u.harvest(20)} u.train(Worker,Left,6) u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfUnits(Ranged,7)) then {u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveAway;S;C;Train;Worker;Left;20;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;6;S;C;Harvest;8;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveAway()}} u.train(Worker,Left,20) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(MostHealthy)}} for(Unit u){u.harvest(6)} u.harvest(8) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;20;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Left,20) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Worker,Right,15)}} for(Unit u){u.idle() if(u.canHarvest()) then {u.attack(Farthest) u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;15;S;For_S;S;For_S;S;C;Harvest;1	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle() u.train(Worker,Right,15)} for(Unit u){for(Unit u){u.harvest(1)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;EnemyDir;25	for(Unit u){for(Unit u){u.harvest(20) u.idle() u.attack(Strongest) if(u.canHarvest()) then {for(Unit u){u.attack(Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Harvest;15;S;Empty;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveAway;S;C;Train;Ranged;Right;3	for(Unit u){u.build(Barracks,Right,6) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(15)} else { e}}} for(Unit u){u.idle() u.attack(LessHealthy) u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway() u.attack(MostHealthy)}} if(u.isBuilder()) then {for(Unit u){u.moveAway()}} else { u.train(Ranged,Right,3)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Harvest;15;S;Empty;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Left;5;S;S_S;S;For_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveAway;S;C;Train;Ranged;Right;3	for(Unit u){u.build(Barracks,Right,6) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(15)} else { e}}} for(Unit u){u.idle() u.attack(LessHealthy) u.train(Heavy,Left,5) for(Unit u){u.harvest(9)} if(u.isBuilder()) then {for(Unit u){u.moveAway()}} else { u.train(Ranged,Right,3)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;6;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Left;5;S;S_S;S;For_S;S;C;Harvest;9;S;C;Train;Ranged;Right;3	for(Unit u){u.build(Barracks,Right,6)} for(Unit u){u.idle() u.attack(LessHealthy) u.train(Heavy,Left,5) for(Unit u){u.harvest(9)} u.train(Ranged,Right,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Right;5;S;Empty;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;9;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Right,5)} else { e}} for(Unit u){for(Unit u){u.harvest(25)} u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Heavy,Right,9)} u.train(Light,EnemyDir,20) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} else { e}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)}} if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Right;5;S;Empty;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;9;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Ranged;Left;1;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Right,5)} else { e}} for(Unit u){for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,LessHealthy) if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Heavy,Right,9)} u.train(Light,EnemyDir,20) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} else { e}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Ranged,Left,1)} if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;C;Harvest;15;S;For_S;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Up,5)} for(Unit u){u.train(Light,Down,7) u.harvest(15)} for(Unit u){for(Unit u){u.attack(MostHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;C;Harvest;15;S;For_S;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;5;S;Empty	for(Unit u){u.build(Barracks,Up,5)} for(Unit u){u.train(Light,Down,7) u.harvest(15)} for(Unit u){u.moveAway()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle() u.attack(MostHealthy) u.train(Worker,Up,5)} else { e}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;C;Harvest;15;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;5	for(Unit u){u.build(Barracks,Up,5)} for(Unit u){u.train(Light,Down,7) u.harvest(15)} for(Unit u){u.moveAway()} for(Unit u){u.idle() u.attack(Closest) u.train(Worker,Up,5)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Left;15	for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.train(Worker,Left,15)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;7;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Worker,Up,7)} for(Unit u){u.harvest(2)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;5;S;C;Train;Light;Down;5;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveAway()} u.attack(Weakest) u.train(Worker,EnemyDir,20) for(Unit u){u.harvest(2) u.build(Barracks,Up,5)} u.train(Light,Down,5)} for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;5;S;C;Train;Light;Down;5;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Strongest) for(Unit u){u.idle()} u.train(Worker,EnemyDir,20) for(Unit u){u.harvest(2) u.build(Barracks,Up,5)} u.train(Light,Down,5)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;25;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;10;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.idle() u.harvest(25) if(u.canHarvest()) then {u.moveToUnit(Ally,Farthest)} else { u.train(Light,Left,10)} u.train(Heavy,EnemyDir,8) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;0;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.harvest(1)}} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Light,3)) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Weakest)}} if(OpponentHasNumberOfUnits(Heavy,0)) then {for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,Left,5)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,20)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)}} if(HaveQtdUnitsAttacking(25)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Weakest)}}} for(Unit u){if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;1;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;0;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(1)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Light,3)) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Weakest)}} if(OpponentHasNumberOfUnits(Heavy,0)) then {for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,20)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)}}} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Weakest)}}} for(Unit u){if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;3;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;0;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(3)} for(Unit u){u.attack(LessHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Light,3)) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest)} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Weakest)}} if(OpponentHasNumberOfUnits(Heavy,0)) then {for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,EnemyDir,20)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)}}} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} for(Unit u){if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Barracks;Down;10;S;C;Attack;Weakest;S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;S_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.harvest(9) for(Unit u){u.build(Barracks,Down,10)} u.attack(Weakest)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)} else { e}} for(Unit u){u.train(Ranged,Up,6) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;1;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;20	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(1)}} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,20)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.harvest(5) u.attack(Strongest)} for(Unit u){for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Down,2) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,8)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest)} if(HasNumberOfUnits(Base,4)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.harvest(5) u.attack(Strongest)} for(Unit u){u.train(Heavy,Right,7)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Down,2) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,8)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.train(Ranged,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest)} if(HasNumberOfUnits(Base,4)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;C;Harvest;15;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;Train;Heavy;Down;15	for(Unit u){u.train(Light,Down,2)} for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.harvest(15)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.train(Heavy,Down,15)}}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasNumberOfUnits;Heavy;9;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;10	for(Unit u){if(u.canAttack()) then {if(HasNumberOfUnits(Heavy,9)) then {u.moveToUnit(Ally,Strongest)}}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Weakest)} else { u.build(Barracks,EnemyDir,7)}} for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.idle()}}} for(Unit u){u.attack(Farthest) for(Unit u){u.harvest(10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;C;Train;Worker;Right;2	for(Unit u){u.idle() u.attack(Weakest) if(u.isBuilder()) then {for(Unit u){u.attack(Weakest)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.train(Worker,Right,2)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;6;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(u.is(Heavy)) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.train(Worker,Up,5)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,15)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(10)} for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) if(HasNumberOfUnits(Barracks,6)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;5;S;C;Train;Worker;Right;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;6;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(u.is(Heavy)) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.train(Worker,Up,5)} u.train(Worker,Right,15) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) if(HasNumberOfUnits(Barracks,6)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;25;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,25) for(Unit u){u.harvest(2)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest)}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.harvest(8) if(u.is(Worker)) then {for(Unit u){u.attack(Closest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}} if(HasLessNumberOfUnits(Worker,6)) then {u.moveToUnit(Enemy,LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Down;3	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,2) u.harvest(20) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) if(u.is(Worker)) then {for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Down,3)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Down;3	for(Unit u){u.build(Barracks,Right,2) u.harvest(6) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) if(u.is(Worker)) then {for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,7)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Down,3)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Down;3	for(Unit u){u.build(Barracks,Down,2) u.harvest(6) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) if(u.is(Worker)) then {for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,7)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Down,3)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;Left;50	for(Unit u){u.build(Barracks,Down,2) u.harvest(6) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) if(u.is(Worker)) then {for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,Left,50)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;If_B_then_S;B;HasNumberOfUnits;Worker;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Right;7;S;C;Attack;LessHealthy;S;C;Train;Light;Down;10;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;25;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Up,25)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { if(HasNumberOfUnits(Worker,15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}} u.idle() if(HaveQtdUnitsAttacking(2)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}} u.train(Heavy,Right,7) u.attack(LessHealthy) u.train(Light,Down,10)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}} if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,Farthest)} if(HasNumberOfUnits(Barracks,25)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { e} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;7;S;Empty;S;If_B_then_S;B;CanHarvest;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Up;6;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Up;10;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Ranged;Down;25;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Right,3) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(7)} else { e} if(u.canHarvest()) then {u.attack(MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} else { u.train(Light,Up,6)} u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest) u.train(Heavy,Up,10)} else { u.idle()}}} if(OpponentHasNumberOfUnits(Worker,3)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest)} else { e} u.train(Ranged,Down,25) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,9)}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest)} else { e} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;7;S;Empty;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;C;Train;Ranged;Right;4;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Ranged;Down;25;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,3) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(7)} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,10) u.train(Ranged,Right,4)} else { e}}} if(OpponentHasNumberOfUnits(Worker,3)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest)} else { e} u.train(Ranged,Down,25) for(Unit u){if(u.canHarvest()) then {u.idle()} else { u.attack(LessHealthy)}} for(Unit u){u.build(Barracks,EnemyDir,9)}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;7;S;Empty;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;C;Train;Ranged;Right;4;S;Empty;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,3) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(7)} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,10) u.train(Ranged,Right,4)} else { e}}} for(Unit u){if(u.canHarvest()) then {e} else { u.attack(LessHealthy)}} for(Unit u){u.build(Barracks,EnemyDir,9)}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Left;7	for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){u.idle()} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Closest)} else { u.build(Barracks,EnemyDir,9) u.harvest(25)} u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Left,7)}}}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Train;Light;Left;7	for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){u.idle()} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Enemy,Closest)} else { u.build(Barracks,EnemyDir,9) u.harvest(25)} u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Harvest;8;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Right,5) for(Unit u){u.train(Light,Left,6)} u.harvest(8) u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;100;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,5) for(Unit u){u.harvest(4)} for(Unit u){u.idle() u.build(Barracks,Left,100) for(Unit u){u.train(Heavy,EnemyDir,15)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.attack(MostHealthy)}}}
S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Train;Worker;EnemyDir;6	if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.train(Worker,EnemyDir,6)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.idle() u.harvest(6)} for(Unit u){u.attack(Strongest) u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Up;2;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;20;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canHarvest()) then {u.harvest(6)}} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Up,6)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveAway() u.build(Barracks,Up,2) u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,20)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Up;2;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;20;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canHarvest()) then {u.harvest(2)} u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Up,6)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveAway() u.build(Barracks,Up,2) u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,20)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Worker;Up;6;S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;20;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canHarvest()) then {u.harvest(2)} u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Up,6)} for(Unit u){u.build(Barracks,Down,25) u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,20)} for(Unit u){for(Unit u){u.train(Worker,Up,8)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Heavy;Down;9;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;4;S;C;Train;Light;Up;6;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,7)} for(Unit u){for(Unit u){u.idle() u.harvest(50)} u.moveToUnit(Ally,Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.train(Light,Left,4) u.train(Light,Up,6) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Heavy;Down;9;S;C;Build;Barracks;EnemyDir;7;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Closest;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;4;S;C;Train;Light;Up;6;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,7) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Closest)} else { e}} for(Unit u){for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.train(Light,Left,4) u.train(Light,Up,6) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Heavy;Down;9;S;C;Build;Barracks;EnemyDir;7;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Closest;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;4;S;C;Train;Worker;Up;6;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,7) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Closest)} else { e}} for(Unit u){for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Closest) for(Unit u){u.moveAway()} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.train(Light,Left,4) u.train(Worker,Up,6) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Heavy;Down;9;S;C;Build;Barracks;EnemyDir;7;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Closest;S;Empty;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Weakest;S;C;Train;Worker;Right;6;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,7) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Closest)} else { e}} for(Unit u){for(Unit u){u.harvest(4)} for(Unit u){u.moveAway()} if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Weakest)} u.train(Worker,Right,6) if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Heavy;Down;9;S;C;Build;Barracks;EnemyDir;7;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Idle;S;C;Attack;Closest;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Right;6;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,7) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.attack(Closest)} else { e}} for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(3)} u.train(Worker,Right,6) if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Left;6;S;For_S;S;C;Harvest;8	for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} if(u.HasUnitWithinDistanceFromOpponent(1)) then {if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Light,Left,6) for(Unit u){u.harvest(8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Farthest;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Light;Left;6;S;For_S;S;S_S;S;C;Harvest;8;S;C;Idle	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Farthest)} u.attack(Weakest) u.train(Heavy,Down,5) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest) u.train(Light,Left,6) for(Unit u){u.harvest(8) u.idle()}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Light;Left;6;S;For_S;S;C;Idle	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(4)} u.train(Light,Left,6) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Light;Left;6;S;For_S;S;C;Idle	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(4)} u.train(Light,Left,6) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Train;Worker;Right;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.attack(Closest) u.train(Heavy,EnemyDir,7)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(5)) then {u.train(Worker,Right,50)}} u.moveToUnit(Ally,Farthest) u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;7;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.train(Heavy,EnemyDir,7) for(Unit u){u.train(Heavy,Down,2)}} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.build(Barracks,EnemyDir,5)} if(HasNumberOfUnits(Barracks,9)) then {for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest)}} for(Unit u){for(Unit u){u.harvest(4) u.train(Ranged,EnemyDir,25) u.idle() u.attack(MostHealthy)} if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,10) u.train(Worker,EnemyDir,15)}}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;7;S;For_S;S;C;Train;Ranged;Left;25;S;C;Harvest;20;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Attack;Farthest;S;Empty	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,7) for(Unit u){u.train(Ranged,Left,25)} u.harvest(20)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(Farthest)}} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;S_S;S;C;Train;Ranged;Left;25;S;C;Idle;S;C;Harvest;20;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Attack;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.train(Ranged,Left,25) u.idle()} u.harvest(20)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(LessHealthy)}} else { e}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Left;3	for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,Left,3)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Train;Worker;EnemyDir;7;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(1) u.train(Worker,EnemyDir,7)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;15;S;C;Attack;MostHealthy;S;S_S;S;C;MoveAway;S;C;Train;Light;Up;25;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Right,5)} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(15)} else { u.attack(MostHealthy)} u.moveAway() u.train(Light,Up,25)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;50;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Left;50;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Train;Worker;Down;25;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;CanAttack;S;C;Attack;Farthest	for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(50)}} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,5)} if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Left,50) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.train(Worker,Right,9)} u.train(Worker,Down,25) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} if(u.canAttack()) then {u.attack(Farthest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;50;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;Train;Ranged;Left;50;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(50)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,5)} u.train(Ranged,Left,50) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;EnemyDir;50;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;50;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,50) for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(50)}} u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;EnemyDir;50;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;50;S;C;Train;Heavy;Up;100;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,50) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(50) u.train(Heavy,Up,100)}} u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(50) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,100)}} for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Left,5)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,3)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(20) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,100)}} for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Left,5)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,3)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;3;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;EnemyDir;8	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest) u.moveAway()} else { u.train(Heavy,Up,3) u.harvest(3) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Weakest) u.train(Worker,Up,2) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,EnemyDir,3) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Ranged,Right,3)} for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,MostHealthy)}} if(u.isBuilder()) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,8)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Up;100;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;EnemyDir;8	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)} else { u.train(Heavy,Up,100) u.harvest(3) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Weakest) u.train(Worker,Up,2) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,EnemyDir,3) u.moveToUnit(Ally,Farthest)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,8)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Up;50;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;EnemyDir;8	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)} else { u.train(Heavy,Up,50) u.harvest(3) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,8)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Strongest	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(1)}} u.train(Worker,Up,3) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.idle() for(Unit u){u.train(Light,Left,9)} for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(15)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() for(Unit u){u.idle()} u.attack(Farthest) for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Down,6)} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.harvest(1)} u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)} else { e}}} u.train(Worker,EnemyDir,9) u.attack(Farthest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;EnemyDir;5;S;C;Train;Ranged;Right;8;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.attack(LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,EnemyDir,5)} u.train(Ranged,Right,8) u.harvest(100) u.attack(Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;Down;15;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;3;S;Empty;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway	for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,EnemyDir,5) for(Unit u){u.train(Ranged,Down,15)} u.idle()} for(Unit u){if(u.canAttack()) then {u.harvest(3)} else { e}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveAway()}}}
S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Up;25;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;Up;8	for(Unit u){for(Unit u){for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} u.harvest(25) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Up,25)}} u.attack(LessHealthy)}} for(Unit u){u.train(Ranged,Up,8)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;4;S;S_S;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Attack;Weakest	for(Unit u){u.idle() u.build(Barracks,Left,4)} for(Unit u){u.harvest(100)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)}} u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Right;4;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Down;10	for(Unit u){u.harvest(8) u.attack(Strongest) for(Unit u){u.build(Barracks,Right,4)}} for(Unit u){if(u.canAttack()) then {e} else { u.train(Light,Down,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;MoveAway;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Up;50	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { u.moveAway()} if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.build(Barracks,Left,4) u.train(Light,Left,3) for(Unit u){u.idle()} u.harvest(7)}} for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,Strongest)} u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Up;50	for(Unit u){u.attack(Weakest) if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.build(Barracks,Left,4) u.train(Light,Left,3) for(Unit u){u.idle()} u.harvest(7)}} for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,Strongest)} u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;C;Train;Ranged;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Up;50	for(Unit u){u.attack(Weakest) if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { u.train(Ranged,EnemyDir,9)} for(Unit u){u.build(Barracks,Left,4) u.train(Light,Left,3) for(Unit u){u.idle()} u.harvest(7)}} for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,Strongest)} u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;10;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle() u.build(Barracks,Right,10) for(Unit u){u.train(Light,Left,25)} u.harvest(4) u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;7;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;4	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,7)} else { u.moveToUnit(Enemy,Weakest)} if(u.canAttack()) then {for(Unit u){u.idle()}}} u.train(Heavy,Right,100) for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Farthest)} else { u.harvest(4)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;7;S;Empty;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,7)} else { e} u.harvest(4) for(Unit u){u.idle()}} u.train(Heavy,Right,100) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;7;S;Empty;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,7)} else { e} u.harvest(4) for(Unit u){u.idle()}} u.train(Heavy,Right,100) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;2;S;Empty;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,2)} else { e} u.harvest(4) for(Unit u){u.idle()}} u.train(Heavy,Right,100) for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.attack(MostHealthy)}}} u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Down;3;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;8;S;C;Train;Light;Left;20	for(Unit u){u.harvest(2) u.build(Barracks,Down,3) if(u.canHarvest()) then {for(Unit u){u.harvest(7)}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} u.train(Worker,Up,8) u.train(Light,Left,20)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;3;S;For_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;C;Build;Barracks;Down;10;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Right;15;S;C;Attack;Closest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;6;S;C;Train;Heavy;Left;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(HasLessNumberOfUnits(Heavy,3)) then {for(Unit u){u.train(Light,Left,2) u.build(Barracks,Down,10) if(u.isBuilder()) then {u.harvest(7)} else { u.train(Heavy,Right,15) u.attack(Closest)}}} for(Unit u){u.attack(LessHealthy)}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,6) u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;20;S;C;Build;Barracks;Left;2;S;S_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle() u.train(Light,Left,20)} u.build(Barracks,Left,2)} for(Unit u){u.harvest(20)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;10;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;20;S;For_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest	for(Unit u){u.train(Light,EnemyDir,10) for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,20)}}} for(Unit u){u.harvest(6) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;10;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Up;50	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,15)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(10)}} for(Unit u){for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Heavy,Up,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;6;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,8) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(2)} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Weakest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,6)) then {u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;1;S;C;Train;Heavy;EnemyDir;25;S;S_S;S;For_S;S;C;Harvest;4;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.is(Worker)) then {u.build(Barracks,EnemyDir,2)} else { u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,1)} u.train(Heavy,EnemyDir,25) for(Unit u){u.harvest(4)} u.idle()}} for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(50)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;4;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.is(Worker)) then {u.build(Barracks,EnemyDir,25)} else { u.attack(Closest)} u.train(Heavy,EnemyDir,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(4)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest)} else { e}}} for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(50)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;4;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;Train;Light;Left;25;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.is(Worker)) then {u.build(Barracks,EnemyDir,25)} else { u.attack(Closest)} u.train(Heavy,EnemyDir,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(4)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest)} else { e}} u.train(Light,Left,25) u.attack(MostHealthy)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;4;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;Train;Light;Left;25;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Ally,Farthest) u.build(Barracks,EnemyDir,25)} else { u.attack(Closest)} u.train(Heavy,EnemyDir,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(4)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Weakest)} else { e}} u.train(Light,Left,25) u.attack(MostHealthy)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;9;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(HasNumberOfUnits(Base,9)) then {u.moveToUnit(Ally,MostHealthy)} else { u.attack(Closest)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest) for(Unit u){u.idle()}}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest)} else { e}}} for(Unit u){for(Unit u){if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,100)}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;9;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;10;S;C;Harvest;50;S;Empty;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(HasNumberOfUnits(Base,9)) then {u.moveToUnit(Ally,Closest)} else { u.attack(Closest)} if(u.isBuilder()) then {for(Unit u){u.harvest(10) u.harvest(50)}} else { e}} for(Unit u){for(Unit u){if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,100)}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;10;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(1)} for(Unit u){u.idle() u.train(Worker,Down,10) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;25;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Left;10;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Right,6) u.idle() u.harvest(25) if(u.canAttack()) then {u.attack(LessHealthy)}} for(Unit u){u.train(Light,Left,10)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Right,6) u.harvest(3)} for(Unit u){u.idle() u.train(Light,Left,10)} for(Unit u){for(Unit u){for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;20;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Worker;Down;100	for(Unit u){for(Unit u){u.build(Barracks,Down,5)} u.harvest(25) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,20) u.train(Light,Left,9)} for(Unit u){u.train(Worker,Down,100)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;9;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Up;5;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(2) u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Up,5)} for(Unit u){u.moveAway() u.attack(LessHealthy) for(Unit u){if(u.canAttack()) then {if(u.is(Ranged)) then {u.moveToUnit(Enemy,Closest)}}}} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;9;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Up;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(2) u.build(Barracks,EnemyDir,1)}} for(Unit u){if(u.canAttack()) then {u.attack(MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Up,5)} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;9;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Heavy;Down;9;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(2) u.build(Barracks,EnemyDir,1)}} for(Unit u){if(u.canAttack()) then {u.attack(MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Heavy,Down,9)} u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;10;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;20;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Right,10)} for(Unit u){u.idle() u.train(Heavy,Down,20)} for(Unit u){u.harvest(2) u.attack(LessHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;2	for(Unit u){u.train(Worker,Left,5) u.train(Worker,Down,9) u.attack(LessHealthy) for(Unit u){u.harvest(2)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){u.harvest(6) if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}} for(Unit u){for(Unit u){u.train(Worker,Down,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Idle;S;C;Harvest;25;S;For_S;S;C;Build;Barracks;Left;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;6;S;For_S;S;C;Train;Ranged;Left;4	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle()} u.harvest(25) for(Unit u){u.build(Barracks,Left,15)}} for(Unit u){u.train(Heavy,Right,2) u.attack(Closest) u.train(Light,Right,6)} for(Unit u){u.train(Ranged,Left,4)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.train(Heavy,Left,5) for(Unit u){u.idle()} u.harvest(9) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway()} for(Unit u){u.attack(MostHealthy) if(u.is(Worker)) then {u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveAway;S;C;Train;Light;Up;100	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.train(Heavy,Left,5) for(Unit u){u.idle()} u.harvest(9) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveAway()}} u.train(Light,Up,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;1;S;C;Attack;Closest;S;Empty;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;Train;Heavy;Right;7;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.train(Worker,EnemyDir,4)} u.idle() if(OpponentHasNumberOfUnits(Light,1)) then {u.attack(Closest)} else { e} u.attack(Weakest) for(Unit u){u.harvest(100)} for(Unit u){u.train(Heavy,Right,7)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Up,100)} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Weakest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canHarvest()) then {u.idle()}} for(Unit u){u.harvest(4) u.moveAway()} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Farthest) u.harvest(10) for(Unit u){u.moveToUnit(Enemy,Closest)} u.train(Worker,EnemyDir,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canHarvest()) then {u.idle()}} for(Unit u){u.harvest(10)} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)} u.train(Worker,EnemyDir,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;6;S;C;Harvest;50;S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Ranged,Up,6) u.harvest(50) for(Unit u){u.build(Barracks,Left,3) u.idle()} u.attack(Closest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;C;Harvest;8;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Down;20;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Base)) then {e} else { for(Unit u){u.idle()}}} for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.harvest(8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.train(Light,Down,20) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,LessHealthy)} if(OpponentHasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;10;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Right;3;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.build(Barracks,Up,25) u.harvest(9)} for(Unit u){u.idle() for(Unit u){u.attack(MostHealthy)} u.train(Light,EnemyDir,10) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){for(Unit u){u.train(Light,Right,3)}} for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Up;50;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.build(Barracks,Up,25) u.harvest(9)} for(Unit u){u.idle() for(Unit u){u.attack(Weakest)} u.train(Light,Up,50) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)}} u.moveToUnit(Enemy,Closest) for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.train(Light,Right,3)} for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Left;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.idle() for(Unit u){u.build(Barracks,EnemyDir,50) u.harvest(25) for(Unit u){u.idle()}} for(Unit u){u.attack(Weakest)} u.train(Light,Left,6)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,4) for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;Left;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.idle() for(Unit u){u.build(Barracks,EnemyDir,50) u.harvest(25) for(Unit u){u.idle()}} for(Unit u){u.attack(MostHealthy)} u.train(Light,Left,6)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Down;15;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,50) u.harvest(25) for(Unit u){u.idle()}} u.train(Light,EnemyDir,7) u.moveToUnit(Ally,Strongest) for(Unit u){u.moveAway()} u.attack(MostHealthy) u.train(Light,Down,15) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Light;Down;15;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Worker;Up;50;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,50) u.harvest(25) for(Unit u){u.idle()}} u.train(Light,EnemyDir,7) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveAway()} u.train(Light,Down,15) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Up,50)} for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;C;Train;Light;Down;15;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Up,50) u.harvest(25) for(Unit u){u.idle()}} u.train(Light,Down,15) for(Unit u){u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;C;Train;Light;Down;15;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Up,50) u.harvest(25) for(Unit u){u.idle()}} u.train(Light,Down,15) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;25;S;For_S;S;C;Idle;S;C;Train;Light;Down;15;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Up,50) u.harvest(25) for(Unit u){u.idle()}} u.train(Light,Down,15) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Idle;S;C;Harvest;15;S;For_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Light;Left;9;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Worker;Up;15;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Down,50) u.idle() u.harvest(15) for(Unit u){u.idle()} u.train(Heavy,EnemyDir,25)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Farthest) if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){if(u.canHarvest()) then {e} else { u.train(Light,Left,9)} if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Worker,Up,15)}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;25;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;3;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;2;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;Empty;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Light,Right,25) for(Unit u){u.idle()} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.build(Barracks,Up,5)} if(OpponentHasNumberOfUnits(Light,3)) then {e} else { for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2)} else { e}}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Strongest)}} for(Unit u){u.harvest(9) u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.attack(MostHealthy)}} if(HaveQtdUnitsAttacking(0)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {e} else { if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest)}}}} else { for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;10;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;7;S;For_S;S;C;Train;Heavy;EnemyDir;3	for(Unit u){u.build(Barracks,Left,10) u.idle()} for(Unit u){u.harvest(1) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.train(Heavy,Left,1)} u.attack(MostHealthy)} for(Unit u){u.train(Heavy,Down,7) for(Unit u){u.train(Heavy,EnemyDir,3)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.harvest(1) for(Unit u){u.idle()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.attack(LessHealthy)}} else { u.attack(Strongest)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Train;Worker;EnemyDir;1;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {e} else { u.train(Heavy,EnemyDir,8) u.train(Worker,EnemyDir,1)}} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Base;Right;10;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;5;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Left;15;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;15;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Base,Right,10) u.idle()} if(HasNumberOfWorkersHarvesting(3)) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} else { for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.harvest(2)} if(OpponentHasNumberOfUnits(Heavy,5)) then {if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.canHarvest()) then {e} else { u.train(Worker,Left,15)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,15)}}} u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;5;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Left;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;7;S;C;MoveAway;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()}} if(HasNumberOfWorkersHarvesting(3)) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} else { for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.harvest(2)} if(OpponentHasNumberOfUnits(Heavy,5)) then {if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.canHarvest()) then {e} else { u.train(Worker,Left,15)} u.moveToUnit(Enemy,LessHealthy) u.harvest(7) u.moveAway() for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;8;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;7;S;C;Train;Worker;Right;5;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Down,8)} u.idle()} for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(9)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(HaveQtdUnitsAttacking(15)) then {if(OpponentHasNumberOfUnits(Light,8)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Ally,Strongest)}}} for(Unit u){for(Unit u){u.train(Light,Down,7)} u.train(Worker,Right,5)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Right,20) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Down;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;9;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;7;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,8)}} for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(9)} u.moveAway() u.attack(Strongest)} for(Unit u){for(Unit u){u.train(Light,Up,7)} u.train(Worker,Right,5)} for(Unit u){u.train(Worker,Right,20) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,100) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Strongest)} if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Build;Barracks;Left;15;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;25;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;Left;5;S;Empty	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.build(Barracks,Left,15)}} else { u.attack(LessHealthy)}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.harvest(25)}}} for(Unit u){if(u.canHarvest()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Left,5)} else { e}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){for(Unit u){u.build(Barracks,Down,25)} for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(6)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}} for(Unit u){for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;8;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(8)} for(Unit u){u.idle()}} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.canAttack()) then {u.attack(Strongest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down;5	for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Down,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Strongest) if(u.canHarvest()) then {for(Unit u){for(Unit u){u.harvest(1)} u.attack(Weakest)}}} u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,9) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Strongest) if(u.canHarvest()) then {for(Unit u){for(Unit u){u.harvest(1)} u.attack(Weakest)}}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Up,3)} u.train(Worker,Left,9) u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Strongest) if(u.canHarvest()) then {for(Unit u){for(Unit u){u.harvest(1)} u.attack(Weakest)}}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Up,3)} u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;Empty;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Heavy;Down;1;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;8;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Ranged,Up,2) for(Unit u){u.build(Barracks,EnemyDir,8) if(u.canAttack()) then {u.harvest(1)} else { e} u.attack(Closest)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Heavy,Down,1)}}} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,MostHealthy) if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Closest)}} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;Empty;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;LessHealthy;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Down;1	for(Unit u){u.train(Ranged,Up,2) for(Unit u){u.build(Barracks,EnemyDir,8) if(u.canAttack()) then {u.harvest(1)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(LessHealthy)} u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,1)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;Empty;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;LessHealthy;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Down;1	for(Unit u){u.train(Heavy,Up,2) for(Unit u){u.build(Barracks,EnemyDir,8) if(u.canAttack()) then {u.harvest(1)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(LessHealthy)} u.attack(Weakest) for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,1)}}}
S;For_S;S;S_S;S;C;Train;Light;Up;20;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;20;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;Empty;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle	for(Unit u){u.train(Light,Up,20) for(Unit u){u.build(Barracks,EnemyDir,8) if(HasNumberOfUnits(Heavy,20)) then {u.moveToUnit(Ally,Farthest)} else { u.train(Worker,EnemyDir,8)} if(u.canAttack()) then {u.harvest(4)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.idle() for(Unit u){u.harvest(3)} u.moveAway() u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Ally,Weakest)}} for(Unit u){u.build(Barracks,Left,25)} u.harvest(15) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Left,1)} u.moveToUnit(Enemy,LessHealthy) if(u.is(Heavy)) then {for(Unit u){u.moveAway()}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;3;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.moveAway() for(Unit u){u.harvest(3)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Ally,Weakest)}} for(Unit u){u.build(Barracks,Left,25)} u.harvest(15) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Left,1)} u.moveToUnit(Enemy,LessHealthy) if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Ally,Weakest)}} for(Unit u){u.build(Barracks,Left,25)} u.harvest(15) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Left,1)} u.moveToUnit(Enemy,LessHealthy) if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(20)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Heavy,Down,50) u.moveToUnit(Ally,Weakest)}} for(Unit u){u.build(Barracks,Left,25)} u.harvest(7) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Left,1)} u.moveToUnit(Enemy,LessHealthy) if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Harvest;100;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Left;3;S;Empty;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;9;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;15;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;9;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.harvest(100)} for(Unit u){u.build(Barracks,Left,25)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Left,3)} else { e} u.harvest(7) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Left,9)} if(OpponentHasNumberOfUnits(Base,15)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} if(u.canAttack()) then {for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Ranged,9)) then {u.moveToUnit(Ally,LessHealthy)}}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;S_S;S;C;Train;Worker;Up;15;S;C;Train;Light;Up;10;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;5;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){u.train(Ranged,Up,2) u.train(Worker,Up,15) u.train(Light,Up,10) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,EnemyDir,9)} u.harvest(5) u.harvest(20)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;S_S;S;C;Train;Worker;Up;15;S;C;Train;Light;Up;10;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){u.train(Ranged,Up,2) u.train(Worker,Up,15) u.train(Light,Up,10) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,EnemyDir,9)} u.harvest(5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.harvest(20)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;S_S;S;C;Train;Worker;Up;15;S;C;Train;Light;Up;10;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty	for(Unit u){u.train(Ranged,Up,2) u.train(Worker,Up,15) u.train(Light,Up,10) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,EnemyDir,9)} u.harvest(5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.harvest(20)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e}}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;3;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;C;Train;Light;Down;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Down,3)} for(Unit u){u.idle() for(Unit u){u.harvest(2)} for(Unit u){u.train(Light,Down,100)} u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.train(Light,Left,7)} for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.harvest(4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.attack(Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Light,Right,15) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Left,5) u.build(Barracks,EnemyDir,8) u.idle() u.harvest(10) u.moveToUnit(Enemy,MostHealthy)} if(OpponentHasNumberOfUnits(Base,25)) then {u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;15;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;25;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Light,Right,15) u.harvest(3)} for(Unit u){u.idle() u.moveAway() u.train(Worker,Left,5) u.build(Barracks,EnemyDir,8) u.harvest(10) u.moveToUnit(Enemy,MostHealthy)} if(OpponentHasNumberOfUnits(Base,25)) then {u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;C;Harvest;4;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,EnemyDir,50)} for(Unit u){u.build(Barracks,EnemyDir,3) u.train(Worker,Up,8) u.harvest(4) u.idle() if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)} u.moveAway() u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,EnemyDir,50)} for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(20) u.idle() u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;6;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;25;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Heavy;Right;10;S;For_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(OpponentHasNumberOfUnits(Worker,6)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){for(Unit u){u.train(Worker,Left,15) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(25)} if(u.canAttack()) then {u.attack(Strongest)} for(Unit u){u.build(Barracks,EnemyDir,6)} u.train(Heavy,Right,10)} for(Unit u){u.train(Light,Up,8)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;Closest;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Down;1	for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Closest)} else { u.harvest(3)} for(Unit u){u.train(Worker,Down,1)}}}}
S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,100) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;8;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Down;20;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Ally;Strongest;S;Empty	for(Unit u){for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Worker,8)) then {if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Down,20)} for(Unit u){u.moveAway()} for(Unit u){u.attack(Closest)}}} if(HasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Ally,Strongest)} else { e}}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;50;S;For_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Up;2	for(Unit u){u.build(Barracks,Right,50)} for(Unit u){u.harvest(50) u.attack(Weakest) u.train(Light,Up,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;9;S;C;Train;Worker;Right;100;S;C;Build;Barracks;Left;10;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Down;4	for(Unit u){u.idle() u.harvest(9) u.train(Worker,Right,100) u.build(Barracks,Left,10) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Down,4)}}
S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Up;25;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;100;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} else { u.train(Heavy,Up,25)} u.idle() u.build(Barracks,Down,100) u.harvest(6) u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Worker;Down;4;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Up;9;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)} else { e} u.train(Worker,Down,4) if(u.canHarvest()) then {e} else { u.train(Worker,Up,9)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.harvest(6)}} if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,10) for(Unit u){u.moveToUnit(Enemy,Weakest)}} if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;100;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} for(Unit u){u.harvest(100)} for(Unit u){if(u.canAttack()) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Worker,EnemyDir,50)}}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;EnemyDir;4	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Up,9)} for(Unit u){if(u.canHarvest()) then {u.harvest(7) u.moveToUnit(Enemy,MostHealthy)}}} for(Unit u){u.attack(LessHealthy) u.train(Ranged,EnemyDir,4)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;3;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Worker;Down;4;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Ranged;Down;20;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Ranged,Right,3) u.build(Barracks,Left,6) for(Unit u){u.train(Worker,Down,4)} u.idle() u.harvest(3) u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){if(u.isBuilder()) then {e} else { u.train(Ranged,Down,20)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.canAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,Weakest)}}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;15;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;Up;1;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Right;8;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.harvest(8)}} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(100) u.moveToUnit(Enemy,Farthest)} else { for(Unit u){u.build(Barracks,Right,20) u.harvest(15)}}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.train(Ranged,Up,1)} else { u.attack(Closest)}}}} for(Unit u){u.train(Light,Right,8)} for(Unit u){u.moveAway() u.attack(Farthest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Harvest;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.harvest(8)}} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(1) u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.build(Barracks,Right,20) u.harvest(15)}}} for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Right,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.build(Barracks,Right,20) u.harvest(15)}}} for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Right,8)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Down;1;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;15	for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.build(Barracks,Right,20) u.harvest(15)} u.moveToUnit(Enemy,MostHealthy) u.attack(Closest)}}} for(Unit u){u.train(Light,Down,1)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() for(Unit u){u.moveAway()}} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.moveToUnit(Ally,Farthest) if(u.canAttack()) then {u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(4)}} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(1)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()} for(Unit u){u.harvest(100)}} for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {e} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,LessHealthy)}}} if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Ally,MostHealthy)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;For_S;S;C;Train;Worker;Down;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Down;8;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Closest	for(Unit u){u.idle() u.harvest(2) for(Unit u){u.train(Worker,Down,9)}} for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.attack(Strongest) u.train(Light,Down,8) for(Unit u){if(u.isBuilder()) then {u.attack(Closest)}}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Down;3;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Down;100	for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)} u.train(Worker,Down,3) u.attack(Closest)} for(Unit u){u.train(Light,Down,100)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Train;Heavy;Right;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;15	for(Unit u){u.build(Barracks,Left,7) u.train(Heavy,Right,10)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(u.isBuilder()) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.harvest(20)}}}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Train;Heavy;Up;10;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Down;25;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Left,7) u.train(Heavy,Up,10) u.harvest(2) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.idle() u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Light,Down,25)} u.attack(Strongest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;C;Train;Heavy;Up;10;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Up;8	for(Unit u){u.build(Barracks,Left,7) u.idle() u.train(Heavy,Up,10) u.harvest(2) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,Up,8)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Up;10;S;C;Build;Barracks;Left;9;S;C;Harvest;20;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){for(Unit u){u.train(Light,Up,10)}} u.build(Barracks,Left,9) u.harvest(20)} for(Unit u){if(HasNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;For_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;100;S;C;Harvest;8;S;For_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(1)} for(Unit u){if(HasLessNumberOfUnits(Worker,5)) then {for(Unit u){u.attack(Farthest)}}} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { e}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100) u.harvest(8)} for(Unit u){for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;100;S;C;Harvest;8;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy)}}}} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { e}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100) u.harvest(8)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;100;S;C;Harvest;8;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { e}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100) u.harvest(8)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;100;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { e}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;100;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { u.attack(Strongest)}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;100;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.build(Barracks,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { u.attack(Strongest)}} if(OpponentHasNumberOfUnits(Light,10)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,100)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;6;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Right;8;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;Up;2;S;S_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(6)} if(u.HasUnitThatKillsInOneAttack()) then {u.idle() u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Right,8)} else { u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.build(Barracks,Right,50)} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,2) u.train(Ranged,Up,2) u.train(Ranged,Up,6) u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { e}}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;15;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.harvest(15) for(Unit u){u.build(Barracks,EnemyDir,2)}}} for(Unit u){if(HasNumberOfUnits(Barracks,25)) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest)} u.attack(Strongest) u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { e} u.train(Heavy,Down,8)}}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;15;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(15) for(Unit u){u.build(Barracks,EnemyDir,2)} u.attack(LessHealthy)} for(Unit u){if(HasNumberOfUnits(Barracks,25)) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { e} u.train(Heavy,Down,8)}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;4;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(4)}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.train(Worker,Up,10) u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;25;S;C;Harvest;3;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Base;EnemyDir;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Attack;Farthest;S;For_S;S;C;Attack;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(25)} u.harvest(3)} else { u.train(Worker,EnemyDir,50)} for(Unit u){u.idle()}} for(Unit u){u.build(Base,EnemyDir,6) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Farthest)}} for(Unit u){u.attack(Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;For_S;S;S_S;S;C;Train;Light;Right;100;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Train;Worker;Up;15;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.train(Light,Right,100) u.harvest(7) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveAway()} for(Unit u){u.harvest(100)} for(Unit u){u.train(Worker,Up,15) u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Left;6;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.harvest(20)} else { u.attack(Weakest)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,6)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;20;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Left;6;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Down,7)} u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.harvest(20)} else { u.attack(Weakest)} for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,6)} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;For_S;S;C;Harvest;20;S;C;Attack;Farthest;S;For_S;S;C;Train;Light;Down;10;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,9) for(Unit u){u.harvest(20)} u.attack(Farthest) for(Unit u){u.train(Light,Down,10)} u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Train;Heavy;Down;20;S;C;Build;Barracks;Down;9;S;For_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;20;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){for(Unit u){u.train(Heavy,Down,20)}}}}} u.build(Barracks,Down,9)} for(Unit u){for(Unit u){u.harvest(4)}} for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { for(Unit u){u.train(Light,Up,20)}}}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,MostHealthy)}} if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveAway;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Down;20;S;C;Build;Barracks;Down;9;S;For_S;S;C;Harvest;4;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;20;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;4;S;Empty;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(2) u.moveAway() u.idle()} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Down,20)}}} u.build(Barracks,Down,9)} for(Unit u){u.harvest(4)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { for(Unit u){u.train(Light,Up,20)}}}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,4)}} else { e} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveAway;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Down;20;S;C;Build;Barracks;Down;9;S;For_S;S;C;Harvest;4;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;20;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;4;S;Empty;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(2) u.moveAway() u.idle()} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Down,20)}}} u.build(Barracks,Down,9)} for(Unit u){u.harvest(4)} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { for(Unit u){u.train(Light,Up,20)}}}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,4)}} else { e} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;1;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,20) u.harvest(1) u.attack(Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;For_S;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Left;7	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){for(Unit u){u.harvest(7)}} for(Unit u){u.attack(Weakest)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,100)}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Heavy,Left,7)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Harvest;15;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.build(Barracks,Left,2)} for(Unit u){u.harvest(7)} for(Unit u){u.train(Light,Left,8) u.harvest(15) u.attack(Weakest)} for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;8;S;S_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;5;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,8) u.harvest(5) u.idle()} for(Unit u){u.train(Heavy,Up,5)} for(Unit u){if(HasNumberOfUnits(Worker,8)) then {u.moveToUnit(Ally,Weakest)}} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;6;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;Empty;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Up;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(10) if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){if(OpponentHasNumberOfUnits(Ranged,6)) then {u.moveToUnit(Ally,Farthest)} else { e}}}} else { e}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Worker,Up,100)}}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;9;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(7) for(Unit u){u.build(Barracks,EnemyDir,9)} u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,9) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Train;Light;Left;25	for(Unit u){u.harvest(4) for(Unit u){u.build(Barracks,EnemyDir,9)} u.attack(MostHealthy)} for(Unit u){for(Unit u){u.train(Light,Left,25)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;20;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(3) u.moveAway() u.train(Worker,Up,20)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,EnemyDir,25)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;8;S;C;MoveAway;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.train(Worker,Left,8) u.moveAway()} for(Unit u){u.harvest(4) u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;8;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.idle() u.harvest(8) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.attack(Weakest) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,Left,9)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Down;100;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(LessHealthy) u.train(Light,Down,100)}} for(Unit u){u.moveAway() for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Left,9)} u.attack(LessHealthy)} if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.train(Worker,Right,4)} for(Unit u){if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Light,Up,2)} u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Left;9;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Up;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(LessHealthy)}} for(Unit u){u.moveAway() for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Left,9)} u.attack(LessHealthy)} if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.train(Worker,Right,4)} for(Unit u){if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Light,Up,2)} u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Up;8;S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;9;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(15) u.attack(Closest) for(Unit u){u.idle()}} for(Unit u){if(u.is(Base)) then {u.train(Worker,Up,8)}} for(Unit u){for(Unit u){if(HasNumberOfUnits(Heavy,9)) then {u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Up;8	for(Unit u){u.harvest(3) u.attack(Closest) u.moveToUnit(Ally,Closest) for(Unit u){u.idle()}} for(Unit u){if(u.is(Base)) then {u.train(Worker,Up,8)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;1;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;1;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;6;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;C;Train;Ranged;Right;7;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Train;Light;Down;7;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()} if(u.isBuilder()) then {u.harvest(1)} else { u.attack(Closest)}} for(Unit u){u.train(Light,Down,1) u.harvest(6)} if(OpponentHasNumberOfUnits(Worker,6)) then {for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveAway()}} for(Unit u){u.attack(Strongest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,Right,7)}}} for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Weakest)}} for(Unit u){u.train(Worker,Left,100)} for(Unit u){u.train(Light,Down,7)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;1;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;1;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;9;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;C;Train;Ranged;Right;7;S;For_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Train;Light;Down;7;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()} if(u.isBuilder()) then {u.harvest(1)} else { u.attack(Closest)}} for(Unit u){u.train(Light,Down,1) u.harvest(6)} if(OpponentHasNumberOfUnits(Worker,9)) then {for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveAway()}} for(Unit u){u.attack(Strongest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,Right,7)}}} for(Unit u){u.train(Worker,Left,100)} for(Unit u){u.train(Light,Down,7)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;100;S;C;Build;Barracks;Down;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;9;S;Empty;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Down,100) u.build(Barracks,Down,3)} for(Unit u){if(u.is(Worker)) then {u.harvest(9)} else { e}} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;100;S;C;Build;Barracks;Up;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;9;S;Empty;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Down,100) u.build(Barracks,Up,3)} for(Unit u){if(u.is(Worker)) then {u.harvest(9)} else { e}} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Right;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Down;2	for(Unit u){u.build(Barracks,Up,7)} for(Unit u){u.harvest(100)} for(Unit u){u.idle() u.train(Light,Right,20) for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Down,2)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Left;10;S;S_S;S;C;Train;Light;Right;20;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Up,7)} for(Unit u){u.harvest(100)} for(Unit u){u.idle() u.train(Light,Left,10) u.train(Light,Right,20) u.attack(MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Train;Light;Left;10;S;S_S;S;For_S;S;C;Idle;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Up,7)} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Light,Left,10) for(Unit u){u.idle()} u.moveAway() for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;For_S;S;C;Harvest;20;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Light;Left;10;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle;S;If_B_then_S;B;HasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Up,7)} for(Unit u){u.harvest(20)} for(Unit u){u.moveAway() u.train(Light,Left,10) if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.idle()} if(HasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;100;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Up,3) u.harvest(8)} for(Unit u){u.train(Heavy,EnemyDir,100) for(Unit u){for(Unit u){u.idle() for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest) u.idle()} if(u.isBuilder()) then {for(Unit u){u.moveAway()}}}}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(100)) then {e} else { u.moveToUnit(Enemy,Weakest)} u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Farthest	for(Unit u){u.build(Barracks,Up,3) u.harvest(8)} for(Unit u){u.train(Heavy,EnemyDir,100) for(Unit u){u.idle()}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;15;S;C;Harvest;100;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Up,15) u.harvest(100)} for(Unit u){u.train(Heavy,EnemyDir,100) for(Unit u){u.idle() u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;25;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(2) u.attack(LessHealthy) for(Unit u){u.train(Worker,EnemyDir,25)}} if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Ally,Farthest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;25;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(2) u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,25)}} if(HasNumberOfUnits(Barracks,7)) then {u.moveToUnit(Ally,Farthest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Right,10)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;3;S;S_S;S;C;Harvest;100;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;EnemyDir;50	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Right,3) u.harvest(100) u.train(Ranged,Down,1)} u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,EnemyDir,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Right;50;S;C;Build;Barracks;Right;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;4;S;C;Harvest;4;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Base;0;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() u.harvest(2) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,Right,50) u.build(Barracks,Right,5)} u.moveAway()} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Ranged,4)) then {u.harvest(4)}}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Ally,Closest)}} else { e} u.moveToUnit(Enemy,LessHealthy)} if(HasLessNumberOfUnits(Base,0)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;C;Train;Ranged;Right;50;S;C;Build;Barracks;Right;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;4;S;C;Harvest;4;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Base;0;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() u.harvest(2) u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.harvest(5)}} for(Unit u){u.train(Ranged,Right,50) u.build(Barracks,Right,5)} u.moveAway()} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(HasLessNumberOfUnits(Ranged,4)) then {u.harvest(4)}} for(Unit u){if(u.canHarvest()) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}} else { e} u.moveToUnit(Enemy,LessHealthy)} if(HasLessNumberOfUnits(Base,0)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Right;15	for(Unit u){u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.harvest(5)}} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Right,15)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Right;25;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;4;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){for(Unit u){u.harvest(1)} u.attack(Closest)}} for(Unit u){u.train(Worker,Right,25)}} for(Unit u){if(OpponentHasNumberOfUnits(Base,4)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;3;S;C;Attack;Farthest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;For_S;S;C;Train;Light;Left;15	if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.build(Barracks,Right,2) u.harvest(25)} for(Unit u){u.moveToUnit(Enemy,Closest) u.idle() u.train(Heavy,Up,3) u.attack(Farthest)} for(Unit u){if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)} else { e}} for(Unit u){u.train(Light,Left,15)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;For_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;6;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(3) for(Unit u){for(Unit u){u.build(Barracks,Right,8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy)}} for(Unit u){u.train(Light,Right,6)} for(Unit u){for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Train;Light;Left;5;S;C;Build;Barracks;Left;4;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Up;25	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Light,Left,5)} else { u.build(Barracks,Left,4)}} u.idle()} for(Unit u){for(Unit u){u.harvest(10) u.moveToUnit(Enemy,Strongest)} u.train(Heavy,Up,25)}
S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Build;Barracks;Left;4;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Strongest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;2;S;C;Train;Heavy;Up;4;S;C;Train;Heavy;Up;25	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.build(Barracks,Left,4)}} u.idle()} for(Unit u){for(Unit u){u.harvest(10) u.attack(Strongest) if(HasLessNumberOfUnits(Barracks,2)) then {u.train(Heavy,Up,4)}} u.train(Heavy,Up,25)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Train;Light;Left;9	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,20)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){if(u.canAttack()) then {u.harvest(3) for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { e} u.train(Light,Left,9)}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;C;Idle;S;C;Build;Barracks;Right;25;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Train;Heavy;Down;7;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,3)} u.idle() u.build(Barracks,Right,25)}} for(Unit u){u.harvest(5) u.train(Heavy,Down,7)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;100;S;S_S;S;C;Train;Light;Right;7;S;C;Idle;S;C;Harvest;100;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;9;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.isBuilder()) then {u.idle() u.build(Barracks,Left,100)} u.train(Light,Right,7) u.idle() u.harvest(100)} for(Unit u){for(Unit u){for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} else { e} if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} else { e} u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Strongest) if(HasLessNumberOfUnits(Worker,9)) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Up,15)} for(Unit u){u.harvest(9)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,Weakest)} u.train(Light,EnemyDir,9) u.attack(MostHealthy)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,15)} for(Unit u){u.harvest(9)} for(Unit u){u.train(Light,EnemyDir,9) u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,15)} for(Unit u){u.harvest(9)} for(Unit u){u.train(Light,EnemyDir,9) u.attack(Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,9)} for(Unit u){u.harvest(3) u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,15)} u.moveToUnit(Enemy,Strongest) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Farthest	for(Unit u){u.build(Barracks,EnemyDir,9)} for(Unit u){u.harvest(3) u.idle()} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,15)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;15;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,15) u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)} else { e} if(u.canAttack()) then {u.idle()} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;Up;1	for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){for(Unit u){u.harvest(20)} for(Unit u){u.train(Light,EnemyDir,1)} for(Unit u){u.attack(Weakest)} if(HaveQtdUnitsAttacking(4)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { for(Unit u){u.train(Worker,Up,1)}}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;8;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Train;Worker;Down;50;S;C;Train;Worker;Right;9	for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(8)} for(Unit u){u.train(Light,EnemyDir,1)} u.moveAway() u.attack(Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.train(Worker,Down,50)} else { u.train(Worker,Right,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Up;10;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.harvest(2)} if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e} for(Unit u){if(u.canHarvest()) then {u.attack(LessHealthy)}} u.train(Worker,Up,10) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { u.train(Worker,Down,100) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.harvest(2)} if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e} for(Unit u){if(u.canHarvest()) then {u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { u.train(Worker,Down,100) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Up;8;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;HasNumberOfUnits;Ranged;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(1)} if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e} for(Unit u){if(u.canHarvest()) then {u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,8) if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { u.train(Worker,Down,100) if(HasNumberOfUnits(Ranged,50)) then {u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;HasNumberOfUnits;Ranged;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(1)} if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(LessHealthy)}} if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { u.train(Worker,Down,100) if(HasNumberOfUnits(Ranged,50)) then {u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;50;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(50) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()}}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Ranged,EnemyDir,6)} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Right;20;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;EnemyDir;10	for(Unit u){if(u.is(Base)) then {for(Unit u){u.idle()} u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.harvest(25) for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,20)}}}}} for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,5) u.moveToUnit(Ally,MostHealthy) u.train(Light,EnemyDir,10)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Right;20;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;1;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){if(u.is(Base)) then {for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.harvest(25) for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,20)}}}}} for(Unit u){u.attack(Closest) u.train(Worker,Right,1)} for(Unit u){u.train(Heavy,Up,6)}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Train;Ranged;Down;50;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(5)} for(Unit u){u.attack(LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} u.train(Worker,Left,25) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,25) u.idle()}} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Ranged,Down,50)}}} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;25;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Light;Down;4	for(Unit u){u.harvest(5)} for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Worker,Left,25) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,25)}} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,Down,4)}
S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;2;S;Empty;S;S_S;S;C;Train;Worker;Right;7;S;C;Train;Ranged;EnemyDir;2;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;25;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Left;10;S;C;Train;Light;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle() if(OpponentHasNumberOfUnits(Light,2)) then {e} else { u.train(Worker,Right,7) u.train(Ranged,EnemyDir,2)} u.harvest(3)}} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)} if(HasLessNumberOfUnits(Heavy,25)) then {for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,10)} u.train(Light,EnemyDir,20)}} else { u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(15)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { e} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){if(u.is(Ranged)) then {if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} u.attack(Closest)} for(Unit u){u.harvest(7)} for(Unit u){u.moveAway()} u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;2;S;Empty;S;S_S;S;C;Train;Worker;Right;7;S;C;Train;Ranged;EnemyDir;2;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;25;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Left;10;S;C;Train;Light;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() if(OpponentHasNumberOfUnits(Light,2)) then {e} else { u.train(Worker,Right,7) u.train(Ranged,EnemyDir,2)} u.harvest(3)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)} if(HasLessNumberOfUnits(Heavy,25)) then {for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,10)} u.train(Light,EnemyDir,20)}} else { u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(15)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { e} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.is(Ranged)) then {if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} u.attack(Closest)} for(Unit u){u.harvest(7)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)}} u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){u.attack(MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Ranged;EnemyDir;1;S;C;Build;Barracks;Right;6;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Ranged,EnemyDir,1) u.build(Barracks,Right,6) u.harvest(6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;1;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Light;Right;5;S;S_S;S;C;Harvest;25;S;S_S;S;C;Train;Light;Down;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,2) if(HasNumberOfUnits(Light,1)) then {u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.train(Light,Right,5)}}} else { u.harvest(25) u.train(Light,Down,6) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Up,2)}}
S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;6;S;C;Train;Heavy;Left;20;S;C;Attack;LessHealthy	for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,EnemyDir,25) for(Unit u){if(u.is(Worker)) then {u.idle()}} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,6)} u.train(Heavy,Left,20) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;9;S;Empty;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;9;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Right;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;10;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Weakest;S;Empty	for(Unit u){u.harvest(3) u.idle() if(HaveQtdUnitsAttacking(9)) then {e} else { u.build(Barracks,EnemyDir,6)} u.attack(Weakest) if(u.canAttack()) then {e} else { if(OpponentHasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Heavy,Right,25)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,Down,10) u.moveToUnit(Ally,Weakest) if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Weakest)} else { e}}
S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;100;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway;S;C;Train;Heavy;Up;9	for(Unit u){u.harvest(4)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Up,6) u.train(Worker,EnemyDir,100) u.moveToUnit(Enemy,Closest) if(u.isBuilder()) then {e} else { if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()} u.train(Heavy,Up,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;1	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Heavy,EnemyDir,20)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2) u.idle()} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;2;S;C;Train;Worker;Left;10;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Up;2;S;C;Train;Heavy;Up;15	for(Unit u){u.build(Barracks,Down,1) u.harvest(2) u.train(Worker,Left,10)} for(Unit u){u.harvest(5) u.attack(Weakest) u.train(Light,Up,2) u.train(Heavy,Up,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;25;S;C;Idle;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.train(Worker,Right,25)} u.idle() u.harvest(2)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;3;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Right;3;S;C;Train;Light;Down;6;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.train(Light,Up,3) u.build(Barracks,EnemyDir,20) if(u.is(Heavy)) then {u.attack(Weakest)} else { u.harvest(3) u.train(Heavy,Right,3) u.train(Light,Down,6)} u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Harvest;10;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)} u.moveToUnit(Ally,Strongest) for(Unit u){if(OpponentHasNumberOfUnits(Light,6)) then {u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,Down,5) u.harvest(10) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Closest)} else { u.attack(Weakest)}}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;Train;Light;Up;20	for(Unit u){u.idle()} for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,Up,15) u.train(Worker,Up,4) u.harvest(4) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.train(Light,Up,20)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Right;6;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Up;100;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;3	for(Unit u){u.build(Barracks,Up,25) u.harvest(10) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Right,6)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Up,100)} u.idle() if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.idle() u.train(Worker,Left,3)}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;9;S;C;Train;Light;Right;10;S;C;Build;Barracks;Down;4;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Up,3)} if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,9)} u.train(Light,Right,10) u.build(Barracks,Down,4) u.attack(Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Light;Right;10;S;C;Build;Barracks;Down;4;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(4)} u.train(Worker,Down,9) for(Unit u){u.train(Heavy,Up,3)} u.train(Light,Right,10) u.build(Barracks,Down,4) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;1;S;C;Train;Worker;Down;2;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;Right;50;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;For_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;EnemyDir;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,1) u.train(Worker,Down,2) u.harvest(4) for(Unit u){u.idle()}} u.harvest(6) u.train(Ranged,Up,3) if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,Right,50)} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) if(HasLessNumberOfUnits(Worker,4)) then {for(Unit u){u.moveAway()}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Right;3;S;C;Train;Light;Down;6;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,20) if(u.is(Heavy)) then {u.attack(Weakest)} else { u.harvest(3) u.train(Heavy,Right,3) u.train(Light,Down,6)} u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Light;Down;6;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,20) if(u.is(Heavy)) then {u.attack(Weakest)} else { u.harvest(3) u.train(Heavy,EnemyDir,3) u.moveToUnit(Ally,Weakest) u.idle() u.attack(MostHealthy) u.train(Light,Down,6)} for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Down;6;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Ally,Weakest) u.train(Light,Down,6) for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;EnemyDir;50;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Idle;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(4) u.train(Worker,EnemyDir,50) if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy) u.idle()} else { e} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Down;2;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;8	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.train(Light,Down,2) for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} for(Unit u){if(HasNumberOfUnits(Light,50)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.attack(Strongest) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Left,15) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Harvest;8;S;C;Train;Light;Down;6;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(8) u.train(Light,Down,6) u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;4;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,2) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,3)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(6)} for(Unit u){u.attack(MostHealthy)} u.train(Light,EnemyDir,4) if(u.isBuilder()) then {if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;EnemyDir;15;S;For_S;S;C;Harvest;2	for(Unit u){if(u.canAttack()) then {u.moveAway() for(Unit u){u.idle()} u.attack(Farthest)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Worker,EnemyDir,15)}}} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;EnemyDir;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(5)} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,7) u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;100;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;C;Train;Worker;EnemyDir;3	for(Unit u){for(Unit u){u.train(Light,Left,100)} u.harvest(2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest) for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Worker,EnemyDir,3)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;S_S;S;C;Train;Heavy;Down;1;S;C;Harvest;6;S;C;Build;Barracks;Right;9;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;9;S;C;Train;Light;Right;10;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway	for(Unit u){for(Unit u){u.harvest(4)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()}} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Heavy,Down,1) u.harvest(6)}} u.build(Barracks,Right,9) if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,9)} u.train(Light,Right,10) u.moveToUnit(Enemy,Weakest) u.moveAway()}
S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Right,10) u.attack(Closest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(7)}} u.train(Worker,EnemyDir,15)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;Attack;LessHealthy;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Down;9	for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.attack(LessHealthy)} u.idle() u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canAttack()) then {u.moveAway()}} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Down,9)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;C;Harvest;5;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Worker,Right,3) u.build(Barracks,EnemyDir,6) u.train(Heavy,EnemyDir,3) u.harvest(5) u.idle() u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;C;Train;Ranged;Left;2;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;C;Train;Worker;Up;15;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.harvest(5) u.train(Ranged,Left,2) u.build(Barracks,Left,15) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) u.train(Worker,Up,15)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Build;Barracks;Up;10;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Up;15	for(Unit u){u.train(Worker,Left,8) for(Unit u){u.build(Barracks,Up,10)} u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Up,15)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Build;Barracks;Up;10;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Left,8) for(Unit u){u.build(Barracks,Up,10)} u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,EnemyDir,15)} u.harvest(8) u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;For_S;S;For_S;S;C;Train;Heavy;Left;5;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Harvest;9;S;Empty;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;Empty;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(6) u.train(Ranged,Up,3) for(Unit u){for(Unit u){u.train(Heavy,Left,5)}} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.harvest(9)} else { e} if(HaveQtdUnitsAttacking(3)) then {e} else { u.train(Worker,EnemyDir,9)} u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.harvest(10) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;10;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;Empty;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;For_S;S;C;Attack;MostHealthy;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Ranged,Left,10) for(Unit u){u.train(Heavy,EnemyDir,7)}} u.harvest(5) if(HaveQtdUnitsAttacking(3)) then {e} else { u.train(Worker,EnemyDir,9)} for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,4)) then {for(Unit u){u.attack(MostHealthy)}} u.build(Barracks,Down,6) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;C;Train;Ranged;Up;9;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Worker,Left,20) u.build(Barracks,EnemyDir,10) for(Unit u){u.train(Ranged,Up,9)} u.idle() u.attack(Strongest) for(Unit u){u.harvest(3)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveAway;S;C;Train;Light;Up;15;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.is(Light)) then {u.moveAway()} else { u.train(Light,Up,15)} u.build(Barracks,Down,20) u.harvest(50) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;10;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;Empty;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Ranged,Left,10) for(Unit u){u.train(Heavy,EnemyDir,7)}} u.harvest(6) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(3)) then {e} else { u.train(Worker,EnemyDir,9) if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}} u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;Up;3;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;Empty;S;C;Train;Worker;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;For_S;S;C;Attack;Weakest;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Left,7)}} u.harvest(6) u.train(Ranged,Up,3) u.train(Ranged,EnemyDir,6) for(Unit u){u.idle()} if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { e} for(Unit u){u.train(Heavy,Up,3)} if(HaveQtdUnitsAttacking(3)) then {e} else { u.train(Worker,EnemyDir,9)} if(HasLessNumberOfUnits(Worker,4)) then {for(Unit u){u.attack(Weakest)}} u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;8	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;8	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.train(Worker,EnemyDir,9) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;3;S;C;Train;Ranged;EnemyDir;6;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;EnemyDir;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.train(Ranged,Up,3) u.train(Ranged,EnemyDir,6) u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,7) u.attack(Strongest)}
S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Attack;Closest;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;2;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;2;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;S_S;S;C;Train;Light;Right;5;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.harvest(1) u.idle()} else { if(u.is(Light)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway()} u.attack(LessHealthy)} for(Unit u){for(Unit u){u.attack(Closest)}}} u.build(Barracks,EnemyDir,2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(2)} u.attack(MostHealthy) u.moveToUnit(Ally,Farthest) u.train(Worker,Up,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest)} else { e} u.train(Light,Right,5) u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;4;S;Empty;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Heavy,EnemyDir,20)}} u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Worker,4)) then {e} else { for(Unit u){for(Unit u){u.train(Worker,EnemyDir,50) u.idle()}}} for(Unit u){u.idle() u.harvest(1)}}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;8;S;For_S;S;S_S;S;C;Train;Ranged;Right;100;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Harvest;8	for(Unit u){u.harvest(5) u.idle() u.moveAway() if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,8)} for(Unit u){u.train(Ranged,Right,100) u.train(Worker,EnemyDir,3) u.harvest(8)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(6) u.train(Ranged,Up,3) u.train(Ranged,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { e} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.harvest(10) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;15;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} for(Unit u){if(HasNumberOfUnits(Light,50)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.train(Ranged,Up,3) u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Left,15) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;8	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(50)}} for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Up;1;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(5) u.train(Worker,EnemyDir,9) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Ranged,Up,1) u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Right;1;S;C;Train;Light;EnemyDir;9;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Right;4;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Right;2	for(Unit u){u.harvest(3) u.build(Barracks,Left,5) u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Right,1)} u.train(Light,EnemyDir,9) u.train(Worker,Down,6) if(u.isBuilder()) then {e} else { u.attack(LessHealthy) u.train(Ranged,Right,4)} for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Right,2)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Right;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;6;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,EnemyDir,20) if(u.is(Heavy)) then {u.attack(Weakest)} else { u.harvest(3) u.train(Heavy,Right,3) u.moveToUnit(Enemy,Strongest) u.train(Light,Down,6)} u.attack(Strongest) for(Unit u){u.train(Worker,Up,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;C;Train;Light;Up;8;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(5) for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) if(HaveQtdUnitsAttacking(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Light,Up,8) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Light;Left;100;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Down;50	for(Unit u){u.harvest(8) u.train(Light,Left,100) u.attack(Closest) for(Unit u){u.build(Barracks,Down,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Train;Light;Up;2;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(5) u.train(Worker,EnemyDir,9) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Light,Up,2) u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Train;Light;Up;2;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(5) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,EnemyDir,9) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Light,Up,2) u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Worker;Right;4;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Strongest) u.train(Ranged,EnemyDir,9) for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Up,4)} u.train(Worker,Right,4) u.train(Worker,Left,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;1;S;C;Train;Worker;Down;2;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;Train;Light;Up;8;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,1) u.train(Worker,Down,2) u.harvest(4) for(Unit u){u.idle()}} u.harvest(6) u.train(Ranged,Up,3) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { e} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,7) u.train(Light,Up,8) u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;4;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Train;Worker;Up;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){u.attack(Farthest) for(Unit u){u.build(Barracks,Left,4) u.harvest(4)} if(u.is(Worker)) then {e} else { u.train(Worker,Up,5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.train(Light,EnemyDir,8)} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Right;6;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;Left;4	for(Unit u){u.harvest(4) u.train(Worker,Right,6) u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Heavy,Left,4)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Right;6;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Left;4;S;C;Train;Ranged;Down;4	for(Unit u){u.harvest(4) u.train(Worker,Right,6) u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Heavy,Left,4) u.train(Ranged,Down,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Right;6;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Left;4;S;C;Train;Ranged;Down;4;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(4) u.train(Worker,Right,6) u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Heavy,Left,4) u.train(Ranged,Down,4)} for(Unit u){u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Harvest;4;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Up,25) u.harvest(4) u.train(Worker,Right,6) for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;Right;6;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;20;S;For_S;S;S_S;S;C;Train;Ranged;Right;4;S;C;Idle	for(Unit u){u.train(Heavy,Up,25) u.train(Worker,Right,6) u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(20)} for(Unit u){u.train(Ranged,Right,4) u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;20;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;3;S;C;Harvest;3;S;For_S;S;S_S;S;C;Build;Barracks;Right;100;S;C;Train;Ranged;EnemyDir;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.attack(Closest) for(Unit u){u.train(Worker,EnemyDir,20)} u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,3)} u.harvest(3)} for(Unit u){u.build(Barracks,Right,100) u.train(Ranged,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Harvest;15;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Left;7;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Right;4	for(Unit u){u.idle()} for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.harvest(15)} for(Unit u){if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveAway()}}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.train(Ranged,EnemyDir,15)} u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)} u.attack(Farthest)}} u.harvest(2) u.train(Worker,Left,7) u.harvest(3)} for(Unit u){u.build(Barracks,Right,4)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Left;7;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Right;4	for(Unit u){u.idle()} for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(15)} u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,15)} u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)}}} u.harvest(2) u.train(Worker,Left,7) u.harvest(3)} for(Unit u){u.build(Barracks,Right,4)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Down;2;S;For_S;S;S_S;S;C;Train;Worker;Left;8;S;S_S;S;S_S;S;C;Build;Base;EnemyDir;6;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Harvest;6;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Harvest;8	for(Unit u){for(Unit u){u.train(Heavy,Right,6)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,2) for(Unit u){u.train(Worker,Left,8) u.build(Base,EnemyDir,6) if(u.canHarvest()) then {u.harvest(6) u.moveAway()} for(Unit u){u.idle()}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveAway()} for(Unit u){u.build(Barracks,Left,5)} if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.harvest(8)}}}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;25;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;C;Attack;Strongest	for(Unit u){u.train(Ranged,Left,25) u.idle() u.harvest(3) for(Unit u){u.build(Barracks,Up,7)} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Barracks;Up;7;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Heavy;Right;4	for(Unit u){u.harvest(1) for(Unit u){u.build(Barracks,Up,7)} u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Heavy,Right,4)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;10;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,4)} for(Unit u){u.harvest(7)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,10) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;7;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Left;20;S;For_S;S;C;Build;Barracks;Up;100	for(Unit u){u.harvest(1) for(Unit u){u.idle()} u.train(Worker,Left,7) u.attack(Farthest) if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,MostHealthy)} else { u.train(Heavy,Left,20)} for(Unit u){u.build(Barracks,Up,100)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;5;S;C;Train;Worker;Up;6	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.idle()}} u.harvest(3) u.build(Barracks,Down,1) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,5) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;20;S;C;Harvest;4;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.train(Ranged,Up,20) u.harvest(4) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.harvest(4) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.train(Ranged,Up,20) for(Unit u){u.train(Worker,EnemyDir,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.train(Ranged,Up,20) for(Unit u){u.train(Worker,EnemyDir,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.train(Ranged,Up,20) for(Unit u){u.train(Worker,EnemyDir,25)}}
S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Train;Ranged;Up;100;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Left;20;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;C;Attack;MostHealthy;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.harvest(8) u.train(Ranged,Up,100) u.moveToUnit(Ally,LessHealthy) if(u.HasUnitInOpponentRange()) then {if(u.canHarvest()) then {for(Unit u){u.train(Worker,Left,20)}}} for(Unit u){u.build(Barracks,Left,5)} u.attack(MostHealthy) for(Unit u){u.idle()}}}
S;For_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Train;Ranged;Up;100;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;C;Attack;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.harvest(8) u.train(Ranged,Up,100) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Left,5)} u.attack(Farthest) if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Light;Left;6	for(Unit u){for(Unit u){u.harvest(8) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Left,5)} if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}}} u.train(Light,Left,6)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;Down;3;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;Up;3;S;C;Harvest;8;S;C;Train;Worker;Up;9;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.harvest(3) u.train(Ranged,Down,3) u.harvest(4)} for(Unit u){u.idle() u.moveToUnit(Enemy,Closest) u.train(Light,Up,3) u.harvest(8) u.train(Worker,Up,9) for(Unit u){u.build(Barracks,EnemyDir,4)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Right,100)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;Empty;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;Empty;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Ranged;EnemyDir;9	for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { e} u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { e} u.idle() u.attack(Strongest) u.train(Ranged,EnemyDir,9)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;Empty;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Ranged;EnemyDir;9	for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Worker,Right,9)} u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { e} u.idle() u.attack(Strongest) u.train(Light,EnemyDir,7) u.train(Ranged,EnemyDir,9)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;Empty;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Ranged;EnemyDir;9	for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Worker,Right,9)} u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { e} u.idle() u.moveToUnit(Enemy,Strongest) u.attack(Strongest) u.train(Light,EnemyDir,7) u.train(Ranged,EnemyDir,9)}
S;S_S;S;For_S;S;For_S;S;C;Train;Light;Left;2;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;Empty;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Ranged;EnemyDir;9	for(Unit u){for(Unit u){u.train(Light,Left,2)}} for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { e} u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { e} u.idle() u.moveToUnit(Enemy,Strongest) u.attack(Strongest) u.train(Light,EnemyDir,7) u.train(Ranged,EnemyDir,9)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Left;2;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;Empty;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Ranged;EnemyDir;9	for(Unit u){for(Unit u){u.train(Light,Left,2)}} for(Unit u){u.harvest(4)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { e} u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { e} u.idle() u.moveToUnit(Enemy,Strongest) u.attack(Strongest) u.train(Light,EnemyDir,7) u.train(Ranged,EnemyDir,9)}
S;S_S;S;For_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,5)} for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.harvest(15) u.idle() u.attack(Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;Train;Heavy;Down;100	for(Unit u){u.build(Barracks,Left,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.moveToUnit(Enemy,LessHealthy)} u.harvest(3) for(Unit u){u.idle()} u.attack(Closest) u.train(Heavy,Down,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Build;Barracks;Right;6;S;For_S;S;C;Harvest;6;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Ally,Weakest) u.build(Barracks,Right,6) for(Unit u){u.harvest(6)} u.harvest(8) u.moveToUnit(Enemy,Weakest) u.train(Light,EnemyDir,7) u.idle() for(Unit u){u.idle()} u.train(Worker,EnemyDir,8) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Down;9	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)}}} u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Down,9)}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Worker;Up;7;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Light,Down,4)} for(Unit u){u.build(Barracks,Right,8)} u.train(Worker,Up,7) u.attack(Closest) if(HasNumberOfUnits(Worker,6)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveAway()}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Worker;Up;4;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Light,Down,4)} for(Unit u){u.build(Barracks,Right,8)} u.train(Worker,Up,4) u.attack(Closest) if(HasNumberOfUnits(Worker,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Worker;Up;4;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Heavy,Up,7) u.idle()} for(Unit u){u.build(Barracks,Right,8)} u.train(Worker,Up,4) u.attack(Closest) if(HasNumberOfUnits(Worker,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Closest;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(8)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.attack(Closest)} else { u.moveAway()} if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Closest;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Up;2;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(8)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.moveAway() if(u.isBuilder()) then {u.attack(Closest)} else { e} if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest) u.train(Ranged,Up,2)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Down;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Closest;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;C;Train;Worker;Down;5;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Up;2;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.moveAway() if(u.isBuilder()) then {u.attack(Closest)} else { e} if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.canAttack()) then {u.moveAway()}}} u.train(Worker,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest) u.train(Ranged,Up,2)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Down;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;5;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;Up;2;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Weakest)}}}} u.train(Worker,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Up,2)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Down;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;5;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Up;2;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Weakest)}}}} u.train(Worker,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest) u.train(Ranged,Up,2)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;Empty;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Down;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;2;S;Empty;S;C;Train;Ranged;Up;1;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.train(Heavy,Right,10) for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.is(Base)) then {e} else { u.harvest(7)}}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {e} else { for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) if(HasNumberOfUnits(Heavy,2)) then {e} else { u.train(Ranged,Up,1)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Weakest)}}}} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;Empty;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;5;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.train(Heavy,Right,10) for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.is(Base)) then {e} else { u.harvest(7)}}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {e} else { for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Weakest)}}}} u.train(Worker,Down,5) u.moveAway() u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;Empty;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Up;1;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;1;S;C;Train;Worker;Left;5;S;C;Train;Worker;Down;5;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.train(Heavy,Right,10) for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.is(Base)) then {e} else { u.harvest(7)}}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {e} else { for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.moveAway() u.train(Ranged,Up,1) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,EnemyDir,1) u.train(Worker,Left,5)}}}} u.train(Worker,Down,5) u.moveAway() u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;EnemyDir;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;1;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Base,EnemyDir,6) for(Unit u){u.idle()} if(u.canHarvest()) then {e} else { for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.train(Light,Right,25) if(u.isBuilder()) then {e} else { u.moveAway()} u.attack(MostHealthy) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,EnemyDir,1) u.train(Worker,Left,5)}}}} u.moveAway() u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;2;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;5;S;C;Train;Worker;Down;5;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Down,2) for(Unit u){u.idle()} if(u.canHarvest()) then {e} else { for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.train(Light,Right,25) if(u.isBuilder()) then {e} else { u.moveAway()} u.attack(MostHealthy) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Left,5)}}}} u.train(Worker,Down,5) u.moveAway() u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;25;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Down,2) if(u.canHarvest()) then {e} else { u.attack(Weakest) for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.train(Light,Right,25) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Left,5)}}}} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Down;2;S;C;Harvest;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;25;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Down,2) if(u.canHarvest()) then {e} else { u.attack(Weakest) for(Unit u){for(Unit u){u.harvest(1)}}} u.build(Barracks,Down,2) u.harvest(2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Weakest) u.train(Light,Right,25) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()}}}} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Build;Barracks;Right;2;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Train;Light;Right;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.canHarvest()) then {e} else { u.attack(Weakest) for(Unit u){u.idle() u.harvest(3)}} u.build(Barracks,Right,2) u.harvest(8)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Right,3)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.moveToUnit(Enemy,Weakest) u.train(Light,Right,25) if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)} else { e} u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(1) u.build(Barracks,Down,6) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveAway() if(u.canHarvest()) then {for(Unit u){u.train(Light,Right,5)}} else { for(Unit u){u.idle()}} u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.attack(Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;20;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;25;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) u.build(Barracks,Down,2) u.harvest(20) u.attack(Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){if(HasLessNumberOfUnits(Ranged,25)) then {e} else { u.moveToUnit(Enemy,LessHealthy)} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)}} if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Down,5) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Base;Down;3;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Farthest;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Train;Worker;Down;5;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.build(Base,Down,3)} u.idle() u.train(Heavy,Right,10) u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Farthest)} else { u.moveAway()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.train(Worker,Down,5) if(u.is(Worker)) then {u.attack(Strongest)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Worker,EnemyDir,100)} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Up;3;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;15;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Base,Up,3) for(Unit u){u.idle()} u.attack(Weakest) u.train(Worker,Down,15) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;6;S;C;MoveAway;S;For_S;S;S_S;S;C;Build;Base;Down;100;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Down;2;S;C;Train;Ranged;EnemyDir;9;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy	for(Unit u){u.harvest(4) u.train(Worker,EnemyDir,6) u.moveAway() for(Unit u){u.build(Base,Down,100) u.idle()} if(u.canHarvest()) then {u.build(Barracks,Down,2)} u.train(Ranged,EnemyDir,9) if(u.canAttack()) then {u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;6;S;C;MoveAway;S;For_S;S;S_S;S;C;Build;Base;Down;100;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Down;2;S;C;Train;Ranged;EnemyDir;9;S;C;Harvest;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Attack;Farthest	for(Unit u){u.harvest(4) u.train(Worker,EnemyDir,6) u.moveAway() for(Unit u){u.build(Base,Down,100) u.idle()} if(u.canHarvest()) then {u.build(Barracks,Down,2)} u.train(Ranged,EnemyDir,9) u.harvest(9) if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.attack(Farthest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;6;S;C;MoveAway;S;For_S;S;S_S;S;C;Build;Base;Down;100;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Down;2;S;C;Train;Ranged;Down;9;S;C;Harvest;9;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;4;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Attack;Farthest	for(Unit u){u.harvest(4) u.train(Worker,EnemyDir,6) u.moveAway() for(Unit u){u.build(Base,Down,100) for(Unit u){if(u.isBuilder()) then {u.harvest(2)}} u.idle()} if(u.canHarvest()) then {u.build(Barracks,Down,2)} u.train(Ranged,Down,9) u.harvest(9) if(HasLessNumberOfUnits(Barracks,4)) then {e} else { u.moveToUnit(Ally,Strongest)} if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.attack(Farthest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Build;Base;Down;100;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Down;2;S;C;Train;Ranged;EnemyDir;9;S;C;Harvest;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Attack;Farthest	for(Unit u){u.harvest(4) u.train(Worker,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Base,Down,100) u.idle()} if(u.canHarvest()) then {u.build(Barracks,Down,2)} u.train(Ranged,EnemyDir,9) u.harvest(9) if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.attack(Farthest)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Left,8) u.harvest(4) u.build(Barracks,EnemyDir,10) u.harvest(6) u.train(Light,EnemyDir,4) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;7;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Worker;EnemyDir;15;S;Empty;S;C;Train;Ranged;Left;25	for(Unit u){u.train(Worker,Left,7) u.harvest(3) u.build(Barracks,EnemyDir,10) u.train(Heavy,Right,7) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Worker,EnemyDir,15)} else { e} u.train(Ranged,Left,25)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Train;Heavy;Right;7;S;C;Attack;Closest;S;C;Train;Ranged;Left;25	for(Unit u){u.train(Worker,Left,6) u.harvest(3) u.build(Barracks,EnemyDir,10) u.train(Heavy,Right,7) u.attack(Closest) u.train(Ranged,Left,25)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Worker;EnemyDir;15;S;Empty;S;C;Train;Ranged;Left;25	for(Unit u){u.train(Worker,Left,6) u.harvest(3) u.build(Barracks,EnemyDir,10) u.train(Heavy,Right,7) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Worker,EnemyDir,15)} else { e} u.train(Ranged,Left,25)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Worker;EnemyDir;15;S;Empty	for(Unit u){u.train(Worker,Left,6) u.harvest(3) u.build(Barracks,EnemyDir,10) u.train(Ranged,Right,7) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Worker,EnemyDir,15)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;8;S;C;Build;Barracks;Left;7;S;For_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Light,Right,8) u.build(Barracks,Left,7)} for(Unit u){u.train(Worker,Left,3) for(Unit u){u.harvest(100) u.attack(Closest)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;1;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Up;4;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,1)) then {u.build(Barracks,Right,3)}} for(Unit u){u.harvest(5)} u.train(Heavy,EnemyDir,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.idle()} u.train(Light,Up,4) for(Unit u){u.attack(MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Light;Down;10;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Light,Down,10) u.train(Heavy,Right,10) for(Unit u){if(u.is(Barracks)) then {if(u.HasUnitInOpponentRange()) then {u.train(Ranged,Right,10)}}} u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveAway()} if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} u.attack(Closest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;6;S;C;Train;Heavy;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,25) u.harvest(5) for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,6)} u.train(Heavy,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Light;Down;10;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Light;Down;15;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Light,Down,10) u.train(Heavy,Right,10) for(Unit u){if(u.is(Barracks)) then {if(u.HasUnitInOpponentRange()) then {u.train(Ranged,Right,10)}}} u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveAway()} if(HasNumberOfWorkersHarvesting(100)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.train(Light,Down,15) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Light;Down;10;S;C;Train;Heavy;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Light;Down;15;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Light,Down,10) u.train(Heavy,Right,10) u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveToUnit(Ally,Closest)} u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.train(Light,Down,15) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Light;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Light;Down;15;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Light,Down,10) u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,MostHealthy) u.moveAway() if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveToUnit(Ally,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.train(Light,Down,15) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;Right;10;S;S_S;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Light;Down;15;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) for(Unit u){if(u.is(Barracks)) then {if(u.HasUnitInOpponentRange()) then {u.train(Ranged,Right,10)}}} u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveToUnit(Ally,Closest)} u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.train(Light,Down,15) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Build;Barracks;Down;2;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(4) u.idle()} u.train(Heavy,Right,10) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Closest)} else { e} u.build(Barracks,Down,2) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {u.harvest(25) u.attack(Strongest)} else { u.moveToUnit(Ally,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Strongest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} else { if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;C;Harvest;5;S;C;Build;Barracks;Up;7;S;For_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,EnemyDir,20)} u.harvest(5) u.build(Barracks,Up,7)} for(Unit u){u.train(Worker,Left,6) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;C;Attack;MostHealthy;S;C;Train;Light;Right;1;S;C;Train;Light;EnemyDir;9;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;Build;Barracks;Right;2	for(Unit u){u.harvest(3) u.build(Barracks,Left,5) u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,6) u.attack(MostHealthy) u.train(Light,Right,1)} u.train(Light,EnemyDir,9) u.train(Worker,Down,6) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.build(Barracks,Right,2)}}}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;C;Attack;MostHealthy;S;C;Train;Light;Right;1;S;C;Train;Light;EnemyDir;9;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;Build;Barracks;Right;2	for(Unit u){u.harvest(3) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,6) u.attack(MostHealthy) u.train(Light,Right,1)} u.train(Light,EnemyDir,9) u.train(Worker,Down,6) if(u.isBuilder()) then {e} else { u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.build(Barracks,Right,2)}}}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Left;5;S;C;Train;Light;Right;1;S;C;Train;Light;EnemyDir;9;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;Build;Barracks;Right;2	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} u.harvest(6) u.attack(Weakest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,6) u.train(Worker,Left,5) u.train(Light,Right,1)} u.train(Light,EnemyDir,9) u.train(Worker,Down,6) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.harvest(3) u.idle()} if(u.isBuilder()) then {for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.build(Barracks,Right,2)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Harvest;10;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)} u.train(Worker,Up,2) u.moveToUnit(Ally,Weakest) u.train(Light,Right,7) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,Down,5) u.harvest(10) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;10;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(25) if(u.HasUnitInOpponentRange()) then {u.idle()} u.attack(MostHealthy) u.train(Heavy,EnemyDir,4) u.train(Light,Right,4) if(HasNumberOfWorkersHarvesting(1)) then {if(HasLessNumberOfUnits(Worker,10)) then {e} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.build(Barracks,Left,7)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;Empty;S;C;Train;Light;Right;2;S;For_S;S;C;Build;Barracks;EnemyDir;25	for(Unit u){if(u.canHarvest()) then {u.harvest(5)} u.train(Heavy,Down,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){for(Unit u){u.attack(Closest)}} if(u.HasUnitWithinDistanceFromOpponent(9)) then {e} else { u.train(Light,Right,2)}}} for(Unit u){u.build(Barracks,EnemyDir,25)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;25	for(Unit u){if(u.canHarvest()) then {u.harvest(5)} u.train(Heavy,Down,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){for(Unit u){u.attack(Closest)}} if(u.HasUnitWithinDistanceFromOpponent(9)) then {e} else { u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.build(Barracks,EnemyDir,25)}}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;8	for(Unit u){for(Unit u){for(Unit u){u.attack(LessHealthy)}} u.train(Worker,Right,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;Empty;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;1;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,8) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Weakest) for(Unit u){u.idle() u.harvest(6)}} else { e} u.build(Barracks,EnemyDir,100) u.harvest(1) u.harvest(2) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Left;7;S;C;Train;Light;Right;3	for(Unit u){u.build(Barracks,EnemyDir,7) u.idle() u.harvest(8) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Left,7) u.train(Light,Right,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Down;100;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Idle;S;C;MoveAway	for(Unit u){u.build(Barracks,Left,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.harvest(3) u.train(Heavy,Down,100) if(u.is(Heavy)) then {for(Unit u){u.idle()}} u.moveAway()}
S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Up;2	for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Right,9) u.harvest(20) u.attack(MostHealthy) u.train(Light,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Idle;S;C;Train;Ranged;Up;20;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Up,5) u.harvest(6) for(Unit u){u.idle()} u.train(Ranged,Up,20) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;20;S;C;Harvest;4;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,5) for(Unit u){u.idle()} u.train(Ranged,Up,20) u.harvest(4) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.harvest(4) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;5;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.harvest(9) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,5) for(Unit u){u.idle()} u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.train(Ranged,EnemyDir,20) u.attack(Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;1;S;C;Train;Worker;Down;2;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Right;1;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;EnemyDir;7	for(Unit u){for(Unit u){u.train(Light,Up,1) u.train(Worker,Down,2) u.harvest(4) for(Unit u){u.idle()}} u.attack(LessHealthy) for(Unit u){u.build(Barracks,Right,1)} u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,7)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;C;Train;Light;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,5) for(Unit u){u.train(Light,Down,3)} u.train(Light,EnemyDir,4)} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(2) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;5;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Up;2;S;C;Train;Light;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,5) for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Up,2)}}} u.train(Light,EnemyDir,4)} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(2) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;5;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,5) for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Left,2)}}}} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(2) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;4;S;C;Train;Ranged;Down;1	for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Heavy,Right,4) for(Unit u){u.build(Barracks,Down,1) u.harvest(4)} u.train(Ranged,Down,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;1;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Closest) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,4) for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(4)} u.train(Worker,Left,2) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Build;Barracks;Left;5;S;For_S;S;C;Idle;S;C;Harvest;9;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right;5;S;C;Train;Worker;EnemyDir;3	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,Left,5) for(Unit u){u.idle()}} u.harvest(9)} u.attack(Strongest) for(Unit u){u.train(Heavy,Right,5)} u.train(Worker,EnemyDir,3)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Build;Barracks;Left;5;S;For_S;S;C;Idle;S;C;Harvest;9;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Right;5	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,Left,5) for(Unit u){u.idle()}} u.harvest(9)} u.attack(Strongest) for(Unit u){u.train(Heavy,Right,5)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;C;Train;Light;Left;10;S;C;Harvest;4;S;C;Idle;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Left,3) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { for(Unit u){u.train(Ranged,Down,1) u.train(Light,Left,10)}}} u.harvest(4) u.idle()} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;For_S;S;C;Train;Light;Down;10;S;C;Harvest;8;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Right,3) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { for(Unit u){u.train(Light,Down,10)}}} u.harvest(8)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Up,9) u.idle()} u.build(Barracks,EnemyDir,25) u.harvest(1) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Ranged;Up;3;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;Right;50;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;For_S;S;C;MoveAway;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Down,5) u.harvest(6) u.train(Ranged,Up,3) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,Right,50) if(HasLessNumberOfUnits(Worker,4)) then {for(Unit u){u.moveAway()}} u.build(Barracks,Down,4) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;5;S;C;Train;Ranged;Down;8;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,Up,5) u.train(Ranged,Down,8)} for(Unit u){u.build(Barracks,Down,100) for(Unit u){u.idle()} u.harvest(50) u.train(Worker,EnemyDir,2) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Train;Heavy;EnemyDir;3;S;C;Harvest;100;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;8;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,2) u.train(Heavy,EnemyDir,3) u.harvest(100) u.idle() u.attack(Strongest) u.moveToUnit(Ally,Farthest) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.idle() u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Down,8)} if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Ranged;Down;8;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,EnemyDir,5) u.train(Ranged,Down,8)} for(Unit u){u.build(Barracks,Down,100) for(Unit u){u.idle()} u.harvest(50) u.train(Worker,EnemyDir,2) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Harvest;50;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,EnemyDir,5) u.idle()} for(Unit u){u.build(Barracks,Down,100) u.harvest(50) u.train(Worker,EnemyDir,2) u.attack(Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Light;Down;15;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Heavy,EnemyDir,15) u.build(Barracks,EnemyDir,50) u.train(Worker,Left,2) u.harvest(4) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest) u.train(Light,Down,15) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Up;1;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.harvest(5) for(Unit u){u.train(Heavy,Up,3)} u.train(Worker,EnemyDir,9) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Ranged,Up,1) u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){u.train(Heavy,Up,3)} u.idle() u.train(Worker,EnemyDir,9) u.build(Barracks,Up,4) u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;3;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;4;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Build;Barracks;Up;4;S;For_S;S;C;Build;Base;Down;7;S;S_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Right,5) for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){u.train(Heavy,Up,3)} u.idle() u.train(Worker,EnemyDir,9) if(HasLessNumberOfUnits(Worker,4)) then {for(Unit u){u.idle() u.attack(Weakest) u.moveToUnit(Ally,Closest)}} u.build(Barracks,Up,4) for(Unit u){u.build(Base,Down,7)} u.train(Light,Up,8) u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;C;Build;Barracks;Up;7;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy	for(Unit u){u.train(Ranged,Right,10) u.build(Barracks,Up,7) u.train(Worker,Left,9)} for(Unit u){u.idle() u.harvest(3)} for(Unit u){u.moveToUnit(Ally,Closest) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;C;Build;Barracks;Up;7;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy	for(Unit u){u.train(Ranged,Right,10) u.build(Barracks,Up,7) u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Ally,Closest) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;10;S;C;Build;Barracks;Up;7;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Ranged,Up,10) u.build(Barracks,Up,7) u.train(Worker,Left,9)} for(Unit u){u.idle() u.harvest(3)} for(Unit u){u.attack(Farthest) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;15;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Right;8	for(Unit u){if(u.is(Base)) then {for(Unit u){u.harvest(3)}} u.idle() u.train(Ranged,Down,15) u.build(Barracks,Right,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) for(Unit u){u.train(Worker,Right,8)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;3;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Train;Light;Up;4	for(Unit u){u.build(Barracks,Right,1) u.harvest(3) u.attack(Weakest) for(Unit u){if(OpponentHasNumberOfUnits(Worker,3)) then {u.train(Light,Up,4)}}}
S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;EnemyDir;15;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Build;Barracks;Right;10;S;If_B_then_S;B;HasNumberOfUnits;Base;8;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(9)} for(Unit u){u.idle()} for(Unit u){if(u.is(Worker)) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Light,EnemyDir,15) u.moveToUnit(Ally,Weakest) u.build(Barracks,Right,10) if(HasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Left,9) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.train(Worker,Right,8)} for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;8;S;C;Train;Ranged;EnemyDir;10;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest	for(Unit u){u.train(Worker,EnemyDir,3) u.build(Barracks,Down,1) for(Unit u){u.train(Light,Left,8) u.train(Ranged,EnemyDir,10)} u.harvest(7) u.moveToUnit(Ally,MostHealthy) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;C;Train;Heavy;Right;10;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,3) u.build(Barracks,Left,1) for(Unit u){u.train(Heavy,Right,10)} u.harvest(7) u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Harvest;2;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;C;Train;Heavy;Right;10;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;Empty	for(Unit u){u.train(Worker,EnemyDir,3) u.harvest(2) u.build(Barracks,Left,15) for(Unit u){u.train(Heavy,Right,10)} u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,7)}} else { e}}
S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Up,6) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Build;Barracks;Up;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;5	for(Unit u){u.train(Heavy,Down,9) u.harvest(2) if(u.canHarvest()) then {u.build(Barracks,Up,1) u.attack(Weakest)} for(Unit u){u.train(Worker,Right,5)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;6;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Up;3;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(10) for(Unit u){u.train(Ranged,Down,6) u.build(Barracks,EnemyDir,50)} if(u.canAttack()) then {u.attack(LessHealthy)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Up,3)}}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Build;Base;Left;4;S;S_S;S;C;Train;Light;Up;9;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitInOpponentRange()) then {u.attack(Closest)} u.harvest(1) u.harvest(3) u.attack(Weakest) for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.build(Base,Left,4)} u.train(Light,Up,9) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,EnemyDir,2)} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,5)}}} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;6;S;C;Build;Barracks;Left;2;S;S_S;S;C;Train;Ranged;Up;15;S;C;Train;Worker;Up;7;S;C;MoveAway;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Light,Down,15) u.idle() u.harvest(6) u.build(Barracks,Left,2) u.train(Ranged,Up,15) u.train(Worker,Up,7) u.moveAway()} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;Harvest;15;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Down,20) u.train(Ranged,EnemyDir,6) u.harvest(15) u.train(Worker,Left,15)} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Worker,Right,8) u.harvest(1) u.idle() u.attack(LessHealthy) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;C;Train;Ranged;Up;15;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;5;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.train(Worker,Right,50) u.train(Ranged,Up,15) u.build(Barracks,Up,9) u.harvest(5) u.attack(Closest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Down;5;S;S_S;S;C;Harvest;100;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Right;6	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Heavy,Left,6)}} u.build(Barracks,Down,5)} u.harvest(100) u.idle() u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,6)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Build;Barracks;Down;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;5;S;C;Idle;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Light,Right,10) if(u.canHarvest()) then {for(Unit u){u.train(Heavy,EnemyDir,6)}} u.build(Barracks,Down,5) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(5)} else { u.idle()} u.harvest(25) u.moveToUnit(Enemy,Strongest)} u.idle() u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Up;4;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Down;7;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,7) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()} u.harvest(4) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Down,7) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;Train;Light;Up;20;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;C;Harvest;20;S;C;Train;Worker;EnemyDir;6	for(Unit u){if(u.canAttack()) then {u.harvest(1) u.harvest(5) for(Unit u){u.train(Ranged,Left,1)} u.build(Barracks,Up,100) for(Unit u){u.train(Light,Up,20)} u.moveToUnit(Enemy,Strongest) u.idle() for(Unit u){u.harvest(3) for(Unit u){u.idle()}} u.harvest(20)} else { u.train(Worker,EnemyDir,6)}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;Train;Light;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6	for(Unit u){if(u.canAttack()) then {u.harvest(1) u.harvest(5) for(Unit u){u.train(Heavy,Right,1)} u.build(Barracks,Up,100) for(Unit u){u.train(Light,Up,20)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest) if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.idle()}} else { u.train(Worker,Up,6)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Down;5;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;3	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Heavy,Left,6)}} u.build(Barracks,Down,5)} u.harvest(25) u.attack(Closest) for(Unit u){u.train(Ranged,Left,3)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Down;1;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Right;1	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Heavy,Left,6)}} u.build(Barracks,Down,1)} u.harvest(25) u.attack(Closest) for(Unit u){u.train(Ranged,Right,1)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;7;S;For_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Right,8) u.build(Barracks,Right,8) u.attack(Strongest) for(Unit u){u.harvest(7)} for(Unit u){u.train(Heavy,Down,10)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;20;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.attack(Weakest) u.train(Worker,Left,20) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,5)}}} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;2;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Light;Up;4;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;EnemyDir;20	for(Unit u){u.harvest(4) u.build(Barracks,Left,2) u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Light,Up,4)} else { u.moveToUnit(Ally,MostHealthy) u.train(Heavy,EnemyDir,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;8;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;4;S;For_S;S;C;Train;Ranged;Up;25;S;For_S;S;C;Train;Worker;Up;5	for(Unit u){u.idle() u.build(Barracks,Left,2) u.attack(Strongest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Up,8)} if(u.canHarvest()) then {for(Unit u){u.harvest(4)}} for(Unit u){u.train(Ranged,Up,25)}} for(Unit u){u.train(Worker,Up,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Light;Left;4;S;Empty	for(Unit u){u.harvest(4) u.build(Barracks,Left,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Light,Left,4)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Ranged;Right;9;S;Empty	for(Unit u){u.harvest(4) u.build(Barracks,Left,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Ranged,Right,9)}} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Up;15	for(Unit u){u.harvest(4) u.build(Barracks,Left,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(OpponentHasNumberOfUnits(Barracks,3)) then {u.moveToUnit(Ally,Closest)} else { u.train(Ranged,Up,15)}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Left;10	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Left,10)}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;3;S;For_S;S;C;Train;Heavy;Left;10	for(Unit u){u.harvest(3) u.train(Worker,Right,8) for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.moveToUnit(Enemy,Closest)}} u.build(Barracks,Right,2) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Light,Right,3)} for(Unit u){u.train(Heavy,Left,10)}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;4;S;C;Idle;S;C;Harvest;3;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Right;7;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.train(Light,Right,4)} u.idle() u.harvest(3)} for(Unit u){u.train(Light,Up,50)} for(Unit u){u.build(Barracks,EnemyDir,20) u.train(Worker,Right,7)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;5;S;C;Train;Light;Right;50;S;Empty;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;15;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.harvest(4) u.build(Barracks,Down,5)} u.train(Light,Right,50)} else { e} u.idle() u.harvest(4) u.train(Worker,Up,7) u.attack(Strongest) if(OpponentHasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;5;S;Empty;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;15;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Train;Light;Left;50;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.harvest(4) u.build(Barracks,Down,5)}} else { e} u.idle() u.harvest(4) u.train(Worker,Up,7) u.attack(Strongest) if(OpponentHasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Light,Left,50)}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Down;20;S;C;Train;Worker;Down;100	for(Unit u){u.harvest(2) u.build(Barracks,Down,50) u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Strongest)} u.train(Light,Right,4) u.attack(Weakest) u.train(Light,Down,20) u.train(Worker,Down,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Left;2;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Ranged;Right;9;S;For_S;S;C;Idle	for(Unit u){u.harvest(4) u.build(Barracks,Left,2) u.moveAway() if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Ranged,Right,9)}} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Down;5;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Ranged;Right;9;S;For_S;S;C;Idle	for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Ally,Weakest)} u.harvest(4) u.build(Barracks,Left,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Down,5)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Ranged,Right,9)}} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Left;2;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Down;5;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Right;1;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Ally,Weakest)} u.train(Heavy,EnemyDir,100) u.harvest(4) u.build(Barracks,Left,2) u.train(Ranged,Left,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Down,5)}} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Right,1)} else { u.attack(LessHealthy)}}}} else { for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,10)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;Harvest;7;S;C;Train;Light;Left;1;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;2;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) if(HaveQtdUnitsAttacking(8)) then {u.harvest(7)} u.train(Light,Left,1) for(Unit u){u.train(Heavy,Down,10)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} if(HasNumberOfUnits(Worker,2)) then {e} else { u.moveToUnit(Enemy,Strongest)} u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,10)} u.train(Ranged,Up,1) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Train;Ranged;EnemyDir;3;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,10)} u.train(Ranged,Up,1) u.train(Ranged,EnemyDir,3) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;C;Attack;Weakest;S;S_S;S;C;Train;Ranged;Up;1;S;C;Train;Heavy;Down;25	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.attack(Weakest) u.train(Ranged,Up,1) u.train(Heavy,Down,25)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;1;S;For_S;S;C;Train;Light;Up;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;6	for(Unit u){for(Unit u){u.train(Heavy,Left,100)} u.harvest(1)} for(Unit u){u.harvest(2) u.harvest(9) u.moveToUnit(Ally,Strongest) u.attack(Strongest) u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(20)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Strongest)}} else { u.moveToUnit(Enemy,Closest)}} else { e} if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.idle() u.build(Barracks,Up,1)} for(Unit u){u.train(Light,Up,8)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Train;Light;Up;9;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.harvest(3) u.build(Barracks,EnemyDir,6) u.attack(Weakest) for(Unit u){u.train(Worker,EnemyDir,9)} u.train(Light,Up,9) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Ranged,EnemyDir,2)}} u.train(Worker,Down,100) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Up;6;S;C;Train;Ranged;Up;3;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Attack;Closest;S;C;Train;Light;Right;8;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveAway;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Base;Right;20	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.build(Barracks,Up,6) u.train(Ranged,Up,3) u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.attack(Closest)} u.train(Light,Right,8) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(Closest) for(Unit u){u.build(Base,Right,20)}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;Train;Light;Up;20;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6	for(Unit u){if(u.canAttack()) then {u.harvest(1) u.harvest(5) for(Unit u){u.train(Heavy,Right,7) u.train(Ranged,Right,1)} u.build(Barracks,Up,100) for(Unit u){u.train(Light,Up,20)} u.attack(Closest) for(Unit u){u.idle()}} else { u.train(Worker,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {e} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}}}}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {e} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}}}}} else { e} u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Light,EnemyDir,2) for(Unit u){u.train(Heavy,EnemyDir,25)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Left;1;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) u.moveToUnit(Enemy,Weakest) u.train(Light,Left,1) for(Unit u){u.train(Heavy,Down,10)} u.moveAway() u.moveToUnit(Enemy,Strongest) u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Down;9;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1	for(Unit u){u.idle() u.build(Barracks,Left,7) u.harvest(4) u.attack(LessHealthy) u.train(Light,Down,9) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.idle()} u.harvest(1)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;4;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Train;Light;Left;50	for(Unit u){for(Unit u){u.harvest(2)} u.train(Worker,Up,3) u.build(Barracks,EnemyDir,4) u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,Left,50)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Down;8;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;10;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;3;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){for(Unit u){u.harvest(2) for(Unit u){u.train(Heavy,Down,8)}} u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Weakest)} else { for(Unit u){u.harvest(3)}} for(Unit u){u.train(Light,Right,8)} for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.build(Barracks,Left,6) for(Unit u){u.moveToUnit(Ally,Closest)} u.attack(Closest)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,10) if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Farthest) if(OpponentHasNumberOfUnits(Base,3)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Up;6;S;C;Train;Ranged;Up;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Up;3;S;C;Attack;Weakest;S;C;Train;Light;Right;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.build(Barracks,Up,6) u.train(Ranged,Up,3) u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Heavy,Up,3) u.attack(Weakest) u.train(Light,Right,8) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;For_S;S;C;Attack;Weakest	for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Light,EnemyDir,2) for(Unit u){u.train(Heavy,EnemyDir,25)} u.moveToUnit(Ally,Weakest) u.train(Ranged,Left,100) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Down;8;S;C;Train;Light;Down;15;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;8;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.build(Barracks,Right,1) u.idle() u.attack(Strongest) for(Unit u){u.harvest(5)} u.train(Worker,Down,8) u.train(Light,Down,15) if(OpponentHasNumberOfUnits(Heavy,8)) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Heavy;Up;3;S;S_S;S;C;Build;Barracks;Down;9;S;C;Attack;Weakest;S;C;Train;Worker;Left;10	for(Unit u){u.idle() for(Unit u){u.harvest(4)} u.train(Heavy,Up,3) u.build(Barracks,Down,9) u.attack(Weakest) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Train;Light;Up;9;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,8) u.train(Light,Left,1) u.train(Light,Up,9) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,8)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;C;Harvest;3;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;For_S;S;C;Harvest;5;S;C;Build;Barracks;EnemyDir;50	for(Unit u){u.train(Worker,Left,50) u.harvest(3)} for(Unit u){u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,8) u.idle() for(Unit u){u.harvest(5)}} u.build(Barracks,EnemyDir,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Up;5;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;8;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.build(Barracks,Up,5) u.attack(MostHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Light,Right,8) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {e} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Train;Worker;Right;100;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() for(Unit u){u.idle()} if(u.isBuilder()) then {e} else { u.attack(Weakest)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Right,100) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}}}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} else { e} u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,10)} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;6;S;Empty;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveAway() u.attack(MostHealthy) if(u.isBuilder()) then {e} else { for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,100) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Strongest)}} u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,6)} else { e} u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.harvest(5)}} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;Right;25;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Idle;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;7	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,Right,25)} u.build(Barracks,Down,2) u.idle() u.harvest(9) u.attack(Closest) u.train(Worker,Up,7)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;Right;25;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;7	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,Right,25)} u.build(Barracks,EnemyDir,2) u.idle() u.harvest(9) u.attack(Closest) u.train(Worker,Up,7)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,10)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;5;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;15	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(5) u.train(Heavy,Right,5) u.build(Barracks,EnemyDir,2) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest)} else { u.attack(MostHealthy)}} u.train(Worker,Left,15)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Ranged;Down;50;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;15	for(Unit u){for(Unit u){u.harvest(5) u.build(Barracks,EnemyDir,2) for(Unit u){u.idle()} u.attack(Strongest) for(Unit u){u.train(Ranged,Down,50)} u.moveToUnit(Ally,Closest)} u.train(Worker,Left,15)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Light;Left;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,8) u.build(Barracks,Right,8) u.train(Light,Left,1) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,8)}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;25;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,8) u.build(Barracks,Right,8) u.train(Light,Left,1) u.attack(Weakest) u.train(Worker,Left,25) for(Unit u){u.train(Heavy,Down,8)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Right;1;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Right;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,8) u.harvest(3) u.train(Heavy,Right,1) u.attack(Closest) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} else { u.train(Light,Right,20)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Up,4)} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) if(OpponentHasNumberOfUnits(Worker,3)) then {u.attack(MostHealthy)} else { u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Down,10)} if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Left;100;S;For_S;S;C;Train;Worker;Down;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) if(OpponentHasNumberOfUnits(Worker,3)) then {u.attack(MostHealthy)} else { u.moveToUnit(Ally,Closest)} u.train(Heavy,Left,100) for(Unit u){u.train(Worker,Down,10)} if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Left;100;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,8) u.build(Barracks,Right,2) if(OpponentHasNumberOfUnits(Worker,3)) then {u.attack(MostHealthy)} else { u.moveToUnit(Ally,Closest)} u.train(Heavy,Left,100) for(Unit u){u.idle()} if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,LessHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;6;S;Empty;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Down;5	for(Unit u){u.moveAway() u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,6)} else { e} u.train(Light,EnemyDir,2) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(6)} u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Down,5)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Up;6;S;Empty;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;7	for(Unit u){u.moveAway() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} u.train(Heavy,Up,6)} else { e} for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,7)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;6;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Down;2	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()} u.build(Barracks,Down,2) u.harvest(6) u.idle() u.attack(MostHealthy)} for(Unit u){u.train(Light,Down,2)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;3;S;C;Train;Light;Up;50	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Worker,EnemyDir,6)} u.harvest(4) u.idle() u.moveToUnit(Enemy,Strongest) u.train(Light,Down,3) u.train(Light,Up,50)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Train;Light;Left;1;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Ranged;Up;25;S;For_S;S;C;Train;Heavy;Left;10	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,2) u.train(Light,Left,1) u.idle() u.attack(LessHealthy) u.train(Ranged,Up,25) for(Unit u){u.train(Heavy,Left,10)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;C;Build;Barracks;Up;6;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Right;8;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;C;Train;Worker;Down;10;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.build(Barracks,Up,6) u.moveToUnit(Ally,Strongest) u.attack(Weakest) u.train(Light,Right,8) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Ranged,EnemyDir,4)} u.train(Worker,Down,10) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Down;8;S;C;Train;Ranged;Left;50	for(Unit u){u.build(Barracks,Right,1) u.idle() u.harvest(8) u.attack(Strongest) for(Unit u){u.harvest(5)} u.train(Worker,Down,8) u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;100	for(Unit u){u.build(Barracks,EnemyDir,100) u.train(Worker,EnemyDir,7) for(Unit u){for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.harvest(2)} u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Down,2)}} u.moveToUnit(Ally,MostHealthy) u.harvest(100)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;100	for(Unit u){u.build(Barracks,EnemyDir,100) u.train(Worker,EnemyDir,7) for(Unit u){for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.harvest(2)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Down,2)}} u.moveToUnit(Ally,MostHealthy) u.harvest(100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Left;1;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;6;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;1;S;C;Train;Ranged;Up;2;S;C;Harvest;100;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,1)}} u.harvest(4) u.build(Barracks,Up,6) for(Unit u){if(u.isBuilder()) then {u.harvest(1)}} u.train(Ranged,Up,2) u.harvest(100) u.attack(Weakest) u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Left;2;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Ranged;Right;9;S;Empty	for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)} u.harvest(4) u.build(Barracks,Left,2) u.moveAway() for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)} u.attack(LessHealthy)} u.attack(Closest) for(Unit u){u.train(Worker,Up,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Ranged,Right,9)}} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;LessHealthy;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Base;Left;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;5;S;For_S;S;C;Train;Light;EnemyDir;20;S;C;Train;Worker;Down;7	for(Unit u){for(Unit u){u.idle()} u.harvest(1) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy)} u.attack(LessHealthy) for(Unit u){u.build(Base,Left,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,5)}}} for(Unit u){u.train(Light,EnemyDir,20)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Left;2	for(Unit u){u.harvest(1) for(Unit u){u.idle()} u.train(Light,Left,7) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(MostHealthy)} u.build(Barracks,EnemyDir,25) u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Left,2)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;50;S;C;Idle;S;C;Build;Barracks;Right;6;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){for(Unit u){u.train(Light,Right,50)} u.idle() u.build(Barracks,Right,6)} u.harvest(3) if(u.canHarvest()) then {u.moveAway()} u.attack(Weakest) u.train(Worker,Down,50)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {e} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Closest)}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.canHarvest()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} if(u.isBuilder()) then {for(Unit u){u.idle()}} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Closest)}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Heavy;Down;25;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Left;7;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.canHarvest()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} if(u.isBuilder()) then {for(Unit u){u.idle()}} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Closest)}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) u.build(Barracks,Left,7) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.build(Barracks,Left,15) if(u.canHarvest()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} if(u.isBuilder()) then {for(Unit u){u.idle()}} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Closest)}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway() u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.build(Barracks,Left,15) if(u.canHarvest()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Weakest)}}} if(u.isBuilder()) then {for(Unit u){u.idle()}} else { u.attack(Weakest) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Closest)}} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway() u.moveToUnit(Enemy,Farthest)}} else { e} for(Unit u){u.harvest(2)} u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(3) u.train(Worker,Right,8) u.build(Barracks,Right,8) u.idle() u.train(Light,Left,1) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,8)}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;1;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(3) u.train(Worker,Down,8) u.build(Barracks,Down,8) u.idle() u.train(Light,Left,1) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,8)}}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;S_S;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {for(Unit u){u.idle()}} else { u.idle() u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() if(u.isBuilder()) then {e} else { u.attack(Closest)} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,2) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;10;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;Empty;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;Train;Light;EnemyDir;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.train(Heavy,EnemyDir,10)} else { u.idle()} if(u.isBuilder()) then {for(Unit u){u.idle()}} else { e} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}} u.idle()} u.moveToUnit(Enemy,Farthest)} else { e} u.train(Heavy,Up,25) u.train(Worker,EnemyDir,4) u.train(Light,EnemyDir,3) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Ally,Closest) u.attack(LessHealthy)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle() u.build(Barracks,EnemyDir,3) u.harvest(6) u.attack(Weakest)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Train;Light;Down;1;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;Build;Barracks;Down;15;S;For_S;S;C;Idle;S;C;Harvest;9;S;C;MoveAway;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Heavy,Left,50) for(Unit u){u.train(Light,Down,1)} for(Unit u){u.train(Worker,EnemyDir,3)} u.build(Barracks,Down,15) for(Unit u){u.idle()} u.harvest(9) u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Idle;S;C;Harvest;9;S;C;MoveAway;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,50) for(Unit u){u.train(Worker,EnemyDir,3)} u.build(Barracks,Down,6) for(Unit u){u.idle()} u.harvest(9) u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Train;Light;Down;1;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;Build;Barracks;Down;15;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;C;Harvest;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,50) for(Unit u){u.train(Light,Down,1)} for(Unit u){u.train(Worker,EnemyDir,3)} u.build(Barracks,Down,15) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,7)} u.harvest(9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(100)}} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Train;Light;Down;1;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Down;15;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;C;Harvest;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,50) for(Unit u){u.train(Light,Down,1)} for(Unit u){u.train(Worker,EnemyDir,3)} u.harvest(2) u.build(Barracks,Down,15) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,7)} u.harvest(9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;3;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Train;Light;Left;5	for(Unit u){u.build(Barracks,Right,3) u.harvest(7) u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,6)} u.train(Light,Left,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(20) if(HasNumberOfWorkersHarvesting(20)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.attack(Closest) for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,10) u.train(Heavy,Down,15)} if(u.isBuilder()) then {for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Weakest)}}} if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.harvest(10)}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;C;Build;Barracks;Left;25;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,EnemyDir,10) u.build(Barracks,Left,25) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,EnemyDir,10) u.build(Barracks,Left,25) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;Harvest;3;S;For_S;S;C;Train;Ranged;Down;6;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;5	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,50)} u.harvest(100) for(Unit u){u.build(Barracks,Down,100) u.harvest(3)} for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;10;S;For_S;S;C;Build;Barracks;Right;25	for(Unit u){u.harvest(100) u.attack(LessHealthy) u.train(Light,EnemyDir,10) for(Unit u){u.build(Barracks,Right,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Train;Worker;Down;2;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;10;S;For_S;S;C;Build;Barracks;Right;25	for(Unit u){u.harvest(100) u.train(Worker,Down,2) u.attack(LessHealthy) u.train(Light,EnemyDir,10) for(Unit u){u.build(Barracks,Right,25)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Train;Light;Down;3;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Left,6) u.train(Light,Down,3)} for(Unit u){u.train(Worker,Up,4) for(Unit u){u.harvest(3)} for(Unit u){if(u.canAttack()) then {u.attack(MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Train;Light;Down;100;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;8	for(Unit u){u.build(Barracks,Left,6) u.train(Light,Down,100)} for(Unit u){u.attack(Closest) u.train(Worker,Up,4) for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Train;Heavy;Up;9;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;8	for(Unit u){u.build(Barracks,Right,6) u.train(Heavy,Up,9)} for(Unit u){u.attack(Closest) u.train(Worker,Up,4) for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;8	for(Unit u){u.build(Barracks,Right,6) u.train(Heavy,Right,9)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(LessHealthy)} u.attack(Closest) u.train(Worker,Up,4) for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Up;4;S;For_S;S;C;Harvest;8	for(Unit u){u.build(Barracks,Right,6) u.train(Heavy,Right,9)} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Closest)} else { u.attack(LessHealthy)} u.attack(Closest) u.train(Light,Up,4) for(Unit u){u.harvest(8)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Right,7) for(Unit u){u.harvest(1)} u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.harvest(1)} u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;C;Harvest;2;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;100	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,10)} u.harvest(2) for(Unit u){u.harvest(1)} u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy) u.train(Worker,Left,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Right,7) for(Unit u){u.harvest(1)} u.moveAway() u.train(Ranged,EnemyDir,15) u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;For_S;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Ranged;Down;15;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy	for(Unit u){u.moveAway() for(Unit u){u.idle()} u.train(Ranged,Right,7) for(Unit u){u.harvest(1) u.moveToUnit(Enemy,MostHealthy)} u.train(Ranged,Down,15) u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Right;1;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Right,7) for(Unit u){u.harvest(1)} u.train(Ranged,EnemyDir,15) u.train(Worker,Up,2) u.build(Barracks,Right,1) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Up;3	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20) u.build(Barracks,Right,7) u.harvest(25) u.attack(Weakest) for(Unit u){u.train(Worker,Up,3)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Right;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;C;Train;Heavy;Left;5;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Right,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(7)}} for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Heavy,Left,5) u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;Left;8	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20) u.harvest(25) u.attack(Weakest) for(Unit u){u.train(Worker,Up,3) u.build(Barracks,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Right;7;S;S_S;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20) u.build(Barracks,Right,7) u.harvest(25) u.attack(Weakest)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Light;Up;8;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.build(Barracks,Left,1) u.harvest(4)} for(Unit u){u.train(Light,Up,8)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Left;8	for(Unit u){u.build(Barracks,Up,50) for(Unit u){u.harvest(2) u.idle() u.moveToUnit(Enemy,Strongest)} u.train(Worker,Left,8)}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;6	for(Unit u){if(u.canAttack()) then {u.harvest(1) u.harvest(5) for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle()} u.moveAway() u.moveToUnit(Enemy,Strongest)} else { u.train(Worker,Up,6)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;6;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Worker,Up,6)} for(Unit u){u.train(Light,EnemyDir,4) u.build(Barracks,EnemyDir,50) u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Build;Barracks;Right;15	for(Unit u){u.harvest(4) u.train(Light,Left,15)} for(Unit u){u.attack(Weakest) u.train(Worker,EnemyDir,9) for(Unit u){u.build(Barracks,Right,15)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Light;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;10;S;S_S;S;For_S;S;C;Train;Ranged;Down;9;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveAway;S;Empty;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up;5	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Ally,MostHealthy) if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest)}} for(Unit u){u.harvest(4) u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Up,10)} for(Unit u){u.train(Ranged,Down,9)} if(HaveQtdUnitsAttacking(7)) then {u.moveAway()} else { e} u.attack(LessHealthy) if(HasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Down;25;S;C;Train;Worker;Left;4;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;6;S;C;Train;Ranged;Up;1	for(Unit u){u.moveAway() if(u.isBuilder()) then {for(Unit u){u.attack(Closest)}} else { for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25) u.train(Worker,Left,4) u.train(Light,EnemyDir,2) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(6)} u.train(Ranged,Up,1)}
S;For_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;C;Harvest;10;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest	for(Unit u){u.train(Light,Down,20) for(Unit u){u.train(Light,Down,2)} u.build(Barracks,Down,7) u.harvest(10) u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;10;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,10) if(u.is(Barracks)) then {for(Unit u){for(Unit u){u.harvest(100)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.idle()}}} for(Unit u){u.build(Barracks,EnemyDir,9) if(HasNumberOfUnits(Worker,2)) then {u.moveToUnit(Enemy,Strongest)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;7;S;S_S;S;C;Train;Light;Up;100;S;C;MoveAway;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(7)}} else { u.train(Light,Up,100) u.moveAway()} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;For_S;S;C;Harvest;20;S;C;MoveAway;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.train(Heavy,Down,20)} for(Unit u){u.harvest(20)} u.moveAway()} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway()} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(7)}} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway()} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Harvest;8;S;C;MoveAway;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5) u.train(Heavy,EnemyDir,4)}} u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(7)}} else { for(Unit u){u.harvest(8)} u.moveAway()} u.moveAway() u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(7)}} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway()} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(7)}} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway() u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(7)}} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway()} u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;For_S;S;C;Train;Ranged;Up;20;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} for(Unit u){u.train(Ranged,Up,20)}} u.moveAway() u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Ranged;Up;20;S;C;Attack;Closest;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} for(Unit u){u.train(Ranged,Up,20)} u.attack(Closest)} u.moveAway() u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Up,3) u.build(Barracks,Right,1) u.idle() u.harvest(7) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;5;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;1;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.train(Heavy,Right,5) u.idle() u.build(Barracks,Right,1) u.harvest(7) u.attack(Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;C;Idle;S;C;Train;Heavy;Up;3	for(Unit u){u.harvest(3) u.idle() u.attack(Weakest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,10)} u.idle()} u.train(Heavy,Up,3)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;20;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Light;Right;15;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,20)} u.harvest(3) for(Unit u){u.train(Light,Right,15)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(1) if(u.canHarvest()) then {u.idle()} for(Unit u){u.train(Worker,Down,100)} u.train(Light,Up,25) u.harvest(3) u.build(Barracks,Right,50) u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(1) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} for(Unit u){u.train(Worker,Down,100)} u.train(Light,Up,25) u.harvest(3) u.build(Barracks,Right,50) u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;Right;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;MostHealthy;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Right;15;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Up;25	for(Unit u){u.build(Barracks,Left,8) u.harvest(3) u.train(Ranged,Right,15) if(u.canHarvest()) then {u.attack(MostHealthy)} else { u.idle()} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Right,15)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest) u.train(Light,Up,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;Right;15;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Farthest;S;C;Train;Light;Up;25	for(Unit u){u.build(Barracks,Left,8) u.harvest(3) u.train(Ranged,Right,15) if(u.canHarvest()) then {e} else { u.idle()} u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Farthest)} u.train(Light,Up,25)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;MoveAway;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Ranged;Up;9	for(Unit u){u.build(Barracks,Down,1) u.idle() if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.harvest(15)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,Strongest)} else { e} u.moveAway() u.train(Ranged,EnemyDir,1) u.attack(MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.train(Light,Left,5)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Ranged,Up,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Harvest;1;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;Up;25	for(Unit u){if(u.canHarvest()) then {e} else { u.idle()} for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(1) u.harvest(7)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Closest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Up,4)} for(Unit u){u.train(Light,Up,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;Up;25	for(Unit u){u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,15) u.idle() u.harvest(7)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4)} for(Unit u){u.train(Light,Up,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Left;15;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Worker,Up,2) u.build(Barracks,Left,1) u.harvest(4) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Left,15)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Harvest;50;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;5;S;C;Train;Light;Left;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.harvest(50)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Heavy,EnemyDir,6) if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.moveAway()}} u.attack(LessHealthy)}} for(Unit u){u.idle() u.train(Worker,EnemyDir,6)} u.build(Barracks,EnemyDir,20) u.harvest(5)} else { u.train(Light,Left,3)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Harvest;9;S;C;Build;Barracks;Right;9;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;2;S;S_S;S;C;Train;Heavy;Up;25;S;C;Harvest;9;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(9)} else { u.build(Barracks,Right,9)} u.train(Worker,EnemyDir,2) for(Unit u){u.train(Light,Right,2)} u.train(Heavy,Up,25) u.harvest(9) u.moveToUnit(Enemy,LessHealthy) u.idle() u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;For_S;S;C;Train;Heavy;Up;8;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Harvest;50;S;C;Train;Worker;Down;15	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,Left,2) for(Unit u){u.train(Heavy,Up,8)} if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.attack(Weakest)}} u.harvest(50) u.train(Worker,Down,15)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;Up;5;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Train;Worker;EnemyDir;100;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.isBuilder()) then {u.harvest(9) u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.build(Barracks,Left,5)}}} for(Unit u){u.attack(MostHealthy) u.train(Light,Up,5) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Worker,EnemyDir,100)} else { e} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,5)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { for(Unit u){u.train(Heavy,Down,20) u.harvest(8)} u.moveAway()} u.moveToUnit(Enemy,Closest) u.train(Worker,Left,4) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Harvest;25;S;C;Train;Heavy;EnemyDir;1;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;Right;3;S;C;Train;Worker;Left;6	for(Unit u){u.build(Barracks,Up,3)} for(Unit u){for(Unit u){u.harvest(3) u.harvest(25) u.train(Heavy,EnemyDir,1)} u.attack(MostHealthy) u.train(Heavy,Right,3) u.train(Worker,Left,6)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;15	for(Unit u){u.build(Barracks,Up,3)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} for(Unit u){u.harvest(3)} u.attack(Weakest) u.train(Worker,Down,15)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;9;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Left;50	for(Unit u){u.idle() u.train(Ranged,Right,9) u.harvest(5) u.moveToUnit(Enemy,LessHealthy) if(OpponentHasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.train(Worker,Left,50)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;10;S;C;Train;Ranged;EnemyDir;4;S;C;Harvest;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Right,10)} u.train(Ranged,EnemyDir,4) u.harvest(15) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;7;S;C;Harvest;8;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.idle() u.train(Worker,Left,7) u.harvest(8) u.train(Light,Down,3)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Down,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}} else { for(Unit u){u.harvest(3)}} u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,3)} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;C;Train;Light;Up;2	for(Unit u){u.train(Ranged,Right,2) u.build(Barracks,Up,5) u.train(Heavy,Right,8) u.harvest(7) u.attack(Strongest) for(Unit u){u.idle()} u.train(Light,Up,2)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(15) u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Left,10) u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,9) u.idle() u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,3)} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;7;S;C;Train;Light;Down;3	for(Unit u){u.train(Worker,Right,5) u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,EnemyDir,1) u.harvest(2) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.harvest(7) u.train(Light,Down,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Left,50) for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.train(Light,Down,3)} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest;S;C;Train;Light;Down;3	for(Unit u){u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(2) u.moveToUnit(Enemy,Weakest) u.attack(Farthest) u.train(Light,Down,3)}
S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Right;8;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;EnemyDir;5;S;Empty;S;For_S;S;C;Harvest;20;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,Left,3)} u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.train(Heavy,Right,8)}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,EnemyDir,5)}} else { e} for(Unit u){u.harvest(20)} for(Unit u){u.train(Light,Left,9)} for(Unit u){u.attack(Weakest)} if(u.isBuilder()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,2) u.moveToUnit(Ally,Farthest)}} else { e}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Light;Right;5;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Right,2) u.harvest(1) u.train(Light,Right,5) for(Unit u){u.train(Heavy,Up,6) u.train(Light,Down,2)} u.attack(LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;5;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Heavy;Right;8;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;EnemyDir;5;S;Empty;S;For_S;S;C;Harvest;20;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;1	for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Light,5)) then {u.idle()}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.build(Barracks,Left,3)} u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.train(Heavy,Right,8)}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,EnemyDir,5)}} else { e} for(Unit u){u.harvest(20)} for(Unit u){u.train(Light,Left,9)} for(Unit u){u.attack(Weakest)} if(u.isBuilder()) then {e} else { for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,2) u.moveToUnit(Ally,Farthest)}} else { u.attack(Closest) for(Unit u){u.train(Worker,Up,1)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,3)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.idle() u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,3)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;3;S;For_S;S;C;Attack;Farthest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.idle() u.train(Ranged,Right,1) u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,3)} for(Unit u){u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Train;Worker;Up;7;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Heavy;Down;8;S;C;Attack;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,5)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Worker,Up,7)} u.harvest(15) u.train(Heavy,Down,8) u.attack(Closest)}
S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;8;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Left;5;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;10	if(OpponentHasNumberOfUnits(Base,8)) then {u.moveToUnit(Ally,LessHealthy)} else { e} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.idle()}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Left,5)}} if(u.is(Base)) then {for(Unit u){u.harvest(1)}} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,10)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;10;S;S_S;S;C;Harvest;20;S;C;MoveAway;S;C;Train;Worker;Down;3;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,50) u.idle() u.train(Ranged,Right,10) u.harvest(20) u.moveAway() u.train(Worker,Down,3)} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;LessHealthy;S;C;Train;Light;Down;3	for(Unit u){u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.attack(LessHealthy) u.train(Light,Down,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;8;S;For_S;S;C;Train;Light;Up;8;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;Train;Worker;Left;15;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,8)} for(Unit u){u.train(Light,Up,8)} for(Unit u){u.idle() u.harvest(5) u.train(Worker,Left,15)} u.build(Barracks,EnemyDir,8) u.moveAway() u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveAway;S;C;Idle;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Idle;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Ranged,EnemyDir,3) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()} u.idle()} else { e} u.build(Barracks,Left,8) u.train(Heavy,EnemyDir,50) u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} if(u.is(Base)) then {u.moveToUnit(Enemy,LessHealthy)} u.attack(Weakest) if(u.canHarvest()) then {for(Unit u){u.idle()}} else { e} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(4)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,50)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;LessHealthy;S;C;Train;Light;Down;8	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.attack(LessHealthy) u.train(Light,Down,8)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;For_S;S;S_S;S;C;Train;Light;Left;50;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){u.train(Light,Left,50) for(Unit u){u.attack(Closest)} u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Attack;Weakest;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;Down;2	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.train(Worker,Right,25) u.moveToUnit(Enemy,Farthest) u.build(Barracks,Down,25) u.attack(Weakest) u.train(Heavy,EnemyDir,100) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,Down,2)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;50;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){u.idle() u.train(Light,Left,50) u.train(Worker,Left,4) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;50;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){u.idle() u.train(Light,Left,50) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Base;Down;5;S;For_S;S;C;Build;Barracks;Right;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;15;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.attack(Closest) for(Unit u){u.harvest(6)} for(Unit u){u.train(Light,Left,4)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Base,Down,5)} for(Unit u){u.build(Barracks,Right,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,15)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Light;Up;6;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.train(Light,Up,6) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){u.idle() u.moveAway() u.train(Worker,Left,4) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) for(Unit u){u.idle()} u.harvest(20) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){if(u.is(Worker)) then {e} else { u.attack(LessHealthy)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,4) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;LessHealthy;S;C;Train;Light;Down;8	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.idle() u.harvest(3) u.train(Worker,Down,8) u.attack(LessHealthy) u.train(Light,Down,8)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;C;Train;Heavy;Right;10;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;10;S;C;Harvest;8;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)} u.train(Heavy,Right,10)} for(Unit u){u.idle()} u.train(Ranged,Right,1) u.harvest(2) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,10) u.harvest(8) u.moveAway() u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Attack;Farthest;S;C;Attack;LessHealthy;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Right;10	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {if(HaveQtdUnitsAttacking(4)) then {u.attack(Farthest)} else { u.attack(LessHealthy)}}} u.build(Barracks,Up,100) u.harvest(15) u.train(Worker,Left,6) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Right,10)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;EnemyDir;15;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Up,3) for(Unit u){if(u.isBuilder()) then {if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,LessHealthy)}} else { u.train(Ranged,EnemyDir,15)}} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,MostHealthy)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.train(Worker,EnemyDir,15) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;4;S;C;Train;Worker;EnemyDir;3	for(Unit u){for(Unit u){u.idle() u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} u.train(Worker,Up,4)}} else { u.train(Worker,EnemyDir,3)}}
S;S_S;S;For_S;S;C;Train;Worker;Right;50;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Attack;Closest;S;For_S;S;C;Harvest;5	for(Unit u){u.train(Worker,Right,50)} for(Unit u){u.idle() u.build(Barracks,EnemyDir,100) u.attack(Closest) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Left;15;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,EnemyDir,10) for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Left,15)} u.train(Worker,Down,5) for(Unit u){for(Unit u){u.harvest(15)} u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(1) for(Unit u){for(Unit u){for(Unit u){u.idle()}}} u.attack(Closest) u.train(Worker,Left,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;For_S;S;C;Harvest;20;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Train;Ranged;Down;6	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,25)} for(Unit u){u.harvest(20)} u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest) u.train(Light,EnemyDir,2) u.train(Ranged,Down,6)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;15;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Base;EnemyDir;5;S;For_S;S;C;Build;Barracks;Right;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;15;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.moveAway() for(Unit u){u.harvest(6)} for(Unit u){u.train(Light,Left,4)} for(Unit u){u.train(Heavy,Down,15)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Base,EnemyDir,5)} for(Unit u){u.build(Barracks,Right,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,15)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;50;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,EnemyDir,7) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){u.idle() u.train(Light,Left,50) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Light;EnemyDir;2;S;S_S;S;C;Train;Ranged;Right;9;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Down;8;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Light,EnemyDir,2) u.train(Ranged,Right,9) u.harvest(3) u.train(Worker,Down,8)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Right;2	for(Unit u){if(u.canAttack()) then {u.idle() u.build(Barracks,Left,100) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.moveAway()}} for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Down,50)} u.train(Worker,Right,2)}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Up;50;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Right;2	for(Unit u){if(u.canAttack()) then {u.idle() u.build(Barracks,Left,100) u.harvest(7) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.train(Heavy,Up,50) for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Right,2)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Left,9) u.harvest(9) u.moveToUnit(Enemy,Closest) if(u.is(Worker)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;4;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;is_Type;Worker;S;C;Build;Barracks;Up;10;S;For_S;S;C;Train;Worker;Right;20	for(Unit u){u.idle() u.train(Heavy,Down,4) u.harvest(6) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Strongest)} if(u.is(Worker)) then {u.build(Barracks,Up,10)} for(Unit u){u.train(Worker,Right,20)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;7;S;C;Attack;Farthest;S;C;Train;Light;Down;3	for(Unit u){u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(2) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.harvest(7) u.attack(Farthest) u.train(Light,Down,3)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Train;Worker;Right;10;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Light;Left;3;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;3;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2)} u.train(Worker,Right,10) u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Light,Left,3) u.build(Barracks,EnemyDir,20) u.attack(MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(HasNumberOfUnits(Barracks,3)) then {u.moveToUnit(Enemy,Weakest)} u.moveAway()} u.moveToUnit(Ally,Weakest)} u.train(Ranged,Up,7) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveAway;S;C;Harvest;4	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(u.is(Worker)) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(LessHealthy)}}} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Left,10) if(u.is(Worker)) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.moveAway()} u.harvest(4)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;C;Harvest;3;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;0;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Right,10) u.harvest(3)} for(Unit u){if(HasNumberOfUnits(Base,0)) then {u.attack(Weakest)} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;15;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Build;Barracks;Left;1;S;C;Train;Worker;Right;25;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Ranged,Left,15) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.build(Barracks,Left,1)}} u.train(Worker,Right,25)} u.harvest(6) u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){u.idle() u.attack(LessHealthy) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;8;S;For_S;S;C;Train;Light;Down;8;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;Train;Worker;Left;15;S;C;Build;Barracks;EnemyDir;8;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,8)} for(Unit u){u.train(Light,Down,8)} for(Unit u){u.idle() u.harvest(5) u.train(Worker,Left,15)} u.build(Barracks,EnemyDir,8) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;4;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Right;7;S;C;Train;Worker;Left;15	for(Unit u){u.build(Barracks,Down,25) u.harvest(4) u.attack(Closest) for(Unit u){u.idle()} u.train(Light,Right,7) u.train(Worker,Left,15)}
S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(2) u.train(Worker,Down,8) if(u.canAttack()) then {for(Unit u){u.harvest(7)}} u.moveToUnit(Enemy,Weakest) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;LessHealthy;S;C;Train;Light;Down;3	for(Unit u){u.idle() u.train(Heavy,Left,9) u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.attack(LessHealthy) u.train(Light,Down,3)}
S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;9;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Build;Barracks;Right;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;15;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	if(OpponentHasNumberOfUnits(Ranged,9)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.idle() u.attack(Closest) for(Unit u){u.harvest(2)} for(Unit u){u.train(Light,Left,4)} for(Unit u){u.train(Heavy,Down,15)} u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.build(Barracks,Right,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,15)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;2;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Attack;Closest;S;C;Train;Worker;Left;10	for(Unit u){for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.build(Barracks,Down,25) u.harvest(2)} u.train(Light,Down,10) u.harvest(4) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} else { e}} u.attack(Closest) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;2;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;Empty;S;C;Attack;Closest;S;C;Train;Worker;Left;10	for(Unit u){for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.build(Barracks,Down,25) u.harvest(2)} u.train(Light,Down,10) u.harvest(4) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,EnemyDir,2)} else { e}} u.attack(Closest) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;2;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;Empty;S;C;Attack;Closest;S;C;Train;Worker;Down;10	for(Unit u){for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.build(Barracks,Down,25) u.harvest(2)} u.train(Light,Down,10) u.harvest(4) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,EnemyDir,2)} else { e}} u.attack(Closest) u.train(Worker,Down,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;Empty;S;C;Attack;Closest;S;C;Train;Worker;Down;10	for(Unit u){for(Unit u){u.idle() u.train(Light,Down,10) u.harvest(4) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,EnemyDir,2)} else { e}} u.attack(Closest) u.train(Worker,Down,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Closest;S;C;Train;Worker;Down;10	for(Unit u){for(Unit u){u.idle() u.train(Light,Down,10) u.harvest(4) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest) u.build(Barracks,EnemyDir,2)} else { e} u.moveToUnit(Enemy,Farthest)} u.attack(Closest) u.train(Worker,Down,10)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;LessHealthy;S;C;Train;Light;Down;3;S;For_S;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(3) u.train(Worker,Down,8) u.attack(LessHealthy) u.train(Light,Down,3)} for(Unit u){u.train(Heavy,Up,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;C;Harvest;9;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;3;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.train(Heavy,EnemyDir,20) u.harvest(9) u.idle() u.train(Light,Down,3) u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Farthest;S;For_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;15;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;1;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;Empty;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){u.train(Worker,EnemyDir,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(OpponentHasNumberOfUnits(Ranged,10)) then {u.moveToUnit(Enemy,MostHealthy)} u.attack(Farthest) for(Unit u){u.harvest(2)} if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Base,15)) then {u.moveToUnit(Ally,Weakest)} u.train(Light,Left,1) for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,MostHealthy) u.train(Light,EnemyDir,50) u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}} else { e} for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Light;EnemyDir;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;3;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;For_S;S;C;Harvest;7;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.idle() u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {u.train(Light,EnemyDir,10)} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,3)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} for(Unit u){u.harvest(7)}} for(Unit u){if(u.is(Base)) then {e} else { for(Unit u){u.moveToUnit(Ally,Closest)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;7;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) for(Unit u){u.idle()} u.harvest(20) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,7)}} for(Unit u){if(u.is(Worker)) then {e} else { u.attack(LessHealthy)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;C;Harvest;100;S;C;Train;Light;EnemyDir;9;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;2;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Strongest	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.attack(LessHealthy)}}} else { u.harvest(100) u.train(Light,EnemyDir,9)} for(Unit u){u.idle() u.train(Light,Right,2) u.build(Barracks,EnemyDir,2)} u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Light;Down;7	for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.attack(Closest)} u.train(Light,Down,7)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;C;Harvest;50;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Down;7	for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.harvest(50)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,6) u.idle()} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest)} u.train(Light,Down,7)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Train;Worker;Right;10;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;3;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2)} u.train(Worker,Right,10) u.harvest(3)} for(Unit u){u.train(Light,Left,3) u.build(Barracks,EnemyDir,20) u.attack(MostHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Down;2;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveAway;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){u.build(Barracks,Down,7) u.harvest(15) u.train(Ranged,Down,2)} for(Unit u){if(u.is(Ranged)) then {u.moveAway()}} for(Unit u){u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;For_S;S;C;Build;Base;Left;20;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Heavy;Right;4;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(8) for(Unit u){u.build(Base,Left,20)} u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) u.train(Heavy,Right,4) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()} else { for(Unit u){u.train(Worker,EnemyDir,7)}}} u.train(Heavy,EnemyDir,5) if(HasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Worker;EnemyDir;25;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Base;7;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(1) if(u.canHarvest()) then {for(Unit u){u.train(Worker,EnemyDir,25)}} u.idle() u.attack(LessHealthy) if(HasNumberOfUnits(Base,7)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Harvest;15;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Right;6	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(15)} else { e}}} for(Unit u){u.build(Barracks,Down,20) u.moveToUnit(Enemy,Farthest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Ranged,Right,6)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;C;Train;Heavy;Right;10;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;8;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway	for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)} u.train(Heavy,Right,10)} for(Unit u){u.idle()} u.train(Ranged,Right,1) u.harvest(2) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.harvest(8) u.moveToUnit(Ally,Closest) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;1;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;100;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Light,EnemyDir,1) u.idle() u.train(Ranged,Right,100) u.harvest(15) for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Up;6	for(Unit u){u.build(Barracks,Down,50) u.harvest(2) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,MostHealthy) u.train(Light,Up,6)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;3;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Down;50;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Left;4;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;2;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;Attack;Closest;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){for(Unit u){u.train(Light,Up,4)} for(Unit u){for(Unit u){u.train(Heavy,Right,3)} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(5)}} u.train(Worker,Down,50) u.build(Base,Left,4) u.build(Barracks,Left,3) u.idle() u.moveToUnit(Enemy,Closest) u.moveAway() if(OpponentHasNumberOfUnits(Base,2)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} for(Unit u){if(u.is(Heavy)) then {u.attack(Closest)}} u.attack(LessHealthy)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;2;S;C;Idle;S;C;Harvest;3;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;For_S;S;C;MoveAway;S;C;Harvest;8;S;C;Attack;Farthest;S;C;Build;Barracks;Left;15;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Light,Up,2) u.idle() u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Ranged,EnemyDir,2) u.idle()} u.harvest(3) u.moveToUnit(Ally,MostHealthy) u.attack(Closest) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveAway()} u.harvest(8)} else { u.attack(Farthest)} u.build(Barracks,Left,15) u.train(Heavy,EnemyDir,15)}} else { u.train(Worker,EnemyDir,3)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Train;Worker;Right;10;S;C;Harvest;3;S;For_S;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2)} u.train(Worker,Right,10) u.harvest(3)} for(Unit u){u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.moveAway() u.attack(MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.build(Barracks,Up,5)} u.moveToUnit(Ally,Weakest)} u.train(Ranged,Up,7) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Right;15;S;S_S;S;C;Build;Barracks;Right;10;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(6) u.train(Heavy,Down,10)} u.train(Worker,Right,15) u.build(Barracks,Right,10) for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;7;S;S_S;S;C;Harvest;50;S;C;MoveAway	for(Unit u){for(Unit u){u.harvest(5)} u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.train(Worker,Down,8) u.moveToUnit(Enemy,Weakest) u.harvest(7) u.harvest(50) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,EnemyDir,7)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;50;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,50) for(Unit u){u.idle()} u.harvest(2) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Build;Barracks;Up;9;S;For_S;S;C;Idle	for(Unit u){u.harvest(3) u.train(Worker,Right,7) u.moveToUnit(Enemy,Strongest) u.moveAway() u.build(Barracks,Up,9) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Idle;S;For_S;S;C;Train;Light;Right;50;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(15) for(Unit u){u.build(Barracks,Up,6) if(u.canHarvest()) then {e} else { u.idle()}} for(Unit u){u.train(Light,Right,50)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;C;Build;Barracks;Right;4;S;C;Train;Worker;Down;3	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(2)} for(Unit u){u.train(Light,Up,25) u.build(Barracks,Right,4)} u.train(Worker,Down,3)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;9;S;C;Build;Barracks;Left;25;S;C;Attack;Closest;S;C;Train;Worker;Right;3	for(Unit u){u.harvest(9) for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.train(Light,Down,9) u.build(Barracks,Left,25)} u.attack(Closest) u.train(Worker,Right,3)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Harvest;20;S;C;Attack;MostHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;6;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Left;4	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Ally,MostHealthy)} else { for(Unit u){u.harvest(20)} u.attack(MostHealthy)}} u.train(Heavy,Up,15)} u.build(Barracks,Up,4) u.harvest(8) u.train(Worker,Left,6) u.idle() u.attack(Strongest) u.moveToUnit(Enemy,Weakest) u.train(Light,Left,4)}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveAway;S;C;Build;Barracks;Left;15;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,1) u.idle() for(Unit u){u.train(Ranged,EnemyDir,2)} u.harvest(3) u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.is(Worker)) then {e} else { u.moveAway()} u.build(Barracks,Left,15) u.train(Heavy,EnemyDir,15)}} else { u.train(Worker,EnemyDir,3)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;Right;2;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,10) u.harvest(25) u.train(Worker,Left,5) u.attack(MostHealthy) u.train(Ranged,Right,2) for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;4;S;S_S;S;C;Harvest;15;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.idle() u.train(Heavy,Left,4) u.harvest(15) u.moveAway()} for(Unit u){u.train(Light,Up,50) u.train(Worker,Left,4) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Train;Worker;Up;1;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;4;S;S_S;S;C;Harvest;15;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,7) u.train(Worker,Up,1) u.idle() u.train(Heavy,Left,4) u.harvest(15) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Up,4) u.build(Barracks,EnemyDir,6) u.idle() u.moveToUnit(Enemy,Farthest) u.train(Heavy,Left,15) u.train(Light,Up,2) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(1)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Left;15;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Up,4) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Left,15) if(u.is(Heavy)) then {for(Unit u){u.harvest(5)}} u.train(Light,Up,2) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(LessHealthy)}} else { u.attack(Farthest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;For_S;S;C;Train;Heavy;Down;2;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Down;25;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,25) for(Unit u){u.train(Heavy,Down,2)} u.idle()} u.harvest(8) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Down,25)} u.attack(MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;25;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;4;S;C;Harvest;8;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,25)} u.idle() for(Unit u){u.train(Heavy,Right,4)} u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Light;Left;9;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Down;1;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;2;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Light,Left,9) u.idle() for(Unit u){u.idle()} u.build(Barracks,Down,1) u.harvest(20) u.moveToUnit(Enemy,LessHealthy) if(OpponentHasNumberOfUnits(Barracks,2)) then {u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;1;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;For_S;S;C;Train;Light;Down;1	for(Unit u){for(Unit u){u.idle()} u.train(Worker,EnemyDir,1) u.attack(Closest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(10)}} for(Unit u){u.train(Heavy,Right,25)} for(Unit u){u.train(Light,Down,1)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Up;8;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;For_S;S;C;Train;Light;Down;1	for(Unit u){for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,8)}} u.attack(Closest) for(Unit u){u.harvest(10)}} for(Unit u){u.train(Heavy,Right,25)} for(Unit u){u.train(Light,Down,1)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;10;S;For_S;S;C;Train;Heavy;Right;25	for(Unit u){for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(10)}} for(Unit u){u.train(Heavy,Right,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;100;S;S_S;S;C;Build;Barracks;Right;3;S;C;Harvest;7;S;C;Attack;Weakest;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Ranged;Down;1	for(Unit u){for(Unit u){u.idle() u.train(Heavy,Right,100)} u.build(Barracks,Right,3) u.harvest(7) u.attack(Weakest) if(u.is(Worker)) then {u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Ranged,Down,1)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;1;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Up,1) u.harvest(1) u.train(Heavy,EnemyDir,10) u.idle() if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Build;Barracks;Up;15;S;S_S;S;C;Harvest;50;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Up;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,2)}} if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.build(Barracks,Up,15)} u.harvest(50) u.attack(Strongest) u.train(Heavy,Up,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Build;Barracks;Up;15;S;S_S;S;C;Harvest;100;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Up;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,2)}} if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.build(Barracks,Up,15)} u.harvest(100) u.attack(Weakest) u.train(Heavy,Up,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;100;S;C;Harvest;15;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Left;5	for(Unit u){u.idle() for(Unit u){u.idle()} u.build(Barracks,Left,100) u.harvest(15) u.train(Heavy,Up,6) if(u.is(Light)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Light,Left,5)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Harvest;3;S;C;Idle;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Attack;Strongest	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,8) for(Unit u){u.train(Ranged,EnemyDir,2)} u.harvest(3) u.idle() u.moveAway() if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.is(Light)) then {e} else { u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;C;Harvest;3;S;C;Idle;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Attack;Strongest	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,8) for(Unit u){u.train(Heavy,EnemyDir,2)} u.harvest(3) u.idle() u.moveAway() if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.is(Light)) then {e} else { u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;C;Harvest;3;S;C;Idle;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Attack;Strongest	for(Unit u){u.train(Light,Up,2) u.build(Barracks,Down,8) for(Unit u){u.train(Heavy,EnemyDir,2)} u.harvest(3) u.idle() u.moveAway() if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.is(Light)) then {e} else { u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;C;Harvest;3;S;C;Idle;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S_else_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){u.train(Light,Up,2) u.build(Barracks,Down,8) for(Unit u){u.train(Heavy,EnemyDir,2)} u.harvest(3) u.idle() u.moveAway() if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Harvest;20;S;C;Train;Heavy;Down;2;S;S_S;S;C;Train;Light;Right;25;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,7) u.harvest(20) u.train(Heavy,Down,2) u.train(Light,Right,25) u.idle()} for(Unit u){u.moveToUnit(Ally,Closest) u.attack(Closest)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;Down;6;S;C;Attack;Weakest	for(Unit u){u.harvest(1) for(Unit u){u.build(Barracks,Left,1) u.train(Light,Down,6)} u.attack(Weakest)}
S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;20;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;7;S;C;Build;Barracks;Down;5	for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){u.train(Light,Left,20) u.moveAway() if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)}} u.attack(Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(7)}}} else { u.build(Barracks,Down,5)}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;C;Train;Light;Down;6	for(Unit u){u.build(Barracks,Left,1) u.harvest(100) u.attack(Closest) u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;2;S;C;Train;Light;Down;6	for(Unit u){u.build(Barracks,Left,1) u.harvest(9) u.attack(MostHealthy) for(Unit u){u.idle() u.train(Light,EnemyDir,2)} u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){u.build(Barracks,Left,1) u.harvest(9) u.attack(Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(9) u.attack(Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(9) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;Closest;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(10) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(Closest)} u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(10) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(Closest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;Down;6	for(Unit u){for(Unit u){u.train(Light,EnemyDir,2)} u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(10) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest) u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,Down,6)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Left;15;S;C;Train;Light;EnemyDir;6	for(Unit u){for(Unit u){u.train(Light,EnemyDir,2)} u.idle()} for(Unit u){u.build(Barracks,Left,1) u.harvest(10) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest) u.attack(MostHealthy)} u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Left,15)}} u.train(Light,EnemyDir,6)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Light;Left;50;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,3) u.harvest(20) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Closest) u.train(Light,Left,50) for(Unit u){u.idle()} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;C;Harvest;6;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;7;S;C;Train;Light;Up;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Farthest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,10)} else { e} u.harvest(6) for(Unit u){u.idle() u.train(Heavy,Down,7)} u.train(Light,Up,5) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) u.attack(Farthest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Light;Up;8	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(100) for(Unit u){u.train(Worker,Right,3)} u.attack(Strongest) for(Unit u){u.idle()}} u.train(Heavy,Down,7) u.train(Light,Up,8)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Ranged;Up;25	for(Unit u){for(Unit u){u.build(Barracks,Left,25) u.harvest(3) for(Unit u){u.train(Worker,Right,3)} u.attack(Strongest) for(Unit u){u.idle()}} u.train(Heavy,Down,7) u.train(Ranged,Up,25)}
S;S_S;S;For_S;S;C;Train;Heavy;Right;5;S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;3;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Right,5)} for(Unit u){u.train(Worker,Down,3) u.build(Barracks,EnemyDir,9) u.harvest(3) u.idle() u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;Left;2;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveAway;S;S_S;S;C;Idle;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,7) u.harvest(15) u.train(Ranged,Left,2)} for(Unit u){if(u.is(Ranged)) then {u.moveAway()} u.idle() u.moveAway()} for(Unit u){u.train(Light,Right,10) u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Heavy;Right;5;S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;C;Harvest;3;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Right,5)} for(Unit u){u.train(Worker,Down,3) u.build(Barracks,EnemyDir,9) u.train(Ranged,EnemyDir,50) u.harvest(3) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Left;10;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;8;S;C;Train;Light;Up;3	for(Unit u){u.harvest(4) u.moveAway() u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,10) for(Unit u){for(Unit u){u.idle() u.build(Barracks,Down,8) u.train(Light,Up,3)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Left;10;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;8;S;C;Train;Light;Up;3;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;6;S;C;Train;Light;Up;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(4) u.moveAway() u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,10) for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle() u.build(Barracks,Down,8) u.train(Light,Up,3)}} if(OpponentHasNumberOfUnits(Worker,6)) then {u.train(Light,Up,5)} else { u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;1;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Up;8;S;C;Train;Worker;Right;3;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Left,1) u.build(Barracks,Left,50)} for(Unit u){u.harvest(6)} u.attack(Weakest) u.train(Light,Up,8) u.train(Worker,Right,3) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Worker;Up;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;Train;Heavy;Up;3	for(Unit u){u.harvest(2) for(Unit u){u.build(Barracks,Up,100)} u.idle() u.attack(Strongest)} for(Unit u){u.train(Worker,Up,8) if(u.canHarvest()) then {e} else { for(Unit u){u.train(Heavy,Up,3)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Build;Barracks;Up;100;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Up;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Train;Worker;Up;5;S;For_S;S;C;Train;Heavy;Up;3	for(Unit u){u.harvest(2) for(Unit u){u.build(Barracks,Up,100)} u.idle() u.attack(Strongest)} for(Unit u){u.train(Light,Up,8) if(u.canHarvest()) then {e} else { u.train(Worker,Up,5) for(Unit u){u.train(Heavy,Up,3)}}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;Left;20	for(Unit u){u.build(Barracks,Up,5)} for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.attack(Closest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.harvest(6)} u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,50) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,Left,20)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.attack(Closest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.harvest(6)} u.moveToUnit(Enemy,Farthest) u.train(Light,EnemyDir,50) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Build;Barracks;Up;15;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;2;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;C;Harvest;50;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Up,3) u.build(Barracks,Up,15) u.idle() if(HasNumberOfUnits(Light,2)) then {u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,2) u.harvest(50) u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;Left;100;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;For_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;Harvest;100	for(Unit u){u.idle() u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(9)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Left,100)}} for(Unit u){for(Unit u){u.build(Barracks,Right,3)} for(Unit u){u.train(Heavy,Right,10) u.harvest(100)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;2	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(5) u.attack(Strongest) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,EnemyDir,15)} u.moveToUnit(Ally,Farthest) u.train(Worker,Down,2)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Heavy;Up;8	for(Unit u){u.idle() u.attack(Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(1)} u.train(Worker,Up,2) for(Unit u){u.build(Barracks,EnemyDir,50)} u.train(Heavy,Up,8)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Left;7;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;9;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;100;S;Empty;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;4;S;C;Train;Heavy;Down;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;Empty;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Worker;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.train(Ranged,Left,7)}} else { u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.build(Barracks,Right,9) if(u.canAttack()) then {u.harvest(100)} else { e} u.idle() u.train(Light,Up,4) u.train(Heavy,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){u.moveAway()}} else { e} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} else { e}} if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,5) u.train(Worker,Up,2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.is(Barracks)) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Farthest)}}} if(HasNumberOfUnits(Worker,6)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Harvest;7;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.train(Heavy,Left,7) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,20) u.train(Ranged,Right,1) u.harvest(2) u.train(Worker,Down,8) if(u.canAttack()) then {for(Unit u){u.harvest(7)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e}} u.moveToUnit(Enemy,Weakest) u.attack(Farthest)}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;2;S;C;Idle;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Ranged,EnemyDir,2) u.idle()} u.harvest(3) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.build(Barracks,Left,15) u.train(Heavy,EnemyDir,15)}} else { u.train(Worker,EnemyDir,3)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;2;S;C;Idle;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;9;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Ranged,EnemyDir,2) u.idle()} u.harvest(3) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) if(u.HasUnitInOpponentRange()) then {if(u.isBuilder()) then {e} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(MostHealthy)}} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,Left,9)}}} else { u.train(Worker,EnemyDir,3)}}
S;For_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Idle;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;9;S;C;Train;Worker;EnemyDir;3	for(Unit u){u.train(Light,Up,2) u.build(Barracks,EnemyDir,1) for(Unit u){if(u.is(Base)) then {for(Unit u){u.idle()}}} u.harvest(3) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,Left,9)}}} else { u.train(Worker,EnemyDir,3)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveAway;S;C;Train;Worker;Right;9;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Worker,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.harvest(1)} for(Unit u){u.harvest(6)} u.build(Barracks,EnemyDir,2) u.moveAway() u.train(Worker,Right,9) u.attack(MostHealthy) u.train(Light,Down,9) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Worker,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.harvest(1)} for(Unit u){u.harvest(6)} u.build(Barracks,EnemyDir,2) u.moveAway() u.moveToUnit(Ally,Farthest) u.attack(Strongest) u.train(Worker,Right,9) u.train(Light,Down,9) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Base;Down;50;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;9;S;S_S;S;C;Train;Light;Down;9;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.harvest(1)} for(Unit u){u.build(Base,Down,50)} for(Unit u){u.harvest(6)} u.build(Barracks,EnemyDir,2) u.moveAway() u.moveToUnit(Enemy,Farthest) u.attack(Strongest) u.train(Worker,Right,9) u.train(Light,Down,9) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Base;Down;50;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;9;S;S_S;S;C;Train;Light;Down;9;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.harvest(1)} for(Unit u){u.build(Base,Down,50)} for(Unit u){u.harvest(6)} u.build(Barracks,EnemyDir,2) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) u.train(Worker,Right,9) u.train(Light,Down,9) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;3;S;S_S;S;C;Harvest;2;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;9	for(Unit u){u.build(Barracks,Left,4) if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Worker,Down,3)} u.harvest(2) u.attack(Closest) u.train(Light,Left,9)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Attack;Closest;S;C;Harvest;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)} u.moveAway() u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Right,100)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(Closest)} u.harvest(25)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;100;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,100)} u.moveAway() for(Unit u){u.harvest(25)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Right;100;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,100)} u.moveAway() for(Unit u){u.harvest(25)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,100)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(25)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;C;Harvest;25	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(MostHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,100)} for(Unit u){u.harvest(25)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;Train;Light;EnemyDir;20;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Down;4;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(2) u.build(Barracks,EnemyDir,5) u.train(Light,EnemyDir,20) u.idle() if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.train(Worker,Down,4)}} for(Unit u){u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Left;2;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,3) u.build(Barracks,EnemyDir,3) u.harvest(100) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,EnemyDir,9) u.moveToUnit(Ally,Closest) u.train(Light,Left,2) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Left;2;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,3) u.harvest(100) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,EnemyDir,9) u.moveToUnit(Ally,Closest) u.train(Light,Left,2) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Left;2;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,3) u.build(Barracks,EnemyDir,3) u.harvest(100) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(u.canAttack()) then {u.idle()}} u.train(Heavy,EnemyDir,9) u.moveToUnit(Ally,Closest) u.train(Light,Left,2) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;8;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;2;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,3) u.build(Barracks,EnemyDir,25) u.harvest(100) u.attack(MostHealthy) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(6)}} for(Unit u){if(u.canAttack()) then {u.idle()}} u.train(Heavy,EnemyDir,9) u.moveToUnit(Ally,Closest) if(OpponentHasNumberOfUnits(Heavy,8)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Light,Left,2) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;2;S;S_S;S;C;Build;Barracks;Left;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;EnemyDir;15;S;Empty;S;C;Train;Worker;Right;3;S;C;Train;Heavy;Right;2	for(Unit u){u.harvest(4) u.attack(Weakest) if(u.canHarvest()) then {for(Unit u){u.idle() u.train(Light,EnemyDir,2) u.build(Barracks,Left,3) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Weakest) u.train(Heavy,EnemyDir,15)} else { e}}} u.train(Worker,Right,3) u.train(Heavy,Right,2)}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;C;Train;Heavy;Down;3;S;C;Build;Barracks;Left;3;S;C;Train;Worker;Left;2	for(Unit u){u.harvest(7) u.attack(Weakest) for(Unit u){u.idle()} if(u.canHarvest()) then {for(Unit u){u.train(Light,EnemyDir,2) u.train(Heavy,Down,3) u.build(Barracks,Left,3)}} u.train(Worker,Left,2)}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;Build;Barracks;Left;3;S;C;Train;Worker;Left;2	for(Unit u){u.harvest(7) u.attack(Weakest) for(Unit u){u.idle()} if(u.canHarvest()) then {for(Unit u){u.train(Light,EnemyDir,50) u.build(Barracks,Left,3)}} u.train(Worker,Left,2)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;9;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Heavy;EnemyDir;15	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(5) u.idle() u.train(Worker,Right,9) u.attack(Strongest) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,EnemyDir,15)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;2;S;C;Train;Light;Right;6	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,2)} u.train(Light,Right,6)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;C;Harvest;8	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,LessHealthy)} u.train(Light,Right,6) for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;2;S;C;Train;Worker;Left;3;S;C;Train;Light;Right;6	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,2)} u.train(Worker,Left,3) u.train(Light,Right,6)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;2;S;C;Train;Worker;Left;3;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;C;Train;Ranged;Down;3	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,2)} u.train(Worker,Left,3) u.train(Light,Right,6) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {for(Unit u){u.train(Ranged,Down,3)}}}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;2;S;C;Train;Worker;Left;3;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Ranged;Down;3	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,2)} u.train(Worker,Left,3) u.train(Light,Right,6) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Ranged,Down,3)}}}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Ranged;Down;3	for(Unit u){u.build(Barracks,Right,15)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,2)} u.train(Light,Right,6) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Ranged,Down,3)}}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Ranged;Down;3	for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,2)} u.train(Light,Right,6) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Ranged,Down,3)}}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Right;8;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;2	for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,2)} u.train(Light,Right,8) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveAway() u.train(Ranged,EnemyDir,2)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Ranged;Down;3	for(Unit u){u.build(Barracks,Left,5)} for(Unit u){u.harvest(7) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,2)} u.train(Light,Right,6) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Ranged,Down,3)}}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Harvest;7;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Light,Left,2) u.build(Barracks,EnemyDir,3) u.harvest(7) u.train(Heavy,Down,10) u.moveToUnit(Enemy,Farthest)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;2;S;C;Train;Ranged;Up;1;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Left,2) u.build(Barracks,EnemyDir,3) u.harvest(2) u.train(Ranged,Up,1)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;4;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;Empty	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle() for(Unit u){u.harvest(8)}}}} for(Unit u){u.train(Heavy,Left,4) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Ally,Strongest)} u.harvest(9) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,9)}} if(OpponentHasNumberOfUnits(Ranged,4)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,MostHealthy)}} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} else { e}}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;Right;1;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Left,5)}} for(Unit u){for(Unit u){u.harvest(10)} for(Unit u){u.idle() u.attack(Strongest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,Right,1)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;2;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;Right;1;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Left,5)}} for(Unit u){for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(10)} for(Unit u){u.idle() u.attack(Strongest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,Right,1)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Train;Ranged;Down;7;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Idle;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(2) u.train(Ranged,Down,7) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Left,9)} u.moveToUnit(Ally,Closest) u.train(Light,EnemyDir,4) u.idle() u.moveAway() u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Ranged;Right;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.harvest(7) u.train(Ranged,Right,7) for(Unit u){u.build(Barracks,Right,9)} u.moveToUnit(Ally,Closest) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle() u.harvest(5) u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {u.attack(LessHealthy)}} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,Right,100)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Ranged;Right;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;S_S;S;For_S;S;C;Train;Light;Right;5;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.harvest(7) u.train(Ranged,Right,7) for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Light,Right,5)} u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Train;Light;Up;2;S;C;Train;Ranged;Right;3;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,2)} u.harvest(7) u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.train(Light,Up,2)} u.train(Ranged,Right,3) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;7	for(Unit u){for(Unit u){for(Unit u){u.train(Ranged,Left,2)} u.build(Barracks,EnemyDir,8) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.harvest(4)} for(Unit u){u.moveAway() for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,7)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;7	for(Unit u){for(Unit u){for(Unit u){u.train(Ranged,Left,2)} u.build(Barracks,EnemyDir,8) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.harvest(4)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,7)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;7	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Left,2)} u.build(Barracks,EnemyDir,8) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} u.harvest(4)} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,7)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;4;S;For_S;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Left,2)} u.build(Barracks,EnemyDir,8) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} u.harvest(4) for(Unit u){u.train(Light,Left,10)}} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;7	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,EnemyDir,2)} u.build(Barracks,EnemyDir,8) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Enemy,Closest)}} u.harvest(4)} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Light,Up,5)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.train(Worker,EnemyDir,15) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Light,Up,5)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Strongest) u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;MostHealthy;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Light,Up,5)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Light,Up,5)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.harvest(10) u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Light;Down;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Left,6) for(Unit u){u.train(Light,Down,5)} u.harvest(4) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;100;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;5;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest) u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,100) for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,5)}}} for(Unit u){u.train(Worker,Up,4)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;100;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;5;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} u.moveToUnit(Enemy,Closest) u.train(Light,Left,100) for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,5)}}} for(Unit u){u.train(Worker,Up,4)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;100;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){u.harvest(7) if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,100) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Down,5)}} for(Unit u){u.train(Worker,Up,4)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;100;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){u.harvest(7) if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,100) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Down,5)}} for(Unit u){u.train(Worker,Up,4)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;20;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){u.harvest(7) if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,20) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Down,5)}} for(Unit u){u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Right;3;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;Harvest;9;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Right,100) for(Unit u){u.harvest(2)} u.train(Worker,Up,4) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Right,3)} else { u.attack(Closest)}} for(Unit u){if(u.is(Base)) then {e} else { u.harvest(9)} u.attack(Closest)}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,100) u.train(Worker,Up,4) u.idle() for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.harvest(20) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,100) u.train(Ranged,Down,50) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.harvest(20) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,100) u.train(Worker,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.harvest(20) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,100) u.train(Worker,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.harvest(20) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,100) u.train(Worker,Up,4) u.idle() for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.harvest(20) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest)} for(Unit u){u.attack(Weakest)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Farthest;S;Empty;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Down;4	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Farthest)} else { e} if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} else { u.attack(Weakest)} u.train(Worker,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,9)} for(Unit u){for(Unit u){u.harvest(10) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest) u.train(Heavy,Down,4)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Down;4	for(Unit u){u.train(Worker,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){for(Unit u){for(Unit u){u.harvest(50)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.attack(Closest) u.train(Heavy,Down,4)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;Train;Light;Up;4;S;C;Harvest;25;S;C;MoveAway;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,3) for(Unit u){u.train(Light,Up,4)} u.harvest(25) u.moveAway()} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;2;S;C;Train;Worker;Up;50	for(Unit u){u.idle() u.attack(LessHealthy) for(Unit u){u.harvest(2)} u.train(Worker,Up,50)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Build;Barracks;Down;9	for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Worker,Up,5) u.moveToUnit(Ally,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.harvest(3)} u.train(Ranged,EnemyDir,3) for(Unit u){u.build(Barracks,Down,9)}}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.attack(Closest) u.train(Worker,Up,5) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} u.train(Ranged,EnemyDir,3) for(Unit u){u.build(Barracks,EnemyDir,9)}}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;C;Train;Ranged;Down;5	for(Unit u){u.attack(Closest) u.train(Worker,Up,5) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,EnemyDir,9) for(Unit u){u.train(Ranged,Down,5)}}}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Light;Left;1;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;C;Train;Ranged;Down;5	for(Unit u){u.attack(Closest) u.train(Worker,Up,5) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Light,Left,1)} for(Unit u){u.build(Barracks,EnemyDir,9) for(Unit u){u.train(Ranged,Down,5)}}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Down;6;S;C;Attack;LessHealthy;S;C;Train;Light;Up;9	for(Unit u){u.harvest(3) u.build(Barracks,Up,4) if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.train(Worker,Down,6)} u.attack(LessHealthy) u.train(Light,Up,9)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Down;6;S;C;Attack;LessHealthy;S;C;Train;Light;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Up,4) if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)} else { u.idle()} for(Unit u){u.train(Worker,Down,6)} u.attack(LessHealthy) u.train(Light,Up,6)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Down;6;S;C;Attack;LessHealthy;S;C;Train;Light;Up;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,4) if(u.isBuilder()) then {u.attack(MostHealthy)} else { u.idle()} for(Unit u){u.train(Worker,Down,6)} u.attack(LessHealthy) u.train(Light,Up,6)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Worker;Left;25;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} u.train(Worker,Left,25)} u.harvest(4) u.build(Barracks,Down,9) for(Unit u){u.idle()} u.attack(LessHealthy) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;MostHealthy;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Right;9;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){u.harvest(3) u.build(Barracks,Down,4) if(u.isBuilder()) then {u.attack(MostHealthy)} else { u.attack(Closest) for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,9)}} for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Light,Down,25) u.attack(Closest) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Harvest;3;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Light,Down,25) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3)} u.attack(Strongest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Down,25) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3) u.idle()} u.attack(Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.train(Light,Down,25) u.attack(Closest) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle() if(u.canHarvest()) then {for(Unit u){u.train(Heavy,Up,25)}}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Heavy;EnemyDir;25	for(Unit u){u.train(Light,Down,25) u.attack(Closest) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle() if(u.canHarvest()) then {for(Unit u){u.train(Heavy,EnemyDir,25)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;2;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Light,Right,2)} u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() u.build(Barracks,Up,5) u.harvest(7) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.build(Barracks,Up,5) u.harvest(7) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;2;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Light,Right,2)} u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() u.build(Barracks,Up,5) u.harvest(7) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;2;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Light,Right,2)} u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() u.build(Barracks,Up,5) u.harvest(7) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;9;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Closest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,5)}} u.train(Light,Down,9) u.build(Barracks,Up,5) u.harvest(7) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Closest)} else { e} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;9;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Closest;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Down,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,5)}} u.train(Light,Down,9) u.build(Barracks,Up,5) u.harvest(7) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Closest)} else { e} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;9;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Right,5) u.harvest(3) u.train(Heavy,Up,3) u.idle() for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,5)}} u.train(Light,Down,9) u.build(Barracks,Up,5) u.harvest(7) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;5;S;S_S;S;C;Build;Barracks;Up;5;S;C;Harvest;7;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Right,5) u.harvest(1) u.train(Heavy,Up,3) u.idle() for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,5)}} u.build(Barracks,Up,5) u.harvest(7) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;100;S;C;Build;Barracks;Right;5;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.harvest(2) for(Unit u){u.train(Ranged,Left,100)} u.build(Barracks,Right,5) u.train(Worker,Down,25) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Train;Worker;Down;10;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Left;6	for(Unit u){u.build(Barracks,EnemyDir,6) u.train(Worker,Down,10) for(Unit u){u.harvest(4)} u.attack(Closest) u.train(Ranged,Left,6)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;15;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;Right;50	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Left,8) u.build(Barracks,EnemyDir,1) u.harvest(15) u.attack(MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,LessHealthy)}} u.train(Ranged,Right,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.harvest(2) for(Unit u){u.train(Ranged,EnemyDir,100)} u.build(Barracks,EnemyDir,5) u.train(Worker,Down,25) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;25;S;C;Build;Barracks;Right;1;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.harvest(2) for(Unit u){u.train(Ranged,Left,25)} u.build(Barracks,Right,1) u.moveToUnit(Enemy,Farthest) u.attack(Strongest) u.train(Worker,Left,20) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;100;S;C;Build;Barracks;Right;5;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.harvest(2) for(Unit u){u.train(Ranged,Left,100)} u.build(Barracks,Right,5) u.attack(Closest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;2	for(Unit u){u.attack(MostHealthy) u.train(Worker,Up,2)}
S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,2) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;0;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Worker;Left;10	for(Unit u){if(OpponentHasNumberOfUnits(Ranged,0)) then {u.harvest(4)} else { u.moveToUnit(Enemy,LessHealthy)} u.attack(MostHealthy) for(Unit u){u.idle()} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.idle()} u.harvest(6) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Down;100;S;For_S;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Down,100)} for(Unit u){for(Unit u){u.harvest(3) u.train(Heavy,Down,100)} for(Unit u){u.attack(Weakest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Base;Up;3;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;4;S;C;Train;Worker;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Base,Up,3) for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,4)} u.train(Worker,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2)} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Train;Worker;Down;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy;S;C;Train;Heavy;Down;15	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,2)} else { u.train(Worker,Down,100) u.moveToUnit(Enemy,MostHealthy)} u.train(Light,Left,2) u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(LessHealthy) u.train(Heavy,Down,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Base;Up;3;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;4;S;C;Train;Worker;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Right;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Base,Up,3) for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,4)} u.train(Worker,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,EnemyDir,7) u.build(Barracks,Right,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;4;S;C;Train;Ranged;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,4)} u.train(Ranged,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;4;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;Harvest;15	for(Unit u){u.idle() for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,4)} u.attack(Closest)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.harvest(15)}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Down;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Harvest;4;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Worker;Down;25;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,EnemyDir,9)} for(Unit u){for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Down,20)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveAway() if(u.canAttack()) then {for(Unit u){u.harvest(4)}} u.harvest(6) u.train(Worker,Down,25) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;8;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;4	for(Unit u){u.train(Heavy,EnemyDir,9)} for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,100)} u.harvest(4) u.moveToUnit(Ally,Strongest) u.train(Worker,Left,8) u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,50) u.moveToUnit(Enemy,LessHealthy) u.harvest(7) u.moveAway() for(Unit u){u.idle()} u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,4)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;C;Harvest;6;S;C;Train;Light;Up;4;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.idle() u.build(Barracks,Down,25) u.harvest(6) u.train(Light,Up,4)} for(Unit u){u.attack(Closest) u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Right;6;S;C;Train;Light;Up;4;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.idle() u.build(Barracks,Down,25) u.harvest(6) for(Unit u){u.train(Heavy,Right,6)} u.train(Light,Up,4)} for(Unit u){u.attack(Closest) u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;6;S;C;Train;Light;Up;4;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.idle() u.build(Barracks,Down,25) u.harvest(6) for(Unit u){u.train(Heavy,Left,6)} u.train(Light,Up,4)} for(Unit u){u.attack(Closest) u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Train;Ranged;EnemyDir;100;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Left;4;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Heavy,EnemyDir,9)} for(Unit u){for(Unit u){u.train(Light,Up,4) u.train(Ranged,EnemyDir,100)} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,LessHealthy) u.harvest(50) u.moveAway() for(Unit u){u.idle()} u.train(Worker,Down,25) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,4)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8)} if(u.canHarvest()) then {u.attack(Weakest)} for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;Up;7;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Right;6	for(Unit u){u.train(Worker,Up,8) for(Unit u){u.idle()} u.train(Heavy,Up,7) for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Weakest) u.build(Barracks,Right,6)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Right;6;S;C;Train;Light;Up;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;4;S;C;Train;Worker;EnemyDir;25;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Down,25) u.harvest(6) for(Unit u){u.train(Heavy,Right,6)} u.train(Light,Up,4)} for(Unit u){u.attack(Closest) u.train(Worker,Up,4) u.train(Worker,EnemyDir,25) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;6;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Heavy;Left;3;S;S_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,Right,6)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(2) u.build(Barracks,EnemyDir,9) u.train(Heavy,Left,3)} u.train(Light,EnemyDir,20) for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;C;Train;Light;Down;5;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Worker,Up,4) for(Unit u){u.build(Barracks,Down,10) u.harvest(15)} for(Unit u){u.train(Ranged,Down,1) u.train(Light,Down,5)} u.train(Worker,EnemyDir,5) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Attack;Weakest;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Right;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;4;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.attack(Weakest)} else { u.attack(MostHealthy) u.train(Ranged,Right,100)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Light,Left,4)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;20;S;C;Harvest;4;S;C;Train;Light;Down;8;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;1;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Left;3;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Weakest;S;C;Harvest;9	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,20) u.harvest(4) u.train(Light,Down,8) if(OpponentHasNumberOfUnits(Ranged,1)) then {u.attack(Weakest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,3)}} else { u.harvest(7) u.moveToUnit(Enemy,MostHealthy)} u.build(Barracks,EnemyDir,50) u.moveToUnit(Enemy,Strongest) u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Weakest)} u.harvest(9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;20;S;S_S;S;C;Train;Light;Down;50;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Right,20)} u.train(Light,Down,50) u.harvest(9) u.attack(Closest) u.moveToUnit(Ally,Strongest) u.train(Worker,Right,3)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Heavy;Right;6;S;C;Train;Light;Up;4;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.idle() u.build(Barracks,Down,25) u.harvest(6) for(Unit u){u.harvest(2) u.train(Heavy,Right,6)} u.train(Light,Up,4)} for(Unit u){u.attack(Closest) u.train(Worker,EnemyDir,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;C;Idle;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;1;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(HasNumberOfUnits(Light,2)) then {u.idle()} else { e} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,1) u.attack(Closest) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;20;S;C;Idle;S;C;Train;Light;Down;15;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;EnemyDir;50	for(Unit u){u.train(Worker,Up,20) u.idle() u.train(Light,Down,15) u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.build(Barracks,EnemyDir,50)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Left;10	for(Unit u){u.build(Barracks,Right,9) u.harvest(1) u.attack(Closest) for(Unit u){u.train(Light,Left,10)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Left;10	for(Unit u){u.idle() u.build(Barracks,Right,9) u.harvest(1) u.attack(LessHealthy) for(Unit u){u.train(Light,Left,10)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Heavy;Down;25;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;Harvest;9;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway() for(Unit u){u.train(Heavy,Down,25)}}} for(Unit u){u.train(Worker,EnemyDir,4)} for(Unit u){u.build(Barracks,Down,1)} if(u.isBuilder()) then {e} else { for(Unit u){u.train(Light,EnemyDir,5)}} for(Unit u){u.harvest(9)} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;50;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;4;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,100)} u.idle() if(HasNumberOfUnits(Worker,50)) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,25) u.harvest(8) for(Unit u){u.build(Barracks,Left,4)} if(OpponentHasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,Farthest)} if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.attack(Farthest)}
S;For_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;C;Train;Ranged;Left;15;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Right,4) for(Unit u){u.build(Barracks,Down,5)} u.harvest(5) u.moveToUnit(Ally,Strongest) u.idle()} u.train(Ranged,Left,15) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;20;S;C;Harvest;4;S;C;Train;Light;Down;8;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;1;S;For_S;S;C;Train;Heavy;Left;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Weakest;S;C;Harvest;9	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,20) u.harvest(4) u.train(Light,Down,8) if(OpponentHasNumberOfUnits(Ranged,1)) then {for(Unit u){u.train(Heavy,Left,3)}} else { u.moveToUnit(Enemy,MostHealthy)} u.build(Barracks,EnemyDir,50) u.moveToUnit(Enemy,Strongest) u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Weakest)} u.harvest(9)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;50;S;For_S;S;C;Train;Worker;Right;50;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,20) u.idle() u.train(Heavy,Right,50) for(Unit u){u.train(Worker,Right,50)}} for(Unit u){u.harvest(2)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;20;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;50;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,20) u.idle() u.train(Heavy,Right,50)} for(Unit u){u.harvest(2)} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;C;Idle;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Ranged;Right;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;1;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(HasNumberOfUnits(Light,2)) then {u.idle()} else { e} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,LessHealthy)} else { u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Ranged,Right,3)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.attack(Closest) u.moveToUnit(Enemy,Strongest) if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,1) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;2;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;2;S;C;Train;Heavy;Up;9	for(Unit u){u.build(Barracks,Right,7) u.idle() u.train(Heavy,Up,2) u.harvest(50) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Farthest)} u.attack(LessHealthy) u.train(Worker,EnemyDir,2) u.train(Heavy,Up,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Light;Down;3;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Left;20	for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(4) u.train(Light,Down,3) u.attack(LessHealthy) if(u.isBuilder()) then {e} else { u.train(Heavy,Left,20)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Build;Barracks;Down;20;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){for(Unit u){u.idle()} u.harvest(2) u.train(Worker,Left,9) for(Unit u){u.train(Heavy,Right,3) u.build(Barracks,Down,20)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)}} u.attack(LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;100;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Right;2	for(Unit u){u.build(Barracks,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.harvest(1) for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}} u.moveToUnit(Ally,Closest) u.train(Light,EnemyDir,3) u.moveToUnit(Ally,Farthest) u.train(Worker,Down,100)} else { u.attack(MostHealthy) u.train(Ranged,Right,2)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Down;6;S;C;Train;Ranged;EnemyDir;20	for(Unit u){u.build(Barracks,Right,2) u.harvest(10) for(Unit u){u.idle()} u.moveAway() u.moveToUnit(Enemy,Weakest) u.train(Light,Down,6) u.train(Ranged,EnemyDir,20)}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Base;Down;10;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;Right;5;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Base,Down,10)} for(Unit u){u.train(Light,EnemyDir,7)} u.harvest(2) if(u.HasUnitInOpponentRange()) then {if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Ally,Closest)} for(Unit u){u.build(Barracks,Right,5)} u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Left,9) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Farthest;S;C;Train;Ranged;Up;25;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;7;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;50	for(Unit u){u.harvest(5) u.moveAway() u.moveToUnit(Enemy,Farthest) u.train(Light,Left,2) if(u.isBuilder()) then {e} else { u.attack(Farthest)} u.train(Ranged,Up,25) if(HasNumberOfUnits(Base,7)) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){u.idle() u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;2;S;S_S;S;C;Harvest;50;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Left;3	for(Unit u){u.build(Barracks,EnemyDir,7) u.idle() u.train(Heavy,Up,2) u.harvest(50) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Farthest)} u.attack(LessHealthy) u.train(Ranged,Left,3)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;5;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,7) u.harvest(15) u.attack(Closest) u.train(Light,Down,5) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;C;Attack;Strongest;S;Empty;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Ranged;Right;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Heavy;Up;1;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(HasNumberOfUnits(Light,2)) then {u.attack(Strongest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Ranged,Right,3)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest) if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,1) u.attack(Closest) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Train;Worker;Down;2;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;C;Harvest;7;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Left;50	for(Unit u){u.harvest(1) if(u.canAttack()) then {u.idle()} if(u.isBuilder()) then {u.moveAway() u.moveToUnit(Ally,Strongest)} u.build(Barracks,EnemyDir,6) u.train(Worker,Down,2) u.moveToUnit(Ally,Closest) if(u.is(Barracks)) then {e} else { u.harvest(7)} u.moveAway() u.attack(Strongest) for(Unit u){u.train(Heavy,Left,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;Left;6	for(Unit u){u.harvest(1) u.idle() u.build(Barracks,EnemyDir,6) u.train(Worker,Down,2) u.moveToUnit(Ally,Closest) u.attack(Strongest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,Left,6)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;25;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;10;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Ranged;Left;4;S;For_S;S;C;Train;Heavy;Up;20;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1)} if(u.HasUnitInOpponentRange()) then {if(HasLessNumberOfUnits(Worker,25)) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Right,10)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Ranged,Left,4)}}} for(Unit u){u.train(Heavy,Up,20)}} u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(4)} u.train(Worker,Left,9) u.train(Light,EnemyDir,8) u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.moveAway() u.moveToUnit(Ally,Closest)} else { u.moveAway()} u.attack(MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;25;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Right;10;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Ranged;Left;4;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1)} u.harvest(2) if(u.HasUnitInOpponentRange()) then {u.idle() if(HasLessNumberOfUnits(Worker,25)) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.idle() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Right,10)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Ranged,Left,4)}}}} u.idle() u.harvest(4) u.train(Worker,Left,9) u.train(Light,Down,8) u.moveToUnit(Enemy,Closest) if(u.canHarvest()) then {u.moveAway() u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Ally,Strongest)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;EnemyDir;7;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;2;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;6;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,EnemyDir,7)} else { u.idle()} u.train(Ranged,Right,2) if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,EnemyDir,2)} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Down,20) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveAway()} else { for(Unit u){u.idle()}} u.moveAway() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,20)}}} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { u.harvest(25)}}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Left;8;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Ranged;Up;3;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;Train;Light;Down;6;S;C;Train;Worker;Left;3	for(Unit u){u.harvest(50) u.attack(Closest) u.train(Heavy,Left,8) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Up,3) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Left,50)} u.train(Light,Down,6) u.train(Worker,Left,3)}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;3;S;C;Train;Ranged;EnemyDir;100;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;25;S;C;MoveAway	for(Unit u){u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,3) u.train(Ranged,EnemyDir,100)} u.harvest(4) u.build(Barracks,Right,25)} u.moveAway()}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;8;S;C;Attack;LessHealthy;S;C;Build;Barracks;Up;1;S;S_S;S;C;Train;Heavy;Right;6;S;C;Build;Barracks;Up;20;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;C;Train;Worker;Up;20	for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(8)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(8)} else { u.attack(LessHealthy)}} u.build(Barracks,Up,1) u.train(Heavy,Right,6) u.build(Barracks,Up,20) u.attack(MostHealthy) u.train(Ranged,Down,100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){for(Unit u){u.train(Worker,Up,20)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Train;Ranged;Up;100;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.harvest(1)} u.build(Barracks,Left,7) u.harvest(9) u.train(Ranged,Up,100) u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Right,100)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;C;Train;Worker;Down;10;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Build;Barracks;Down;20;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(5) u.idle()} u.train(Worker,Down,10) if(HasNumberOfWorkersHarvesting(2)) then {u.build(Barracks,Down,20)} else { u.moveToUnit(Enemy,LessHealthy)} u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;S_S;S;C;Harvest;3;S;C;Build;Base;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Up,8) u.harvest(3) u.build(Base,Left,1) u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Down;2;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;Up;3;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;7;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Up;1	for(Unit u){for(Unit u){u.idle()} u.train(Light,Down,3) if(u.canAttack()) then {for(Unit u){if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)}} u.attack(Closest) u.moveToUnit(Enemy,Closest)} for(Unit u){u.harvest(4) for(Unit u){u.build(Barracks,Down,2)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,3) u.moveAway()} u.moveToUnit(Enemy,Strongest) if(OpponentHasNumberOfUnits(Heavy,7)) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Up,1)}}
S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;15;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;S_S;S;C;Train;Light;Up;10;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,15)}} for(Unit u){u.harvest(4) u.train(Heavy,EnemyDir,4) u.train(Light,Up,10) for(Unit u){u.idle()} u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;5;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Right;100;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Left;6	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,1)} u.harvest(2) if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}}} for(Unit u){for(Unit u){u.train(Worker,Down,25)} u.moveToUnit(Ally,Closest)}} u.train(Worker,Left,9) u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Heavy,5)) then {u.moveToUnit(Enemy,Closest)} else { e}} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway() u.build(Barracks,Right,100) u.attack(Closest)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Light,Left,6)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Farthest	for(Unit u){u.train(Worker,EnemyDir,8) for(Unit u){u.idle()} u.harvest(4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Farthest)}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Right;20;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.harvest(25)}} for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.train(Light,Right,20) for(Unit u){u.idle()} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;C;Idle;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Left;25	for(Unit u){u.harvest(1) u.build(Barracks,EnemyDir,7) u.train(Worker,Down,2) u.idle() u.harvest(6) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,25)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;Up;20;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Train;Ranged;Up;4;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;9	for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,Up,20)} u.harvest(1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,4) u.idle()}} if(u.HasUnitInOpponentRange()) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Weakest)}}} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) for(Unit u){u.attack(LessHealthy)} if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} u.train(Light,Up,9)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;EnemyDir;50;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,EnemyDir,10) u.idle() u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Strongest)} for(Unit u){u.train(Heavy,Left,6)} u.build(Barracks,EnemyDir,50) u.moveToUnit(Ally,Closest)} for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;3;S;For_S;S;C;Train;Worker;Left;4;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Up;100;S;C;Harvest;2;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;Right;50	for(Unit u){u.train(Heavy,Left,3) for(Unit u){u.train(Worker,Left,4)} if(u.isBuilder()) then {for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,100)}} u.harvest(2)} for(Unit u){u.attack(MostHealthy) u.train(Heavy,Right,50)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;C;Harvest;20;S;C;Train;Heavy;Right;25;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Down;3;S;Empty;S;For_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,10) if(u.canAttack()) then {for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Enemy,Closest)} else { e} u.harvest(20) u.train(Heavy,Right,25)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Down,3)} else { e} for(Unit u){u.idle()} u.attack(Closest)}}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Right;20;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.idle() for(Unit u){u.harvest(1)} u.train(Worker,Right,20) if(u.canAttack()) then {u.attack(Weakest)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Right;100;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.harvest(1)} u.train(Worker,Right,100) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Worker;EnemyDir;100;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Train;Heavy;Right;100;S;C;Attack;Closest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(5)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Worker,EnemyDir,100)}} u.build(Barracks,EnemyDir,50) u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.train(Heavy,Right,100)}} u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Down;50	for(Unit u){u.build(Barracks,Left,2) u.harvest(3) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} u.attack(Strongest) for(Unit u){u.train(Heavy,Down,50)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,100) u.harvest(5) if(u.canAttack()) then {for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;50;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.train(Worker,Right,50) if(u.canAttack()) then {for(Unit u){u.harvest(3) u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(2) u.attack(Weakest) u.moveToUnit(Enemy,Closest)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;100	for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.moveToUnit(Enemy,Strongest) if(u.canAttack()) then {u.attack(Strongest)} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,100)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Down;10;S;C;Attack;Weakest	for(Unit u){u.idle() u.harvest(5) u.train(Worker,Down,10) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Right;10;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;1;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Train;Light;Up;1	for(Unit u){u.harvest(4) u.idle() u.train(Worker,Right,8) u.moveToUnit(Ally,Strongest) u.train(Light,Right,10) u.attack(MostHealthy) u.train(Heavy,EnemyDir,1) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,EnemyDir,6)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Light,Up,1)}}}}
S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;C;Harvest;8;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Left,20) u.harvest(8) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Left;5	for(Unit u){u.attack(Closest) for(Unit u){u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;3;S;For_S;S;C;Train;Ranged;Down;9;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Right,3)} for(Unit u){u.train(Ranged,Down,9)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(8) u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;3;S;For_S;S;C;Train;Ranged;Up;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;8	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Right,3)} for(Unit u){u.train(Ranged,Up,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(8)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;C;Train;Heavy;Right;3;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;LessHealthy;S;C;Harvest;25	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,5)} u.train(Heavy,Right,3)} if(HasNumberOfUnits(Heavy,1)) then {for(Unit u){u.harvest(5)} for(Unit u){u.attack(LessHealthy)}} u.harvest(25)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;C;Build;Barracks;Right;25;S;C;Harvest;3;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Worker,Left,50) u.build(Barracks,Right,25) u.harvest(3) u.train(Light,EnemyDir,50)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Worker,Left,50) u.idle()} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Up;8	for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(6) u.moveAway() u.moveToUnit(Enemy,Farthest) u.train(Worker,EnemyDir,2) u.train(Light,Up,8)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;Train;Light;Down;20;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,5) u.harvest(50) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Strongest)} u.train(Light,Down,20) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;C;Train;Light;Down;20;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Left,5) u.harvest(4) if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Strongest)} for(Unit u){u.train(Worker,Left,5)} u.train(Light,Down,20) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;C;Train;Light;Up;5;S;C;Build;Barracks;Left;1;S;C;Train;Worker;Up;10;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Right;6;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(6) u.train(Light,Up,5)} u.build(Barracks,Left,1) u.train(Worker,Up,10)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Right,6)}} u.attack(LessHealthy)} u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Up;8;S;C;Train;Worker;Right;15	for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(5) u.idle() u.attack(MostHealthy) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Up,8)} u.train(Worker,Right,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;is_Type;Heavy;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Heavy;Down;15;S;C;Attack;Farthest;S;For_S;S;C;Train;Light;Right;1	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,4) u.harvest(100) if(u.is(Heavy)) then {u.attack(Closest)} u.moveToUnit(Ally,MostHealthy) u.train(Heavy,Down,15) u.attack(Farthest)} for(Unit u){u.train(Light,Right,1)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Right;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Left;7;S;For_S;S;C;Build;Barracks;Down;7	for(Unit u){u.train(Ranged,EnemyDir,50) u.harvest(4) u.attack(Strongest) for(Unit u){u.train(Worker,Right,5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Left,7)} for(Unit u){u.build(Barracks,Down,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Ranged;Left;8;S;For_S;S;C;Build;Barracks;Down;7	for(Unit u){u.harvest(4) u.attack(Strongest) for(Unit u){if(u.is(Worker)) then {if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Ranged,Left,8)} for(Unit u){u.build(Barracks,Down,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Right;5;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Ranged;Left;8;S;For_S;S;C;Build;Barracks;Down;7	for(Unit u){u.harvest(4) u.attack(Strongest) for(Unit u){u.train(Worker,Right,5)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Ranged,Left,8)} for(Unit u){u.build(Barracks,Down,7)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;Up;6;S;For_S;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.train(Light,Right,5) u.harvest(5) u.idle() u.build(Barracks,Left,8)} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(MostHealthy)} u.train(Light,Up,6) for(Unit u){u.train(Worker,EnemyDir,15)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.train(Worker,Right,6) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(1)}} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.idle()} u.train(Worker,Down,8) u.harvest(1) u.attack(LessHealthy) for(Unit u){if(OpponentHasNumberOfUnits(Worker,5)) then {u.harvest(4)}} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;7;S;S_S;S;C;MoveAway;S;C;Idle;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;Right;7;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.train(Ranged,Left,7)} u.moveAway() u.idle() for(Unit u){u.harvest(6)} u.build(Barracks,Right,7) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;4	for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Farthest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;50;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;MostHealthy;S;Empty	for(Unit u){for(Unit u){u.idle() u.train(Ranged,Up,50)} for(Unit u){u.build(Barracks,Left,15) u.harvest(100) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Ally,Closest)} if(u.canAttack()) then {u.attack(MostHealthy)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Light;Down;3;S;C;Train;Ranged;Up;50;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){u.harvest(9) u.train(Light,Down,3) u.train(Ranged,Up,50) if(u.canHarvest()) then {for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.build(Barracks,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;9;S;For_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Down,7)} for(Unit u){u.train(Light,Up,9) for(Unit u){u.harvest(20)} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Left;2;S;S_S;S;C;Build;Barracks;Left;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;8;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Light;Down;9	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.idle() u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Ranged,Left,2)} u.build(Barracks,Left,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8) for(Unit u){for(Unit u){u.attack(MostHealthy)} u.train(Light,Down,9)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;25;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Light;Down;3;S;C;Train;Ranged;Up;50;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.moveAway()}}} else { e} u.harvest(9) u.train(Light,Down,3) u.train(Ranged,Up,50) if(u.canHarvest()) then {u.attack(MostHealthy) for(Unit u){u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.build(Barracks,Left,5)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;3;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;6;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Up,3) u.harvest(20)} for(Unit u){for(Unit u){u.train(Light,Right,6) u.train(Ranged,Up,50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;20;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,20)} for(Unit u){for(Unit u){u.train(Heavy,Right,6)} u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Worker;Left;7;S;S_S;S;C;Harvest;1;S;S_S;S;C;Build;Base;EnemyDir;15;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Left,7)} u.harvest(1) u.build(Base,EnemyDir,15) u.train(Worker,Up,5) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Harvest;8;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway;S;C;Train;Worker;Right;20;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(7) u.harvest(8)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()} u.train(Worker,Right,20) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;10;S;C;Attack;Weakest	for(Unit u){u.harvest(5) u.train(Worker,Right,10) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Idle;S;C;Train;Worker;Down;7	for(Unit u){u.harvest(1) u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle()} u.train(Worker,Down,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.harvest(10) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} u.train(Worker,Down,9) u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Right;25;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Right,25) for(Unit u){u.idle() u.harvest(2) u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Train;Worker;Left;50	for(Unit u){u.idle() u.harvest(7)} for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveAway() u.train(Worker,Left,50)}
S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;4;S;Empty	for(Unit u){u.train(Worker,Up,100) u.attack(Closest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(2) if(u.isBuilder()) then {u.harvest(4)} else { e}}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;50;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Harvest;15;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.idle() u.build(Barracks,Right,50)} else { e}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.harvest(15) u.train(Ranged,EnemyDir,7)}} u.moveAway() u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Right;50;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Harvest;8;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() if(u.canAttack()) then {u.build(Barracks,Right,50)} else { e}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.harvest(8) u.train(Ranged,EnemyDir,7)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;C;Harvest;15;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Left,5) u.harvest(15) u.idle() for(Unit u){u.train(Heavy,Up,50)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Heavy;Right;4;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,50) u.harvest(7) u.train(Heavy,Right,4) u.attack(LessHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveAway;S;C;Build;Barracks;Up;4;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;20;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;Up;50;S;C;Attack;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveAway()} else { u.build(Barracks,Up,4)} if(u.isBuilder()) then {u.harvest(20) for(Unit u){if(HaveQtdUnitsAttacking(0)) then {u.idle() u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Strongest)}}} u.train(Heavy,Up,50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Heavy;Right;4;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Left,50) u.harvest(7) u.train(Heavy,Right,4) u.attack(LessHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;C;Train;Heavy;Right;6	for(Unit u){u.harvest(8) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.train(Heavy,Right,6)}}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;6;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;C;Train;Ranged;Right;8;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;5	for(Unit u){u.moveAway() for(Unit u){u.idle() u.train(Heavy,Down,6) u.build(Barracks,Right,50)} u.train(Ranged,Right,8) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5)}}
S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;15;S;C;Train;Worker;Up;5;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;C;Train;Heavy;Up;20;S;S_S;S;C;Build;Base;Up;2;S;S_S;S;C;MoveAway;S;C;Build;Barracks;Down;5	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){u.harvest(3)} for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(15) u.train(Worker,Up,5)} else { e} u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.train(Heavy,Up,20)}} else { u.build(Base,Up,2) u.moveAway() u.build(Barracks,Down,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;8;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,1) u.train(Heavy,Down,8) u.harvest(4) u.attack(Closest)}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Idle	for(Unit u){u.harvest(5) u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Light,EnemyDir,25)} if(u.canAttack()) then {for(Unit u){u.attack(Strongest)}} for(Unit u){u.build(Barracks,Left,1) u.idle()}}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Heavy;Right;9;S;C;Build;Barracks;Left;1	for(Unit u){u.harvest(5) u.idle() u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Right,9) u.build(Barracks,Left,1)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;C;Build;Barracks;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,25) u.build(Barracks,Up,20) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.harvest(3)} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Harvest;9;S;For_S;S;C;Train;Light;Down;20;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Left,9) for(Unit u){u.idle() u.build(Barracks,Up,25) u.harvest(9) for(Unit u){u.train(Light,Down,20)}} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Right;20;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Left,9) for(Unit u){u.idle() u.build(Barracks,Up,25) u.harvest(4) for(Unit u){u.train(Light,Right,20)}} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Left;20;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Left,9) for(Unit u){u.idle() u.build(Barracks,Up,25) u.harvest(4) for(Unit u){u.train(Light,Left,20)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Left;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Left,3) for(Unit u){u.idle() u.build(Barracks,EnemyDir,25) u.harvest(4) for(Unit u){u.train(Light,Left,20)}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;C;Attack;Farthest;S;For_S;S;C;Idle	for(Unit u){u.harvest(25) u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,3) for(Unit u){u.build(Barracks,Left,10)} u.attack(Farthest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;C;Train;Light;EnemyDir;3;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;C;Attack;Farthest	for(Unit u){u.harvest(25) u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.train(Heavy,Up,3) for(Unit u){u.build(Barracks,Left,10)} u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Left;1;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Down;25;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Left,1)} u.idle() u.moveToUnit(Ally,Weakest) u.train(Light,Down,25) for(Unit u){u.harvest(4) u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;9;S;For_S;S;C;Harvest;9	for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.idle() u.moveToUnit(Ally,Weakest) u.train(Light,Left,9) for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveAway() u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,20)}}} u.attack(Closest) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { u.harvest(25)}}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveAway() u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,20)}}} u.attack(Closest) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.train(Ranged,EnemyDir,1)} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { u.harvest(25)}}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;1;S;C;Attack;Closest;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveAway()} else { for(Unit u){u.idle()}} u.moveAway() u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,1) u.attack(Closest) if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.train(Ranged,EnemyDir,1)} if(u.isBuilder()) then {for(Unit u){u.harvest(25)}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Up;1;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;C;Idle;S;C;Train;Light;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveAway()} else { for(Unit u){u.idle()}} u.moveAway() u.moveToUnit(Enemy,Strongest) u.train(Heavy,Up,1) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,1) u.idle()} u.train(Light,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;Empty;S;C;Attack;Farthest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;Empty;S;S_S;S;C;Train;Heavy;Up;10;S;C;Train;Ranged;Up;5	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {e} else { u.attack(Farthest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Ranged,EnemyDir,1)} u.moveToUnit(Enemy,MostHealthy) if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { e}}} u.train(Heavy,Up,10) u.train(Ranged,Up,5)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Harvest;15;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Heavy;Left;15;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(15)} u.build(Barracks,EnemyDir,9) u.train(Heavy,Left,15) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Train;Heavy;Down;50;S;C;Harvest;50;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;Empty	for(Unit u){if(OpponentHasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,Left,5) u.build(Barracks,Left,25) u.train(Heavy,Down,50) u.harvest(50)} if(u.canAttack()) then {u.attack(LessHealthy)} else { e}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Train;Heavy;Down;50;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;Harvest;50;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;Empty	for(Unit u){if(OpponentHasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,Left,5) u.build(Barracks,Left,25) u.train(Heavy,Down,50) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} u.harvest(50)} if(u.canAttack()) then {u.attack(LessHealthy)} else { e}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Up;8	for(Unit u){u.idle() u.harvest(1) u.attack(LessHealthy) if(u.canAttack()) then {e} else { u.train(Worker,Up,8)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Build;Barracks;Up;8;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,Left,10)} u.build(Barracks,Up,8) u.idle()} u.train(Worker,EnemyDir,100) for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;C;Harvest;8;S;C;Train;Worker;Up;8;S;C;Build;Barracks;Down;15;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.train(Heavy,Up,15)} u.harvest(8)} else { u.train(Worker,Up,8)} u.build(Barracks,Down,15) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;C;Harvest;8;S;C;Train;Worker;Up;8;S;C;Build;Barracks;Down;15;S;S_S;S;C;Train;Ranged;Down;9;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.train(Heavy,Up,15)} u.harvest(8)} else { u.train(Worker,Up,8)} u.build(Barracks,Down,15) u.train(Ranged,Down,9) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;C;Harvest;8;S;C;Train;Worker;Up;8;S;C;Build;Barracks;Down;15;S;S_S;S;C;Train;Heavy;Right;15;S;S_S;S;For_S;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(3)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.train(Heavy,Up,15)} u.harvest(8)} else { u.train(Worker,Up,8)} u.build(Barracks,Down,15) u.train(Heavy,Right,15) for(Unit u){u.harvest(5)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveAway;S;C;Train;Light;Down;5	for(Unit u){for(Unit u){u.build(Barracks,Down,2)} u.harvest(3) u.idle() u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.train(Light,Down,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;8;S;Empty;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Down,5) u.harvest(20) u.train(Light,EnemyDir,25) u.attack(MostHealthy) for(Unit u){u.idle()} if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,Farthest) if(HaveQtdUnitsAttacking(8)) then {e} else { u.train(Worker,Right,5)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;8;S;Empty;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Down,5) u.train(Light,EnemyDir,25) u.harvest(8) if(u.canAttack()) then {u.moveAway() u.attack(Strongest)} for(Unit u){u.idle()} if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,Farthest) if(HaveQtdUnitsAttacking(8)) then {e} else { u.train(Worker,Right,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Farthest;S;C;Attack;Strongest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Farthest)} else { u.attack(Strongest)} u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;S_S;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Strongest)} u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} u.moveAway() for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;C;Attack;Strongest;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.attack(Strongest)} u.attack(Closest) u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.attack(Strongest) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Closest)}} u.attack(Closest) u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Light;EnemyDir;10;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,EnemyDir,10) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(50)) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.moveToUnit(Ally,LessHealthy) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Closest)}} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {if(u.is(Barracks)) then {u.moveToUnit(Enemy,LessHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Light;EnemyDir;10;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,EnemyDir,10) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(50)) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.moveToUnit(Ally,LessHealthy) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Closest)}} u.attack(Closest) u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Weakest)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Down;6;S;For_S;S;C;Idle;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Strongest) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Farthest)} else { u.moveToUnit(Ally,Closest)}} u.attack(Closest) u.train(Ranged,EnemyDir,3) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,6)}} for(Unit u){u.idle()} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Strongest)} u.moveAway() u.moveToUnit(Ally,LessHealthy) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,20)}}} u.attack(Closest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Down,6)}} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { u.harvest(25)}}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;25;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Up;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Attack;Strongest;S;C;Harvest;25;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Strongest)} u.train(Ranged,Up,50) u.moveToUnit(Ally,LessHealthy) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,20)}}} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {u.attack(Strongest)} else { u.harvest(25)}}} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Base,Down,6) u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} for(Unit u){u.train(Worker,Left,4) for(Unit u){u.train(Heavy,Left,2)} u.idle()} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.harvest(9)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.attack(MostHealthy)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.attack(Weakest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest)}}}} for(Unit u){u.train(Worker,Left,4) for(Unit u){u.train(Heavy,Left,2)} u.idle()} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.harvest(1)} for(Unit u){u.harvest(4) u.attack(MostHealthy)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;6;S;S_S;S;S_S;S;C;Build;Barracks;Down;15;S;For_S;S;C;Train;Worker;EnemyDir;20;S;C;Attack;Strongest	for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { u.attack(LessHealthy) for(Unit u){u.train(Light,Right,6)}} u.build(Barracks,Down,15) for(Unit u){u.train(Worker,EnemyDir,20)} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;5;S;S_S;S;C;Train;Ranged;Down;2;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Up,5) u.train(Worker,Left,50) u.harvest(6) u.train(Light,EnemyDir,4) u.attack(Closest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(2) u.idle()}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,5) u.train(Ranged,Down,2) u.moveToUnit(Ally,Farthest) for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;8;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;C;Train;Ranged;Down;9	for(Unit u){u.train(Worker,Left,2) u.harvest(7) u.train(Light,EnemyDir,4) u.attack(Closest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,9)}}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Down,8) for(Unit u){u.build(Barracks,EnemyDir,2)}} u.train(Ranged,Down,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Left;20;S;C;Harvest;1;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;6;S;C;Attack;Closest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,20)} u.harvest(1) u.train(Worker,Right,3)} for(Unit u){u.build(Barracks,Right,20) u.harvest(6) u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;20;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;2;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.canHarvest()) then {for(Unit u){if(HasLessNumberOfUnits(Barracks,20)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,Strongest)}}} for(Unit u){u.build(Barracks,Left,50) u.idle() u.harvest(8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveAway() u.attack(Closest) u.train(Worker,Up,2) u.train(Heavy,EnemyDir,50) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;20;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;2;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(LessHealthy) if(HasNumberOfUnits(Worker,5)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} if(u.canHarvest()) then {for(Unit u){if(HasLessNumberOfUnits(Barracks,20)) then {e} else { u.moveToUnit(Ally,Strongest)}}} for(Unit u){u.build(Barracks,Left,50) u.idle() u.harvest(8) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.attack(Closest) u.train(Worker,Up,2) u.train(Heavy,EnemyDir,50) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;20;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Right;4;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Left;3;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Left;10	for(Unit u){u.attack(LessHealthy) if(u.canHarvest()) then {for(Unit u){if(HasLessNumberOfUnits(Barracks,20)) then {e} else { u.moveToUnit(Ally,Strongest)}}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Right,4)} else { e} for(Unit u){u.build(Barracks,Left,50) u.idle() u.harvest(8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveAway() u.attack(Closest) u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Left,3)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Left,10)}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;20;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Right;4;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;2;S;C;Train;Heavy;Left;5	for(Unit u){u.attack(LessHealthy) if(u.canHarvest()) then {for(Unit u){if(HasLessNumberOfUnits(Barracks,20)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Ally,Strongest)}}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Right,4)} else { e} for(Unit u){u.build(Barracks,Left,50) u.idle() u.harvest(8) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,2)} u.train(Heavy,Left,5)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Up;3;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;3;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(25) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Up,3) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Left,50)} for(Unit u){u.train(Light,EnemyDir,4)} u.moveToUnit(Ally,Closest) u.train(Worker,Right,3) if(OpponentHasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Harvest;20;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Down;3;S;Empty;S;For_S;S;C;Idle;S;C;Train;Heavy;Down;100	for(Unit u){u.build(Barracks,Down,10) if(u.canAttack()) then {for(Unit u){u.moveAway() u.attack(Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { e} u.harvest(20)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Down,3)} else { e} for(Unit u){u.idle()} u.train(Heavy,Down,100)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;MoveAway;S;S_S;S;C;Train;Light;Down;6;S;C;Train;Worker;Up;3	for(Unit u){u.harvest(20) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Up,3) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,50)} u.moveAway() u.train(Light,Down,6) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;For_S;S;C;Build;Barracks;Right;15;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Left;2;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;2;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.harvest(15) for(Unit u){u.build(Barracks,Right,15)} u.attack(Strongest) u.train(Ranged,Left,2) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} u.train(Light,Left,2) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;1;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Harvest;10;S;C;Train;Heavy;Left;50;S;C;Train;Ranged;Left;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfUnits(Worker,1)) then {e} else { u.moveToUnit(Ally,Strongest)} u.idle() u.build(Barracks,Left,5) if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)} else { e} u.harvest(10) u.train(Heavy,Left,50) u.train(Ranged,Left,1) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;100;S;C;Train;Heavy;Left;50;S;S_S;S;C;Train;Worker;EnemyDir;2;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} else { u.harvest(100)} u.train(Heavy,Left,50) u.train(Worker,EnemyDir,2) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){u.attack(Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;6;S;Empty;S;S_S;S;C;Harvest;100;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;2;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,5) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} else { if(HasNumberOfUnits(Ranged,6)) then {e} else { u.harvest(100) u.train(Ranged,Up,7)}} u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,2) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){u.attack(Closest)}}}
S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(4)} for(Unit u){u.build(Barracks,Down,15) u.attack(Weakest) if(u.canHarvest()) then {for(Unit u){u.train(Worker,Left,100)}} else { for(Unit u){u.train(Heavy,EnemyDir,6)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Train;Heavy;Down;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Right;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;20	for(Unit u){u.harvest(25) u.train(Heavy,Down,1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Right,20)} u.attack(Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,EnemyDir,20)}}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;20	for(Unit u){u.harvest(10) for(Unit u){u.train(Ranged,EnemyDir,15) u.idle()} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,20)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;C;Harvest;7;S;S_S;S;C;Build;Barracks;Right;25;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Worker,Right,9)} u.idle() for(Unit u){u.train(Heavy,Down,9) u.harvest(7)} u.build(Barracks,Right,25) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;C;Harvest;7;S;S_S;S;C;Build;Barracks;Right;25;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Worker,Right,9)} u.idle() u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Down,9) u.harvest(7)} u.build(Barracks,Right,25) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Right;25;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Right,9)} u.idle() for(Unit u){u.train(Heavy,Down,9) u.harvest(4)} u.build(Barracks,Right,25) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;1;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Right;3;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Right;7	for(Unit u){for(Unit u){u.idle() u.train(Heavy,Right,1)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Closest) u.attack(Farthest) for(Unit u){u.train(Heavy,Up,7) u.build(Barracks,Right,3) u.moveToUnit(Ally,Farthest)} u.train(Worker,Right,7)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;50;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Right;7	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Strongest) u.harvest(7) for(Unit u){for(Unit u){u.train(Ranged,Right,50)} u.build(Barracks,Down,3)} u.train(Worker,Right,7)}
S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveAway;S;Empty;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Right;15	for(Unit u){u.train(Heavy,Down,3) u.train(Worker,Left,9) u.idle() u.harvest(8) for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.canAttack()) then {u.moveAway()} else { e}} u.moveAway() u.build(Barracks,Up,10) u.attack(LessHealthy) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(10) u.attack(Weakest) for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Right,15)}}}}}}}
S;For_S;S;S_S;S;C;Train;Ranged;Right;100;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;Harvest;50;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Right,100) for(Unit u){u.build(Barracks,EnemyDir,25) u.train(Worker,EnemyDir,5)} u.harvest(50) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;C;Train;Ranged;Left;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Harvest;25;S;For_S;S;C;Idle;S;Empty;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Harvest;25;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,3)}} u.idle() u.harvest(1) u.train(Ranged,Left,50) if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.harvest(25) for(Unit u){u.idle()}} else { e} if(u.HasUnitInOpponentRange()) then {u.attack(Closest)}} u.build(Barracks,Left,50) u.harvest(25) u.attack(Weakest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Ranged;Left;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.train(Light,Left,20)}} u.train(Ranged,Left,50) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}} u.build(Barracks,Left,2) u.harvest(25) u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Light;Left;20;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Light,Left,20)}} if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}} u.build(Barracks,Left,2) u.harvest(25) u.attack(Weakest)}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Enemy;Strongest	if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle() u.build(Barracks,Left,5)} for(Unit u){u.harvest(3) u.train(Light,Left,7) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;0;S;C;Train;Heavy;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Down;25;S;C;Attack;MostHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(0)) then {u.train(Heavy,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.attack(Strongest)}}} for(Unit u){u.idle()} for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,25)}} u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;S_S;S;C;Harvest;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Right;100	for(Unit u){u.build(Barracks,Left,3) u.harvest(15) u.attack(Weakest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Right,100)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Train;Light;Left;20;S;S_S;S;C;Train;Light;Left;7;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;25;S;C;Attack;Weakest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.train(Light,Left,20)}} u.train(Light,Left,7) u.idle()} u.build(Barracks,Left,2) u.harvest(25) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Light;Down;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;MoveAway;S;Empty;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.train(Light,Left,20)}} u.train(Light,Down,9) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy)}} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveAway()}} else { e} u.harvest(4) u.attack(LessHealthy) u.train(Worker,Left,20) for(Unit u){u.build(Barracks,Down,4)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Ranged;Left;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;1;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.train(Light,Left,20)}} u.train(Ranged,Left,50) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest) u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Ranged;Left;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;15;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;1;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.train(Light,Left,20)}} u.train(Ranged,Left,50) if(u.HasUnitInOpponentRange()) then {u.attack(Strongest) if(HasNumberOfUnits(Base,15)) then {u.moveToUnit(Enemy,Weakest)} else { e}}} for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;20;S;C;Train;Ranged;Left;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;1;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.idle() u.train(Light,Left,20)}} u.train(Ranged,Left,50) if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;20;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;1;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.idle() u.train(Light,Left,20)}} if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Attack;Closest;S;Empty;S;C;Build;Barracks;Left;1;S;For_S;S;C;Train;Light;EnemyDir;20;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.attack(Closest)}} else { e} u.build(Barracks,Left,1) for(Unit u){u.train(Light,EnemyDir,20)} u.harvest(8) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Left;9;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,3) u.harvest(20) u.attack(LessHealthy) u.train(Light,Left,9) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;9;S;For_S;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,3) u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.train(Light,Left,9) for(Unit u){for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Light;Right;15;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;4;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;15;S;If_B_then_S;B;HasLessNumberOfUnits;Light;0;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(5) if(u.canHarvest()) then {for(Unit u){u.train(Light,Right,15)}}} for(Unit u){u.build(Barracks,Right,4)} u.attack(Strongest) u.moveToUnit(Enemy,Closest) u.train(Worker,Left,15) if(HasLessNumberOfUnits(Light,0)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Base;Up;3;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;1;S;C;Train;Ranged;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;Harvest;20	for(Unit u){u.harvest(5) u.build(Base,Up,3) for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,1)} u.train(Ranged,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2) u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.harvest(20)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Base;Up;3;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;1;S;C;Train;Ranged;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;For_S;S;C;Harvest;50	for(Unit u){u.harvest(5) u.build(Base,Up,3) for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,1)} u.train(Ranged,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2) u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){u.harvest(50)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;Train;Heavy;Up;1;S;C;Train;Ranged;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Right;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Base;Up;15;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;For_S;S;C;Harvest;50	for(Unit u){u.harvest(5) for(Unit u){if(u.canHarvest()) then {u.harvest(4)} else { if(HasNumberOfUnits(Ranged,2)) then {u.train(Heavy,Up,1)} u.train(Ranged,Up,3)}} u.train(Ranged,EnemyDir,8) u.train(Worker,Down,7) u.build(Barracks,Right,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Base,Up,15)}} u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){u.harvest(50)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Up,100) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Idle;S;C;Build;Base;EnemyDir;3;S;C;Harvest;20;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.idle() u.train(Worker,Right,3) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {if(u.isBuilder()) then {u.idle() u.build(Base,EnemyDir,3)}} u.harvest(20)} for(Unit u){u.train(Worker,Right,6) u.moveToUnit(Enemy,Farthest)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,EnemyDir,50)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;10;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,10) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(7)} for(Unit u){u.idle()} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;4;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,Closest) for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;2;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;Train;Worker;Up;5;S;C;Build;Barracks;Down;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Train;Ranged;Right;25;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){if(HasNumberOfUnits(Heavy,2)) then {u.moveToUnit(Enemy,Farthest)} if(u.is(Base)) then {u.train(Worker,Up,5)} else { u.build(Barracks,Down,9)} u.harvest(100) u.train(Ranged,Right,25) u.attack(LessHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;1;S;C;Train;Heavy;Right;6	for(Unit u){for(Unit u){u.build(Barracks,Up,6) if(u.HasUnitInOpponentRange()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} u.harvest(50) u.attack(Weakest) u.train(Worker,Left,1) u.train(Heavy,Right,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;8;S;C;Train;Light;Up;8;S;C;Harvest;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;1	for(Unit u){for(Unit u){u.build(Barracks,Up,6) u.idle() for(Unit u){u.train(Heavy,Down,8)}} u.train(Light,Up,8) u.harvest(50) u.attack(Weakest) u.train(Worker,Left,1)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;100;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,2)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} else { e} u.attack(Closest) for(Unit u){for(Unit u){u.train(Light,Up,25) u.harvest(100)} u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;S_S;S;C;Harvest;6;S;C;Train;Worker;Right;3;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,2)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} else { e} u.attack(Closest) for(Unit u){for(Unit u){u.train(Light,Up,25) u.harvest(6) u.train(Worker,Right,3)} u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;4;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,9) u.harvest(2) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Left,4) if(u.isBuilder()) then {u.build(Barracks,Down,4)}} u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;For_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;4;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,9) u.harvest(2) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Left,8)} for(Unit u){u.harvest(10)}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Left,4) if(u.isBuilder()) then {u.build(Barracks,Down,4)}} u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;8	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,9) u.harvest(2) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Left,4) if(u.isBuilder()) then {u.build(Barracks,Down,4)}} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) u.harvest(8)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;8	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,9) u.harvest(2) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Left,4) if(u.isBuilder()) then {u.build(Barracks,Down,4)}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) u.harvest(8)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Build;Barracks;Right;15;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Up;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.build(Barracks,Right,15)} u.harvest(5) u.attack(MostHealthy) for(Unit u){u.train(Worker,Right,2)} u.train(Light,Up,25) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Build;Barracks;Right;15;S;S_S;S;C;Harvest;5;S;C;Train;Ranged;Left;7;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;S_S;S;C;Train;Light;Up;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;15;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.build(Barracks,Right,15)} u.harvest(5) u.train(Ranged,Left,7) u.moveAway() u.attack(MostHealthy) for(Unit u){u.train(Worker,Right,2)} u.train(Light,Up,25) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.train(Worker,Up,15) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Build;Barracks;Right;15;S;S_S;S;C;Harvest;5;S;C;Train;Ranged;Left;7;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;15;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.build(Barracks,Right,15)} u.harvest(5) u.train(Ranged,Left,7) u.attack(MostHealthy) for(Unit u){u.train(Worker,Right,2)} for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.train(Worker,Up,15) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Worker;Down;4;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Build;Barracks;Up;50;S;S_S;S;For_S;S;C;Train;Worker;Down;9;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,EnemyDir,6) u.harvest(8) u.train(Worker,Down,4) u.idle() u.moveAway() u.attack(Strongest) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,Up,50)} for(Unit u){u.train(Worker,Down,9)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;8;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;2;S;C;Harvest;3;S;C;Idle;S;If_B_then_S;B;is_Type;Heavy;S;C;Attack;Closest	for(Unit u){for(Unit u){u.build(Barracks,Down,8)} u.train(Heavy,Up,2) u.harvest(3) u.idle() if(u.is(Heavy)) then {u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Down;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;6;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;C;MoveAway;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Up,4) for(Unit u){u.harvest(4) for(Unit u){u.idle()} for(Unit u){u.harvest(1)} u.train(Worker,Down,25) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)}} if(u.isBuilder()) then {u.harvest(6)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} u.moveAway() u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Train;Heavy;Down;50	for(Unit u){u.idle() u.harvest(4)} for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.train(Worker,Left,10) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Up,6) u.train(Heavy,Down,50)}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;S_S;S;C;Build;Barracks;Up;6;S;C;Train;Heavy;Down;50	for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.train(Worker,Up,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,EnemyDir,8) u.build(Barracks,Up,6) u.train(Heavy,Down,50)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,9) u.harvest(2) u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Light,Left,4) if(u.isBuilder()) then {u.build(Barracks,Down,4)}} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;C;Train;Light;Left;7;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;7;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,20) u.train(Light,Left,7)} for(Unit u){u.harvest(2) u.build(Barracks,Right,100) if(HasLessNumberOfUnits(Barracks,7)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Ally,Strongest)} u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;5;S;Empty;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Train;Light;Up;100;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.build(Barracks,Down,4) if(u.is(Worker)) then {u.harvest(5)} else { e} u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.train(Light,Up,100) u.moveToUnit(Ally,Weakest)} else { u.train(Heavy,Left,4)} u.train(Worker,Left,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;5;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.build(Barracks,Down,4) if(u.is(Worker)) then {u.harvest(5)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.train(Heavy,Left,4)} u.train(Worker,Left,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;100;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;C;Harvest;4	for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,100) u.attack(MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Left,1)} for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;5;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Up;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;10;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Right;15	for(Unit u){u.idle() for(Unit u){u.idle()} u.build(Barracks,Down,4) if(u.is(Worker)) then {u.harvest(5)} else { e} u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.attack(Strongest)} u.train(Light,Up,100) u.moveToUnit(Enemy,LessHealthy)} else { u.train(Heavy,Left,10)} u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Up;5;S;Empty;S;C;Harvest;2;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,5)} else { e} u.harvest(2) u.attack(Closest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Up;50;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;100;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;8;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Weakest;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Down;20	for(Unit u){for(Unit u){u.harvest(3)} u.train(Ranged,Up,50) u.idle() u.build(Barracks,Left,100) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(8)} if(u.isBuilder()) then {u.attack(Weakest)} else { u.moveAway()} u.attack(Strongest) if(u.is(Barracks)) then {u.moveToUnit(Ally,Weakest)} else { u.train(Worker,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Harvest;5;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Train;Light;Up;100;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Closest)} else { u.train(Light,Down,4)} u.build(Barracks,Down,4) if(u.is(Worker)) then {u.harvest(5)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.train(Light,Up,100)} else { u.train(Heavy,Left,4)} u.train(Worker,Left,5) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;4;S;C;Build;Barracks;Left;10;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Train;Worker;EnemyDir;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,4) u.build(Barracks,Left,10) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(4) if(u.canAttack()) then {for(Unit u){u.train(Worker,EnemyDir,7)}} else { u.train(Worker,Down,5)}} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;S_S;S;C;Harvest;25;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Light;EnemyDir;6	for(Unit u){for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.harvest(25) u.idle()} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Farthest) u.train(Light,EnemyDir,6)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;1;S;C;Train;Light;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,2)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,1) u.train(Light,EnemyDir,10)} for(Unit u){for(Unit u){u.harvest(6)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Heavy;Down;6;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Attack;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Light;Right;7;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.harvest(7) if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,Down,6)} else { for(Unit u){u.train(Worker,EnemyDir,2)}} u.attack(Closest) if(HaveQtdUnitsAttacking(2)) then {u.train(Light,Right,7)} for(Unit u){u.build(Barracks,Down,4)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Train;Light;Down;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Harvest;20;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,1)} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Down,100) u.moveToUnit(Enemy,MostHealthy)}} if(u.canAttack()) then {e} else { for(Unit u){u.harvest(20)}} for(Unit u){for(Unit u){u.idle()}} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,EnemyDir,5)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.train(Light,Left,2) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;8;S;C;Train;Light;Down;50;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Build;Barracks;Up;20;S;For_S;S;If_B_then_S;B;is_Type;Light;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,20)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,8)} u.train(Light,Down,50)} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.harvest(2) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy) if(HasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.build(Barracks,Up,20) for(Unit u){if(u.is(Light)) then {u.idle() u.attack(LessHealthy)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()}}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Light;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Idle;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,20)} for(Unit u){u.train(Light,EnemyDir,9)}} for(Unit u){u.harvest(25) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.idle() for(Unit u){u.attack(Closest)}} if(OpponentHasNumberOfUnits(Barracks,50)) then {if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Train;Heavy;Right;15;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.build(Barracks,Right,4) for(Unit u){u.idle()} u.harvest(5) if(u.canHarvest()) then {e} else { u.train(Heavy,Right,15) u.attack(LessHealthy)} u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;C;Train;Heavy;EnemyDir;2;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Train;Light;Down;3;S;C;Train;Worker;Right;6	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.attack(Weakest)} for(Unit u){u.idle() u.harvest(4) u.train(Heavy,EnemyDir,2)} for(Unit u){u.build(Barracks,Up,2)} u.train(Light,Down,3) u.train(Worker,Right,6)}
S;S_S;S;For_S;S;C;Train;Ranged;Left;15;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;3;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Ranged,Left,15)} for(Unit u){u.build(Barracks,Down,50) u.idle() u.attack(Closest) u.train(Worker,EnemyDir,3) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;Right;2;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;C;MoveAway;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;7	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Light,Right,2) u.build(Barracks,EnemyDir,5)} if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.harvest(4)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} u.moveAway()}} for(Unit u){u.train(Worker,Right,4)} if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Strongest) u.attack(Farthest) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,7)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;If_B_then_S_else_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;Harvest;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;C;Train;Light;Up;100;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Up;4;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.build(Barracks,Down,4) if(u.is(Ranged)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Light,Up,100) u.moveToUnit(Ally,Weakest)} else { u.train(Heavy,Up,4)} u.train(Worker,Left,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Light;EnemyDir;7;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Right;100;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.harvest(25)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Light,EnemyDir,7)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,EnemyDir,2) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Weakest) u.train(Light,Left,2) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.moveToUnit(Ally,Weakest)} u.train(Heavy,Right,100) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Up;2;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;100;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;EnemyDir;15;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}} u.attack(Strongest) u.train(Heavy,Right,15) u.train(Worker,Up,2) for(Unit u){for(Unit u){u.build(Barracks,Down,1) u.harvest(100)} u.attack(Strongest)} for(Unit u){u.train(Light,EnemyDir,15)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Heavy;Up;8;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Harvest;20;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Up,8)} for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,1)} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Strongest)}} if(u.canAttack()) then {e} else { for(Unit u){u.harvest(20)}} for(Unit u){for(Unit u){u.idle()}} u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Closest)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;100;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(LessHealthy)} u.train(Worker,Up,100) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;For_S;S;For_S;S;C;Train;Ranged;Up;2;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;C;Train;Heavy;Up;100	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){for(Unit u){u.train(Ranged,Up,2)}}}} else { u.train(Worker,Left,5)} u.harvest(4) u.moveToUnit(Enemy,MostHealthy) u.moveAway() for(Unit u){u.build(Barracks,Left,3) u.idle()} u.train(Heavy,Up,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;Right;2;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;C;MoveAway;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;C;Train;Ranged;Down;7	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,EnemyDir,2) for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Light,Right,2) u.build(Barracks,EnemyDir,5)} if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.harvest(4)} if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.moveAway()}} for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Strongest) u.attack(Weakest) u.train(Ranged,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Light;Right;3;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Harvest;8;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Ranged;EnemyDir;10	for(Unit u){u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)} if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Left,50)} u.train(Heavy,Right,100) for(Unit u){u.train(Light,Right,3)} u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(8)} u.moveToUnit(Ally,MostHealthy) if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Ranged,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;6;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Harvest;8;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Ranged;EnemyDir;10	for(Unit u){u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)} if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest) u.train(Worker,Left,6)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Left,50)} for(Unit u){u.train(Light,Right,3)} u.train(Heavy,EnemyDir,2) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(8)} u.moveToUnit(Ally,MostHealthy) if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Ranged,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;5;S;S_S;S;C;Train;Worker;Left;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;25;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(4) u.build(Barracks,Right,5)} u.train(Worker,Left,8) for(Unit u){u.idle()} u.train(Heavy,Down,25) u.attack(Closest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Closest;S;C;Train;Heavy;Up;25;S;S_S;S;C;Train;Light;Up;10;S;S_S;S;C;Train;Worker;Down;2;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Down;4;S;C;Harvest;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Left;15	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.attack(Closest)} u.train(Heavy,Up,25)}} u.train(Light,Up,10) u.train(Worker,Down,2) if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,4) u.harvest(1) u.moveAway() u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,15)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Train;Light;Right;2;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;C;MoveAway;S;S_S;S;C;Train;Light;Left;7;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;MoveAway;S;C;Attack;Weakest;S;C;Train;Ranged;Down;7	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,EnemyDir,7) u.train(Light,Right,2) u.build(Barracks,EnemyDir,5)} if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.harvest(4)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){for(Unit u){u.train(Worker,Down,7)} u.moveAway()}} u.train(Light,Left,7) for(Unit u){u.train(Worker,Right,4)} if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest) u.harvest(25)} u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Barracks,1)) then {u.moveAway()} u.attack(Weakest) u.train(Ranged,Down,7)}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;8;S;C;Train;Light;Down;50;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;If_B_then_S;B;HasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;C;Harvest;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;is_Type;Light;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,20)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,8)} u.train(Light,Down,50)} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,EnemyDir,3) if(HasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.harvest(2) u.attack(Closest) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.is(Light)) then {if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.attack(LessHealthy)}}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()}}}
S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;If_B_then_S;B;HasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Ranged;Left;20;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,20)} for(Unit u){u.build(Barracks,EnemyDir,3) if(HasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Down,5) u.harvest(2) u.train(Ranged,Left,20) u.attack(Closest) u.moveToUnit(Ally,Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()}}}
S;S_S;S;For_S;S;C;Train;Ranged;Left;15;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Attack;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;7;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Train;Worker;EnemyDir;3;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Ranged,Left,15)} for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.attack(LessHealthy)} u.moveToUnit(Ally,Farthest) u.attack(Weakest) if(OpponentHasNumberOfUnits(Ranged,7)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} u.train(Worker,EnemyDir,3) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;20;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Heavy;Right;100	for(Unit u){u.idle() u.train(Worker,Up,3)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Left,50)} u.train(Heavy,EnemyDir,2) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(20)} u.train(Light,Left,2) if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Heavy,Right,100)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;20;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Train;Heavy;Right;100	for(Unit u){u.idle() u.train(Worker,Up,3)} for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,1)} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Closest)} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Base,Up,10)} u.train(Heavy,EnemyDir,2) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(20)} u.train(Light,Left,2) if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.train(Heavy,Right,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Right;7;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;Left;2;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;20;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.harvest(2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Right,7)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.attack(MostHealthy)} u.train(Heavy,Left,2) u.moveToUnit(Ally,Farthest)}} else { e} if(u.HasUnitInOpponentRange()) then {u.train(Ranged,Right,5) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(2)} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Ally,Weakest) u.train(Worker,Up,8)} else { for(Unit u){u.build(Barracks,Down,2)} u.attack(MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Ranged,20)) then {u.moveToUnit(Ally,Weakest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.harvest(1) u.attack(LessHealthy)}} for(Unit u){if(HasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;50;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Ranged;Left;5;S;C;Harvest;15;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.train(Ranged,Left,50) u.idle() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.build(Barracks,EnemyDir,6)} else { u.train(Ranged,Left,5)}} u.harvest(15) u.attack(Farthest) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Train;Worker;Right;6;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){u.train(Worker,Right,6)} if(u.canAttack()) then {u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;100;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;Empty;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,Left,50)} u.train(Heavy,Right,100) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8)} u.train(Light,Left,2) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { e}} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;100;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;Empty;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} u.train(Heavy,Right,100) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Closest) u.train(Light,Left,2) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { e}} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;6;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;100;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Light;Left;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Light,Right,1) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest) u.train(Worker,Left,6)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)} u.train(Heavy,Right,100) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Closest) u.train(Light,Left,2) if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Harvest;6;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Heavy;Left;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Left,15) u.harvest(6) u.attack(Closest) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,5) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;10;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;6;S;For_S;S;C;Harvest;6;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Left;9	for(Unit u){u.train(Ranged,Up,10)} for(Unit u){u.build(Barracks,Up,6) for(Unit u){u.harvest(6)} u.attack(MostHealthy) for(Unit u){u.idle()}} for(Unit u){u.train(Worker,Left,9)}
S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;10;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;6;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;6;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Left;9	for(Unit u){u.train(Ranged,Up,10)} for(Unit u){u.build(Barracks,Up,6) if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(6)} for(Unit u){u.idle()} u.attack(MostHealthy)} for(Unit u){u.train(Worker,Left,9)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Down;50	for(Unit u){u.build(Barracks,Down,5)} for(Unit u){u.harvest(4) u.train(Worker,Down,5)} for(Unit u){u.attack(Strongest) u.train(Light,Down,50)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;9;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Left,9) u.build(Barracks,Left,1)} for(Unit u){u.harvest(9)} u.idle() u.attack(Weakest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Harvest;8;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(8) u.train(Heavy,EnemyDir,25) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;EnemyDir;25;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;2	for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()}} u.build(Barracks,EnemyDir,25) u.harvest(8) u.train(Heavy,EnemyDir,25) u.attack(Strongest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;Train;Heavy;Left;8;S;For_S;S;C;Build;Barracks;Right;4	for(Unit u){u.train(Worker,Right,2) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(1)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(9) u.attack(Closest) u.train(Heavy,Left,8) for(Unit u){u.build(Barracks,Right,4)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Harvest;100;S;For_S;S;C;Attack;Strongest;S;C;Build;Barracks;Left;10;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;Down;10	for(Unit u){u.harvest(2) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(100) for(Unit u){u.attack(Strongest)}} u.build(Barracks,Left,10) u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Up,3) for(Unit u){u.train(Light,Down,10)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;2;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Down;9;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;3;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;4	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,2)} else { e} u.train(Light,Right,5) u.moveToUnit(Ally,Strongest) u.train(Light,Down,9) u.attack(Strongest) u.train(Worker,EnemyDir,3) if(u.canAttack()) then {for(Unit u){u.idle()} for(Unit u){u.harvest(4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;2;S;Empty;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;3;S;C;Train;Light;Right;4;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,2)} else { e} u.idle() u.attack(MostHealthy) u.train(Worker,EnemyDir,3) u.train(Light,Right,4) if(u.canAttack()) then {for(Unit u){u.harvest(4) for(Unit u){u.train(Heavy,Right,20)}}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;2;S;Empty;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;3;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Train;Heavy;Right;20;S;S_S;S;C;Train;Ranged;Down;8;S;C;Idle	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,2)} else { e} u.idle() u.attack(MostHealthy) u.train(Worker,EnemyDir,3) if(u.canAttack()) then {for(Unit u){u.harvest(6) for(Unit u){u.train(Heavy,Right,20) u.train(Ranged,Down,8) u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;2;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;3;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;S_S;S;C;Train;Ranged;Down;8;S;C;Build;Barracks;EnemyDir;10	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,2)} else { e} u.idle() u.attack(MostHealthy) u.train(Ranged,Left,4) for(Unit u){u.idle()} u.train(Worker,EnemyDir,3) if(u.canAttack()) then {for(Unit u){u.harvest(2) for(Unit u){u.train(Heavy,Right,2) u.train(Ranged,Down,8) u.build(Barracks,EnemyDir,10)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,15)} for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;C;Harvest;8;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;Left;20;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Up;4	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.harvest(8) u.idle() u.moveAway() for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.idle()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Left,20)} else { u.attack(LessHealthy)}} for(Unit u){u.harvest(7) u.build(Barracks,Up,4)}}
S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;9;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(8) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Right,20) if(u.is(Worker)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Weakest)}}} if(OpponentHasNumberOfUnits(Ranged,9)) then {u.moveToUnit(Enemy,Farthest)} else { e} u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Weakest;S;Empty;S;C;Train;Worker;EnemyDir;3;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Idle	for(Unit u){if(u.canAttack()) then {u.attack(Weakest)} else { e} u.train(Worker,EnemyDir,3) if(u.canAttack()) then {for(Unit u){u.harvest(6) for(Unit u){u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;15;S;C;MoveAway;S;S_S;S;C;Train;Worker;Left;5;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.moveToUnit(Enemy,MostHealthy)}}} u.harvest(15) u.moveAway() u.train(Worker,Left,5) u.attack(Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;25;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;7	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Right,100) u.harvest(25) for(Unit u){u.attack(MostHealthy)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,7)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Right;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.harvest(3) u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)} u.train(Worker,Right,10) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Right;15	for(Unit u){u.harvest(1) u.idle() u.attack(Closest) u.train(Worker,Right,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Right;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} u.harvest(3) if(u.isBuilder()) then {e} else { u.train(Light,Right,9)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} if(u.canHarvest()) then {u.moveToUnit(Ally,Farthest)} u.attack(Strongest) for(Unit u){for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;3;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) if(u.isBuilder()) then {u.idle()} u.idle() u.harvest(4) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Left,5) u.train(Heavy,Right,50) u.build(Barracks,EnemyDir,6) u.attack(Farthest) if(HasNumberOfUnits(Barracks,3)) then {for(Unit u){u.train(Ranged,EnemyDir,6)}} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;For_S;S;For_S;S;C;Train;Ranged;Right;10;S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,2)} for(Unit u){for(Unit u){u.train(Ranged,Right,10)}} for(Unit u){for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(8)}}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,2)} for(Unit u){for(Unit u){u.train(Light,Up,25) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(8)}}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;50;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Left,50) u.build(Barracks,EnemyDir,3)} for(Unit u){u.idle() u.harvest(50)} if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;MostHealthy;S;C;Harvest;50;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;Build;Barracks;Up;20;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;Harvest;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(MostHealthy)}} u.harvest(50) u.moveToUnit(Enemy,LessHealthy) u.moveAway()}} else { u.build(Barracks,Up,20)} u.train(Light,EnemyDir,50) u.harvest(20)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;3;S;Empty;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,10) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(3)} else { e}} u.train(Light,EnemyDir,9) u.moveToUnit(Ally,Closest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;50;S;C;Build;Barracks;EnemyDir;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Left,50) u.build(Barracks,EnemyDir,3)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.moveAway()}} for(Unit u){u.idle() u.harvest(50)} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;C;Idle;S;C;MoveAway;S;C;Train;Worker;Right;8	for(Unit u){u.harvest(1) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.idle()}} u.moveAway() u.train(Worker,Right,8)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Down;2;S;C;Train;Light;Right;50;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Farthest;S;C;Train;Worker;Down;25	for(Unit u){for(Unit u){u.harvest(3) u.build(Barracks,Down,2) u.train(Light,Right,50) for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) u.attack(Farthest)} u.train(Worker,Down,25)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Right;20	for(Unit u){u.harvest(1) u.train(Worker,EnemyDir,5) for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Right,20)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Right;20	for(Unit u){u.harvest(1) u.train(Worker,EnemyDir,5) for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Down,5) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Right,20)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Up;25;S;S_S;S;C;Train;Light;Left;6;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Left;15	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.harvest(50)} u.attack(Weakest) u.train(Heavy,Up,25)}} u.train(Light,Left,6) if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)} u.harvest(1) if(u.canAttack()) then {u.attack(Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Left,15)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Build;Barracks;Down;20;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;9;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;C;Train;Light;Down;8	for(Unit u){for(Unit u){if(u.is(Worker)) then {u.build(Barracks,Down,20)}} for(Unit u){u.harvest(1)} u.attack(Closest) if(HasNumberOfUnits(Base,9)) then {u.moveToUnit(Enemy,Weakest)} else { e} for(Unit u){u.moveToUnit(Ally,Weakest)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,9)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle() u.moveAway()} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.train(Light,Down,8)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Down;2;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;1;S;C;Train;Light;EnemyDir;10;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.harvest(1) u.moveToUnit(Enemy,Weakest)} u.build(Barracks,Down,2)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,1) u.train(Light,EnemyDir,10)} for(Unit u){u.harvest(7) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;C;Build;Barracks;Down;2;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;1;S;C;Train;Light;EnemyDir;10;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Farthest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Weakest) for(Unit u){u.harvest(15)}} u.build(Barracks,Down,2)} for(Unit u){u.train(Heavy,Right,1) u.train(Light,EnemyDir,10)} for(Unit u){u.harvest(7) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Right;50;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;Up;8;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.harvest(2) u.build(Barracks,Right,50)} for(Unit u){u.harvest(5) u.attack(MostHealthy) u.train(Heavy,Up,8) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Right,15) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;S_S;S;C;Harvest;20;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.train(Worker,Right,6) u.harvest(20) for(Unit u){u.idle()} for(Unit u){u.moveAway()} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;10;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,10) u.attack(LessHealthy) for(Unit u){u.harvest(7)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;7	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,Right,7)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Idle	for(Unit u){u.harvest(4) u.moveToUnit(Enemy,Strongest) u.train(Worker,Left,5) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;C;Harvest;3;S;S_S;S;C;Harvest;5;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Up,50) u.harvest(3) u.harvest(5) u.attack(MostHealthy) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,25) u.moveToUnit(Enemy,Weakest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;2;S;C;Attack;Farthest;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;C;Train;Worker;Up;20	for(Unit u){u.harvest(4) u.moveAway() for(Unit u){u.harvest(2)} u.attack(Farthest) for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()}} u.train(Worker,Up,20)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.harvest(2) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()} else { u.moveToUnit(Enemy,Closest)} u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down;6	for(Unit u){u.idle() u.harvest(3) for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Enemy,Strongest)}}} u.train(Worker,Down,5)} for(Unit u){u.attack(Closest) u.train(Worker,Down,6)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;S_S;S;C;Train;Ranged;Left;10;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;8	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()} else { for(Unit u){u.harvest(2)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.train(Ranged,Left,10) u.build(Barracks,Left,5)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,8)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;Empty;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.build(Barracks,Down,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { e} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;Harvest;15;S;C;Attack;Weakest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Down,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Light,Left,15)}}}} for(Unit u){u.harvest(15) u.attack(Weakest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;Train;Light;Right;9;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Down,4) u.train(Light,Right,9) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Down,4) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)}} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Train;Light;Left;5;S;C;Idle;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.build(Barracks,Down,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Light,Left,5) u.idle()} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.moveAway()}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Train;Light;Left;5;S;C;Idle;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Down,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Light,Left,5) u.idle()} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;C;Train;Heavy;Left;1;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveAway;S;C;MoveAway;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Right,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Worker,Left,4) u.train(Heavy,Left,1)} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveAway()} else { u.moveAway()}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;C;Train;Heavy;Left;1;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle()} else { for(Unit u){u.build(Barracks,Right,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Worker,Left,4) u.train(Heavy,Left,1)} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Left;4;S;C;Train;Ranged;Left;20;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {u.idle() u.moveToUnit(Enemy,MostHealthy)} else { for(Unit u){u.build(Barracks,Right,4) u.train(Light,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Worker,Left,4)} u.train(Ranged,Left,20) u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;Train;Ranged;Right;4;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;Build;Barracks;Right;25;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.train(Ranged,Right,4) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)} u.build(Barracks,Right,25) if(u.canHarvest()) then {e} else { u.attack(Strongest)} u.harvest(2) u.attack(Weakest) u.train(Light,EnemyDir,5)} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;Up;4;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.train(Light,EnemyDir,2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest)} u.idle() u.attack(Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Worker,EnemyDir,8) u.build(Barracks,Down,20) u.train(Ranged,Up,4) u.idle()} for(Unit u){u.harvest(5) u.attack(MostHealthy)}}} u.idle() u.train(Worker,EnemyDir,50) for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Ranged;Up;20;S;C;Harvest;4	for(Unit u){u.train(Worker,EnemyDir,7) u.attack(Weakest) for(Unit u){for(Unit u){u.train(Heavy,Up,25) u.idle() u.build(Barracks,EnemyDir,100) u.train(Ranged,Up,20)} u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Ranged;Up;20;S;C;Harvest;4	for(Unit u){u.train(Worker,EnemyDir,7) u.attack(MostHealthy) for(Unit u){for(Unit u){u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1) u.train(Ranged,Up,20)} u.harvest(4)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.attack(MostHealthy) for(Unit u){for(Unit u){u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;8	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.attack(MostHealthy) for(Unit u){for(Unit u){u.idle() u.harvest(1) u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(8)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4	for(Unit u){u.train(Worker,EnemyDir,7) u.attack(MostHealthy) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;Left;50	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.attack(MostHealthy) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Build;Barracks;Right;1;S;C;Idle;S;C;Train;Heavy;Up;25;S;C;Harvest;4;S;C;Train;Light;Left;50	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.attack(LessHealthy) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.build(Barracks,Right,1) u.idle() u.train(Heavy,Up,25)} u.harvest(4)} u.train(Light,Left,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;Left;50	for(Unit u){u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;Left;50	for(Unit u){u.attack(Weakest) u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Up,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;Left;50	for(Unit u){u.attack(Weakest) u.train(Worker,Up,2) u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Down,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;25;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4;S;C;Train;Ranged;Left;50	for(Unit u){u.attack(Strongest) u.train(Worker,Up,2) u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() u.train(Heavy,Down,25) u.build(Barracks,EnemyDir,1)} u.harvest(4)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;Down;15;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;4	for(Unit u){u.attack(Strongest) u.train(Worker,Up,2) u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){for(Unit u){u.harvest(2)} u.idle() for(Unit u){u.train(Ranged,Down,15)} u.build(Barracks,EnemyDir,1)} u.harvest(4)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway;S;C;Train;Worker;Left;4;S;C;Train;Ranged;Left;50;S;C;Build;Barracks;Right;15;S;C;Harvest;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { for(Unit u){u.train(Light,EnemyDir,7) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Worker,Left,4)} u.train(Ranged,Left,50) u.build(Barracks,Right,15) u.harvest(25)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;9;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;9;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveAway;S;C;Train;Ranged;Left;50;S;C;Build;Barracks;Right;15;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy) if(OpponentHasNumberOfUnits(Light,9)) then {u.moveToUnit(Ally,Farthest)}} else { for(Unit u){u.train(Light,EnemyDir,7) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest) u.train(Light,Left,9) u.train(Worker,Left,4) u.moveAway()} u.train(Ranged,Left,50) u.build(Barracks,Right,15) for(Unit u){u.harvest(2)} u.harvest(25)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;9;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;9;S;C;Train;Worker;Left;4;S;S_S;S;C;Train;Ranged;Left;50;S;C;Harvest;3;S;C;Build;Barracks;Right;15;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy) if(OpponentHasNumberOfUnits(Light,9)) then {u.moveToUnit(Ally,Farthest)}} else { for(Unit u){u.train(Light,EnemyDir,7) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(Weakest) u.moveToUnit(Enemy,Farthest) u.train(Light,Left,9) u.train(Worker,Left,4)} u.train(Ranged,Left,50) u.harvest(3) u.build(Barracks,Right,15) for(Unit u){u.harvest(2)} u.harvest(25)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;9;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;9;S;C;Train;Worker;Left;4;S;S_S;S;C;Train;Ranged;Left;50;S;C;Harvest;3;S;C;Build;Barracks;Right;15;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;25;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy) if(OpponentHasNumberOfUnits(Light,9)) then {u.moveToUnit(Ally,Farthest)}} else { for(Unit u){u.train(Light,Down,7) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.attack(Weakest) u.moveToUnit(Enemy,Farthest) u.train(Light,Left,9) u.train(Worker,Left,4)} u.train(Ranged,Left,50) u.harvest(3) u.build(Barracks,Right,15) for(Unit u){u.harvest(2)} u.harvest(25)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Light;Left;9	for(Unit u){u.harvest(20) u.moveToUnit(Enemy,LessHealthy) u.idle() for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,6)} u.train(Light,Left,9)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;C;Harvest;50;S;S_S;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Left,20) u.train(Heavy,EnemyDir,8) u.train(Worker,Left,3) u.harvest(50) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.train(Worker,EnemyDir,4)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Right,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.train(Heavy,Right,2) u.harvest(10)}} for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;C;Harvest;10;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.train(Worker,EnemyDir,4)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.train(Heavy,Right,2) u.harvest(10)}} u.train(Light,EnemyDir,25) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;For_S;S;C;Harvest;8;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.train(Worker,EnemyDir,4)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(8)}} u.train(Light,EnemyDir,25) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;For_S;S;C;Harvest;8;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle() for(Unit u){u.train(Worker,EnemyDir,4)} u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(8)}} u.train(Light,EnemyDir,25) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;For_S;S;For_S;S;C;Harvest;8;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,4)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Up,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(8)}} u.train(Light,EnemyDir,25) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,4)} u.moveToUnit(Ally,Closest) u.train(Heavy,Up,7) for(Unit u){u.build(Barracks,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(4)}} for(Unit u){u.attack(Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} u.train(Ranged,Up,1) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;C;Train;Heavy;Right;100;S;C;Idle;S;C;Train;Ranged;Up;100;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;25;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,4) u.train(Heavy,Right,100) u.idle() u.train(Ranged,Up,100) for(Unit u){u.build(Barracks,EnemyDir,10)}} for(Unit u){if(u.canHarvest()) then {u.harvest(25)} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;2;S;Empty;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;3;S;C;Train;Light;Right;4;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.idle() if(u.canAttack()) then {u.build(Barracks,Left,2)} else { e} u.harvest(50) u.attack(Weakest) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,3) u.train(Light,Right,4) if(u.canAttack()) then {for(Unit u){u.harvest(4) for(Unit u){u.train(Heavy,Right,20)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;2;S;Empty;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;3;S;C;Train;Light;Right;4;S;C;Attack;Closest;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.idle() if(u.canAttack()) then {u.build(Barracks,Left,2)} else { e} u.harvest(50) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest)} u.train(Worker,EnemyDir,3) u.train(Light,Right,4) u.attack(Closest) if(u.canAttack()) then {for(Unit u){u.harvest(4) for(Unit u){u.train(Heavy,Right,20)}}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;C;Train;Heavy;Up;4;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;15	for(Unit u){u.idle() u.train(Worker,Left,4) u.train(Heavy,Up,4) u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(15)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;4;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Weakest;S;C;Train;Worker;Left;3	for(Unit u){u.train(Heavy,Down,4) u.harvest(2) u.idle() for(Unit u){u.idle()} u.build(Barracks,Right,5) u.attack(Weakest) u.train(Worker,Left,3)}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Weakest;S;C;Train;Heavy;Left;4;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;6	for(Unit u){u.harvest(2) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Weakest)} else { u.train(Heavy,Left,4)} u.build(Barracks,Right,20) u.attack(LessHealthy) u.train(Worker,Left,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;Empty;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;50;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.harvest(5) u.train(Worker,EnemyDir,8) if(HaveQtdUnitsAttacking(7)) then {e} else { u.attack(Closest)} u.train(Heavy,EnemyDir,50) u.attack(Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Left;15;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway	for(Unit u){u.train(Worker,EnemyDir,2)} for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.idle()} u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,15)} u.harvest(15)} u.moveToUnit(Enemy,Strongest) u.moveAway()}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Left;15;S;S_S;S;C;Harvest;15;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,2)} for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.idle()} u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,15)}} u.harvest(15) u.attack(Closest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;15;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;2	for(Unit u){u.train(Worker,EnemyDir,2)} for(Unit u){if(u.is(Heavy)) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} else { e}} u.idle() for(Unit u){u.train(Heavy,EnemyDir,100)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,20)}} u.harvest(15) u.attack(LessHealthy) u.train(Light,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;9;S;C;Build;Barracks;Up;3;S;S_S;S;C;Harvest;5;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Light,Right,9) u.build(Barracks,Up,3) u.harvest(5) u.idle() u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;4;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway	for(Unit u){u.train(Light,Up,5) u.build(Barracks,Down,20) u.harvest(4) u.idle() u.train(Heavy,Right,20) if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Strongest) u.moveAway()}
S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;2;S;S_S;S;C;Train;Heavy;Down;25;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(2) u.train(Heavy,Down,25) u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;C;Train;Light;Right;8;S;S_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Right,7) u.train(Light,Right,8) u.train(Heavy,Up,6) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.build(Barracks,Down,6)} for(Unit u){for(Unit u){u.harvest(2)}} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Right,25)} for(Unit u){for(Unit u){u.idle()} u.train(Worker,Left,9) for(Unit u){u.build(Barracks,Up,9)} u.harvest(5) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Light;Down;1;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;EnemyDir;2;S;S_S;S;C;Harvest;100;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;Down;25	for(Unit u){u.harvest(5) u.idle() for(Unit u){u.train(Worker,EnemyDir,8)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Down,1) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,EnemyDir,2)} u.harvest(100) u.moveAway() u.moveToUnit(Enemy,Weakest) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Weakest) u.train(Ranged,Down,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Left;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) u.idle() for(Unit u){u.train(Worker,EnemyDir,50)} u.moveToUnit(Ally,Weakest) u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Left,6) u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;10;S;C;Train;Ranged;EnemyDir;100;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Ally,Closest) u.attack(Closest) u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(10) u.train(Ranged,EnemyDir,100)} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;C;Train;Light;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Harvest;4;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Light,Left,7) u.build(Barracks,Left,6) u.harvest(4) u.attack(Closest) u.train(Worker,Up,3) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Right;2;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Worker,Right,2)} u.attack(Farthest) for(Unit u){for(Unit u){u.idle()} u.train(Light,Up,15)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,100)} for(Unit u){u.harvest(2)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Up;7	for(Unit u){u.harvest(5) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,8)} u.train(Heavy,Up,9) for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Light,Down,1) u.train(Ranged,Right,1) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.build(Barracks,Up,7)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;C;Train;Heavy;Right;9;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;5	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Ranged,Left,25)}} else { for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){for(Unit u){u.build(Barracks,Down,6)} u.train(Heavy,Right,9) u.harvest(10)}}} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Closest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Left;8;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Down;2	for(Unit u){for(Unit u){u.build(Barracks,Up,9)} u.moveToUnit(Ally,Farthest) u.train(Heavy,Left,8) u.train(Ranged,Left,2) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)}}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)}} if(u.HasUnitInOpponentRange()) then {if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.harvest(4) u.idle() u.attack(Closest)} u.train(Worker,Down,2)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Light;Right;20;S;S_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Ally,Closest) u.train(Light,Right,20) u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(2) u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;C;Train;Light;Down;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,8)} u.build(Barracks,Right,4) u.train(Heavy,Up,9) for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Light,Down,1) u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;C;Train;Light;Right;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,8)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Light,Right,1) u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;15;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Heavy;Down;100;S;C;Train;Light;Down;2	for(Unit u){u.train(Worker,Up,5) u.harvest(3) u.build(Barracks,Up,5) if(HaveQtdUnitsAttacking(2)) then {u.harvest(15)} else { u.idle()} u.attack(Weakest) u.train(Heavy,Down,100) u.train(Light,Down,2)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Harvest;2;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Build;Barracks;Left;3;S;C;Train;Light;Right;100;S;For_S;S;S_S;S;C;Harvest;25;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;3	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(2) for(Unit u){u.idle()}} u.moveToUnit(Ally,MostHealthy) u.build(Barracks,Left,3) u.train(Light,Right,100)} for(Unit u){u.harvest(25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)}} for(Unit u){u.train(Worker,EnemyDir,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Ranged;Up;9;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;5	for(Unit u){u.harvest(10) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Ranged,Up,9) u.idle()} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.build(Barracks,EnemyDir,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;C;Train;Worker;Right;3;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;7;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;6;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;For_S;S;C;Train;Ranged;Down;4;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;3;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Build;Barracks;Down;100	for(Unit u){if(u.canHarvest()) then {u.moveAway()} u.train(Worker,Right,3) if(u.canHarvest()) then {u.harvest(25)} for(Unit u){u.idle()} u.attack(MostHealthy) for(Unit u){u.train(Light,Right,7) u.harvest(2)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Base,6)) then {u.moveToUnit(Enemy,Closest)} else { e} for(Unit u){u.train(Ranged,Down,4)} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){if(HasNumberOfUnits(Barracks,3)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.build(Barracks,Down,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Up;7	for(Unit u){u.harvest(5) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,8)} u.train(Heavy,Up,9) for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Light,Down,1) u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,7)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Down;50;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Ranged;Up;1;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Left;6;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.attack(LessHealthy)}}} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Ranged,Down,50)}}} if(u.canAttack()) then {e} else { u.train(Ranged,Up,1)} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Left,6) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;10;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;20;S;C;Train;Ranged;Down;8	for(Unit u){if(HasNumberOfUnits(Worker,10)) then {u.attack(LessHealthy)} else { e} u.build(Barracks,Left,100) for(Unit u){u.harvest(4) for(Unit u){u.idle()}} u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,20) u.train(Ranged,Down,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Ranged;Up;9;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;Empty;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){for(Unit u){u.train(Ranged,Up,9)}} u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.attack(LessHealthy)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()} else { e} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.moveToUnit(Enemy,Farthest) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;6;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,6) u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;50;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;EnemyDir;50;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.harvest(5) u.idle() for(Unit u){u.train(Worker,EnemyDir,50)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,EnemyDir,50)} for(Unit u){u.build(Barracks,EnemyDir,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;50;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;EnemyDir;50;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.harvest(5) u.idle() for(Unit u){u.train(Worker,EnemyDir,50)} u.attack(Strongest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,EnemyDir,50)} for(Unit u){u.build(Barracks,EnemyDir,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Right;100;S;C;Train;Light;Up;2	for(Unit u){u.train(Worker,Up,5) if(u.isBuilder()) then {u.harvest(4)} else { for(Unit u){u.idle()}} u.build(Barracks,Up,5) u.attack(Weakest) u.train(Heavy,Right,100) u.train(Light,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Up;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;10;S;C;Train;Worker;Left;15	for(Unit u){u.harvest(4) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,3) u.idle() u.moveToUnit(Enemy,Farthest) u.harvest(10) u.train(Worker,Left,15)}
S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Left;8;S;Empty;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Down,1) u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}} else { e}}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Left,8)} else { e}}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.moveAway() u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Closest;S;C;Train;Light;Down;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,8)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Light,Down,1) u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;For_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;Train;Worker;Down;20;S;C;Train;Ranged;Down;8	for(Unit u){u.build(Barracks,Left,5) for(Unit u){u.harvest(4)} u.attack(Closest) u.train(Worker,Down,20) u.train(Ranged,Down,8)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(9) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} u.train(Worker,Down,5)} for(Unit u){u.moveAway() u.attack(LessHealthy) u.train(Light,EnemyDir,25) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(9) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} else { e}}} u.train(Worker,Down,5)} for(Unit u){u.attack(LessHealthy) u.train(Light,EnemyDir,25) for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Left;6;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.attack(LessHealthy)}}} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){for(Unit u){u.train(Heavy,Right,2) u.idle()} u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Left,6) if(u.isBuilder()) then {u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Right,25)} for(Unit u){for(Unit u){for(Unit u){u.idle()}} u.train(Worker,Left,2) for(Unit u){u.build(Barracks,Up,9)} u.harvest(5) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;C;Attack;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Ranged;Right;20;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Left;6;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { u.attack(Strongest)}}} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Ranged,Right,20)}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,8)} u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Left,6) for(Unit u){u.train(Worker,Down,100)} if(u.isBuilder()) then {u.harvest(8)} u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;C;Train;Heavy;Right;6;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Up;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Right,3) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Ally,Strongest)} else { e} u.train(Heavy,Right,6) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,5)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;3;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;C;Train;Ranged;Right;6;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Up;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Right,3) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Ally,Strongest)} else { e} u.train(Ranged,Right,6) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,5)} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Light;EnemyDir;2	for(Unit u){u.train(Worker,Up,50) u.harvest(3) u.build(Barracks,Up,5) u.attack(Closest) u.train(Heavy,EnemyDir,100) u.train(Light,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;3;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Left,6) u.build(Barracks,EnemyDir,20) u.harvest(3) u.attack(Closest) for(Unit u){u.train(Worker,Down,5)}} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Train;Ranged;EnemyDir;5;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;C;Build;Barracks;Left;4;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { u.train(Ranged,EnemyDir,5)}}} for(Unit u){if(HaveQtdUnitsAttacking(50)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Down;100;S;C;Train;Light;Down;2	for(Unit u){u.train(Worker,Up,5) u.harvest(3) u.build(Barracks,Up,5) u.idle() u.moveToUnit(Enemy,Weakest) u.train(Heavy,Down,100) u.train(Light,Down,2)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;Idle;S;C;Attack;Closest;S;C;Attack;Weakest;S;C;Train;Heavy;Right;100	for(Unit u){u.train(Worker,Up,5) u.harvest(3) u.build(Barracks,Up,5) if(HasNumberOfUnits(Barracks,2)) then {u.idle()} else { u.attack(Closest)} u.attack(Weakest) u.train(Heavy,Right,100)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;Closest;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Train;Heavy;Left;8;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest	for(Unit u){u.train(Ranged,Down,1) u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.canHarvest()) then {u.attack(Closest)} else { e}}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.train(Heavy,Left,8)}}} u.idle() for(Unit u){u.idle() u.train(Worker,EnemyDir,6)} u.build(Barracks,Left,4) u.harvest(6) if(u.is(Ranged)) then {u.moveAway()} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest	for(Unit u){u.train(Ranged,Down,1) u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}} else { e}}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.train(Heavy,Left,8)}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,6)} u.build(Barracks,Left,4) u.harvest(6) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;1;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,5) u.harvest(3) u.build(Barracks,Up,1) u.attack(Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(2)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Right;25;S;S_S;S;C;Train;Ranged;Left;2;S;C;Train;Light;Up;15;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;7	for(Unit u){for(Unit u){u.harvest(2) u.build(Barracks,Right,25)} u.train(Ranged,Left,2) u.train(Light,Up,15) u.harvest(3) u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} u.train(Worker,EnemyDir,7)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Heavy;Left;3;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,1) u.harvest(3) for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.attack(Strongest)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Heavy,Left,3)}} u.train(Worker,Right,4)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Left;8;S;Empty;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;50;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;6;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Down;3	for(Unit u){u.train(Ranged,Down,1) u.harvest(5) if(u.is(Barracks)) then {for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Weakest)}} else { e}}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Left,8)} else { e}}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,50)} u.build(Barracks,Left,4) u.harvest(6) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,LessHealthy) u.train(Light,Down,3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;50;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Left;6;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() for(Unit u){u.train(Worker,EnemyDir,50)} u.harvest(2) u.build(Barracks,Left,4) u.train(Heavy,Up,9) u.train(Light,Left,6) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Worker,Up,6) u.idle() for(Unit u){u.train(Heavy,Up,6)} u.attack(MostHealthy) for(Unit u){u.build(Barracks,Down,7) u.train(Light,EnemyDir,20)} for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Worker,Up,6) u.idle() for(Unit u){u.train(Heavy,Up,6)} u.attack(MostHealthy) for(Unit u){if(u.canHarvest()) then {if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)}}} for(Unit u){u.build(Barracks,Down,7) u.train(Light,EnemyDir,20)} for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;MoveAway;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;1;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Harvest;6;S;C;Train;Worker;EnemyDir;50	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveAway() u.build(Barracks,EnemyDir,9)} u.attack(LessHealthy) u.train(Heavy,Right,1) for(Unit u){u.idle()} u.train(Worker,EnemyDir,9) for(Unit u){u.harvest(6)} u.train(Worker,EnemyDir,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.attack(Farthest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest)} if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} else { if(OpponentHasNumberOfUnits(Worker,20)) then {u.moveToUnit(Ally,Weakest)}} u.train(Worker,Up,2) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;4	for(Unit u){u.train(Heavy,EnemyDir,4) for(Unit u){u.build(Barracks,Down,20)} u.idle() if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.harvest(20) u.attack(Strongest) u.train(Worker,Left,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;C;Harvest;1;S;S_S;S;C;Train;Light;Up;7;S;C;Attack;Weakest	for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.build(Barracks,Down,6) if(u.HasUnitInOpponentRange()) then {u.attack(Closest)}} u.harvest(1) u.train(Light,Up,7) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;7;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;Harvest;3;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Heavy,Right,7)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,5)} u.harvest(3) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Build;Barracks;Left;50;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;3;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,50)} for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){u.idle() u.train(Worker,Up,3) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Build;Barracks;Left;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Light;Up;2;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Ranged;Up;50	for(Unit u){u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){for(Unit u){u.harvest(5)} u.train(Light,Up,2) u.attack(LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,Up,50)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;C;Train;Worker;Right;9;S;S_S;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;2;S;C;Harvest;7;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Light,Down,20)} u.train(Worker,Right,9) u.idle() u.attack(Farthest) for(Unit u){u.idle() u.build(Barracks,EnemyDir,25) u.harvest(2) u.harvest(7) u.attack(LessHealthy) u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;C;Build;Barracks;Left;25;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;For_S;S;C;Harvest;8;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){u.harvest(8)}} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;50;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.train(Ranged,Left,50)} for(Unit u){u.build(Barracks,Left,3)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}} else { e} u.harvest(2) u.moveToUnit(Enemy,Closest) u.train(Worker,Left,9)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Right;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;6;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(6)} for(Unit u){u.build(Barracks,Down,4) u.attack(LessHealthy) u.train(Worker,Right,7) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Light,Left,6)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Heavy;Up;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;Right;10;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(4)} u.idle() for(Unit u){u.build(Barracks,Down,15)} if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Light,Left,20)}} else { u.train(Heavy,Up,7)} u.moveToUnit(Enemy,Closest) u.train(Light,Right,10) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Heavy;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(4)} u.idle() for(Unit u){u.build(Barracks,Down,15)} if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Light,Left,20)}} else { u.train(Heavy,Up,7)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Up;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;8;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(4)} u.idle() for(Unit u){u.build(Barracks,Down,15)} if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}} else { u.train(Heavy,Up,7)} u.moveToUnit(Enemy,Closest) u.harvest(8) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;5;S;For_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Up;8;S;C;Train;Heavy;Down;15	for(Unit u){u.build(Barracks,Right,5) for(Unit u){u.harvest(3)} u.idle() u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canHarvest()) then {e} else { u.train(Worker,Up,8)}} u.train(Heavy,Down,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;5;S;For_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;8;S;C;Train;Heavy;Down;15	for(Unit u){u.build(Barracks,Up,5) for(Unit u){u.harvest(3)} u.idle() u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,8)}} u.train(Heavy,Down,15)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;2;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} u.train(Light,Left,5) u.build(Barracks,EnemyDir,20) u.harvest(2)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Strongest) u.attack(Closest)} else { u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;2;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} u.train(Light,Left,5) for(Unit u){u.train(Heavy,Right,8)} u.build(Barracks,EnemyDir,20) u.harvest(2)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Strongest) u.attack(Closest)} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Left,50) for(Unit u){u.harvest(2) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Left;6;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Left,15) u.harvest(25) u.idle() u.train(Ranged,Left,6) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;2;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;20;S;C;MoveAway;S;C;Idle;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Down,2) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,2) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(20)} else { u.moveAway()} u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;2;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Idle;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Up,2) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,2) u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;15;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;20;S;C;Train;Heavy;Up;7;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(4)} u.idle() for(Unit u){u.build(Barracks,Down,15)} if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfUnits(Ranged,8)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Light,Left,20)}} else { u.train(Heavy,Up,7)} u.moveAway() u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;Train;Light;Left;20;S;C;MoveAway;S;C;Attack;Weakest;S;C;Train;Heavy;Up;100	for(Unit u){u.train(Worker,Up,5) u.harvest(3) u.build(Barracks,Up,5) if(HasNumberOfUnits(Barracks,2)) then {u.train(Light,Left,20)} else { u.moveAway()} u.attack(Weakest) u.train(Heavy,Up,100)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Up,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Down;4;S;For_S;S;C;Idle	for(Unit u){u.harvest(3) u.train(Worker,Down,4) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Left,4) for(Unit u){for(Unit u){u.harvest(9)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle() u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;25;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,25) for(Unit u){u.idle() u.attack(Strongest)}}
S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;S_S;S;C;Build;Base;Left;10;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;15	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(7) for(Unit u){u.harvest(3) u.attack(Weakest) if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.build(Base,Left,10) u.moveAway()}} u.moveToUnit(Ally,Weakest) u.train(Worker,Right,15)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Right;15	for(Unit u){u.build(Barracks,Down,10) u.harvest(4) u.train(Worker,Up,6) u.idle() u.attack(MostHealthy) u.train(Worker,Right,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;100;S;C;Build;Barracks;Left;5;S;C;Attack;Weakest	for(Unit u){u.harvest(5) for(Unit u){u.train(Worker,Right,5)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle() u.train(Worker,Down,100)} u.build(Barracks,Left,5) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;15;S;C;Train;Worker;Down;100;S;C;Build;Barracks;Left;5;S;C;Attack;Weakest	for(Unit u){u.harvest(5) for(Unit u){u.train(Worker,Right,5)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle() u.train(Heavy,Up,15) u.train(Worker,Down,100)} u.build(Barracks,Left,5) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;Empty;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;100;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Right;100	for(Unit u){if(u.canHarvest()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { e} u.build(Barracks,Right,1) u.harvest(100)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,6)} for(Unit u){u.train(Heavy,Right,100)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Right;100	for(Unit u){if(u.canHarvest()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.harvest(50)} u.build(Barracks,Right,1) u.harvest(3)} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,6)} for(Unit u){u.train(Heavy,Right,100)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Light;Up;2;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Build;Barracks;Right;20;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Right;100	for(Unit u){if(u.canHarvest()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Up,2) u.idle()} else { u.harvest(50)} u.build(Barracks,Right,20) u.harvest(3)} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,6)} for(Unit u){u.train(Heavy,Right,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveAway;S;C;Train;Light;Up;4	for(Unit u){u.idle() u.train(Worker,EnemyDir,6) u.harvest(3) u.build(Barracks,Up,4) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) u.moveAway() u.train(Light,Up,4)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Up;5;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Down,5) u.harvest(3) u.build(Barracks,Up,5) u.attack(Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;100;S;C;Build;Barracks;Up;20;S;C;Harvest;10	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Enemy,LessHealthy)}} u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.attack(Weakest) for(Unit u){u.train(Light,Down,100) u.build(Barracks,Up,20) u.harvest(10)}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Light;Left;20;S;C;Harvest;3;S;C;MoveAway;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,15) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) u.train(Light,Left,20) u.harvest(3) u.moveAway() u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Strongest;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Left;20;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,15) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Strongest)} u.harvest(2) u.moveAway() u.moveToUnit(Enemy,Farthest) u.train(Light,Left,20) u.harvest(3) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Train;Light;Left;20;S;C;Harvest;3;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,15) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) u.train(Ranged,Left,2) u.train(Light,Left,20) u.harvest(3) u.attack(Strongest) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Train;Light;Left;20;S;S_S;S;C;Harvest;3;S;C;MoveAway;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,15) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) u.train(Ranged,Left,2) u.train(Light,Left,20) u.harvest(3) u.moveAway() u.attack(Strongest) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;C;Train;Ranged;Right;2;S;S_S;S;C;Train;Light;Left;20;S;S_S;S;C;Harvest;3;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,15) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) u.train(Ranged,Right,2) u.train(Light,Left,20) u.harvest(3) u.moveAway() u.attack(Closest) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;C;Attack;Closest;S;C;Attack;Strongest;S;C;Train;Light;Left;20;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,2) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) if(HaveQtdUnitsAttacking(6)) then {u.attack(Closest)} else { u.attack(Strongest)} u.train(Light,Left,20) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Left,15)} for(Unit u){u.train(Heavy,Left,1)} for(Unit u){u.harvest(2) for(Unit u){u.train(Light,EnemyDir,10)} u.train(Worker,EnemyDir,6) u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.idle()}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Left,15)} for(Unit u){u.train(Heavy,Left,1)} for(Unit u){u.harvest(2) for(Unit u){u.train(Light,EnemyDir,10)} u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.idle()}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;C;Train;Heavy;Left;1;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;Train;Worker;Left;10;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Left,15)} for(Unit u){u.train(Heavy,Left,1)} for(Unit u){u.harvest(2) for(Unit u){u.train(Light,EnemyDir,10)} u.train(Worker,EnemyDir,6) u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Left,10) for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Up;2;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;10	for(Unit u){u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Up,2)} u.idle() u.harvest(50) u.attack(Weakest) u.train(Worker,Down,10)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Up;2;S;S_S;S;C;Idle;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;10	for(Unit u){u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Up,2)} u.idle() u.harvest(7) u.attack(Weakest) u.train(Worker,Down,10)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Up;2;S;S_S;S;C;Idle;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Up,2)} u.idle() u.harvest(7) u.attack(Weakest) u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Up;2;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(4) u.attack(Closest) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Up,2)} for(Unit u){u.harvest(1)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Up;2;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.attack(Closest) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Up,2)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,15)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveAway()}} u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Ranged;Right;2;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Up,4)}} for(Unit u){u.train(Ranged,Right,2)} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Ranged;Right;8;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.harvest(3)}} for(Unit u){u.train(Ranged,Right,8)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Ally,Closest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Ranged,EnemyDir,5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.harvest(5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Worker;Right;7;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;Train;Worker;EnemyDir;15	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){u.train(Worker,Right,7)} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.train(Worker,EnemyDir,15)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Up;2;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;C;Train;Worker;Left;10	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.train(Light,Up,2)} u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Ranged,EnemyDir,5)} u.train(Worker,Left,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Base;Left;10;S;For_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.train(Light,Left,2)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Base,Left,10)} for(Unit u){for(Unit u){u.harvest(5)}} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,EnemyDir,50)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;2;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} for(Unit u){u.train(Heavy,Right,8)} u.build(Barracks,EnemyDir,20) u.harvest(2)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest) u.attack(Closest)} else { u.moveToUnit(Enemy,Closest) u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Worker,EnemyDir,20)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;1;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;Farthest;S;S_S;S;C;Train;Worker;Left;6;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Ally,Farthest) u.harvest(1)} for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.harvest(1) u.attack(Farthest) u.train(Worker,Left,6) for(Unit u){u.idle()}}} for(Unit u){if(HasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;For_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;2;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canAttack()) then {u.idle()} else { e} u.train(Light,Left,5) for(Unit u){u.train(Heavy,Right,8)} u.build(Barracks,EnemyDir,6) u.harvest(2)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;9;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Up;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S;B;HasNumberOfUnits;Heavy;9;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Right,100)} for(Unit u){for(Unit u){u.train(Light,EnemyDir,2) if(OpponentHasNumberOfUnits(Base,9)) then {u.moveToUnit(Ally,Farthest)}} u.train(Heavy,Up,8) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)} if(HasNumberOfUnits(Heavy,9)) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.moveAway()} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)}}}} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Harvest;6;S;C;Train;Light;Down;3;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,8)} for(Unit u){for(Unit u){u.build(Barracks,Down,20) u.harvest(6) u.train(Light,Down,3)} u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.attack(Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;C;Train;Heavy;Right;5;S;For_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Train;Light;Up;50;S;Empty	for(Unit u){u.harvest(20) u.attack(Weakest) u.train(Heavy,Right,5) for(Unit u){u.build(Barracks,Right,100)} if(HasLessNumberOfUnits(Light,1)) then {u.train(Light,Up,50)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;C;Train;Heavy;Right;5;S;For_S;S;C;Build;Barracks;Right;100;S;C;Train;Light;Up;50	for(Unit u){u.harvest(20) u.attack(Weakest) u.train(Heavy,Right,5) for(Unit u){u.build(Barracks,Right,100)} u.train(Light,Up,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;C;Train;Heavy;Right;5;S;For_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Train;Light;Down;50;S;Empty	for(Unit u){u.harvest(20) u.attack(Weakest) u.train(Heavy,Right,5) for(Unit u){u.build(Barracks,Right,100)} if(HasLessNumberOfUnits(Light,1)) then {u.train(Light,Down,50)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;C;Train;Heavy;Right;5;S;For_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Train;Light;Up;50;S;Empty	for(Unit u){u.harvest(20) u.attack(Weakest) for(Unit u){u.idle()} u.train(Heavy,Right,5) for(Unit u){u.build(Barracks,Right,100)} if(HasLessNumberOfUnits(Light,1)) then {u.train(Light,Up,50)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Train;Heavy;Right;5;S;For_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Train;Light;Up;50;S;Empty	for(Unit u){u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.idle()} u.train(Heavy,Right,5) for(Unit u){u.build(Barracks,Right,100)} if(HasLessNumberOfUnits(Light,1)) then {u.train(Light,Up,50)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Left;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Train;Heavy;Right;5;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;100;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;1;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Left,15)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.moveAway() for(Unit u){u.idle()} u.train(Heavy,Right,5) u.moveToUnit(Ally,Closest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,100)} if(HasLessNumberOfUnits(Light,1)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;15;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Train;Heavy;EnemyDir;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;For_S;S;C;Train;Heavy;Right;2	for(Unit u){u.harvest(15) if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.train(Heavy,EnemyDir,5)} u.attack(Weakest) for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.train(Heavy,Right,2)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Build;Barracks;Down;4;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;EnemyDir;25;S;C;Train;Worker;EnemyDir;9;S;C;MoveAway	for(Unit u){u.train(Ranged,Left,1) u.build(Barracks,Down,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} else { u.harvest(3)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,EnemyDir,25) u.train(Worker,EnemyDir,9) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;C;Train;Worker;EnemyDir;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(2)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Right,9)}} for(Unit u){u.build(Barracks,Right,1) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Light,Left,50) for(Unit u){if(u.isBuilder()) then {u.moveAway()}}} u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;C;Train;Worker;EnemyDir;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Right,9)}} for(Unit u){u.build(Barracks,Right,1) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Light,Left,50)} u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;C;Train;Worker;EnemyDir;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Right,9)}} for(Unit u){u.build(Barracks,Right,1) u.idle() u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Light,Left,50)} u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Build;Barracks;Left;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Down;9;S;C;Train;Worker;Down;8	for(Unit u){u.moveToUnit(Ally,Closest) u.build(Barracks,Left,4) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Down,9)} u.train(Worker,Down,8)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Build;Barracks;Right;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Attack;Weakest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;8	for(Unit u){u.moveToUnit(Ally,Closest) u.build(Barracks,Right,4) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Ally,Closest) u.train(Heavy,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Weakest)} if(u.is(Heavy)) then {for(Unit u){u.attack(MostHealthy)}}} u.train(Worker,Down,8)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Build;Barracks;Right;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;Right;20;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;8	for(Unit u){u.moveToUnit(Ally,Closest) u.build(Barracks,Right,4) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Right,20) if(u.is(Worker)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Down,8)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Right;4;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;Right;20;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;8	for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Weakest) u.build(Barracks,Right,4) for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Right,20) if(u.is(Worker)) then {u.attack(Farthest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest)} u.train(Worker,Down,8)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Build;Barracks;Right;4;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;MoveAway;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Down;8	for(Unit u){u.moveToUnit(Ally,Strongest) u.build(Barracks,Right,4) u.attack(Strongest) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Ally,Closest) u.train(Heavy,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveAway() if(u.isBuilder()) then {u.harvest(7)} else { u.moveToUnit(Enemy,Weakest)}} if(u.is(Heavy)) then {for(Unit u){for(Unit u){u.attack(Strongest)}}}} u.train(Worker,Down,8)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Train;Light;EnemyDir;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;8;S;C;Train;Ranged;Right;5	for(Unit u){u.build(Barracks,Down,2) u.idle() u.harvest(6) u.train(Light,EnemyDir,1) u.attack(LessHealthy) u.train(Worker,Left,8) u.train(Ranged,Right,5)}
S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;2	for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.moveAway()} for(Unit u){u.idle() u.train(Light,EnemyDir,50)} u.moveAway() u.attack(Closest) for(Unit u){u.build(Barracks,Left,3)} u.moveToUnit(Ally,Closest) u.train(Worker,Down,2)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Closest) u.train(Ranged,Up,9)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,9)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} else { u.attack(Closest)} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,9)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(OpponentHasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,9)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} if(OpponentHasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,9)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Right;15;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,Left,6) u.build(Barracks,Right,15) u.idle() u.harvest(4) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;9	for(Unit u){u.harvest(9) for(Unit u){u.train(Light,Left,2)} if(OpponentHasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()} for(Unit u){u.build(Barracks,Up,3)} u.moveToUnit(Enemy,Strongest) u.train(Light,Up,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;6;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,6)} u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(9) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;5;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;C;Harvest;100;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Left,5) u.idle() for(Unit u){u.train(Light,EnemyDir,15)} u.harvest(100) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;25;S;C;Train;Heavy;Right;20;S;For_S;S;C;Build;Barracks;Up;100;S;C;Train;Light;Left;4;S;C;Attack;MostHealthy	for(Unit u){u.harvest(25) u.train(Heavy,Right,20) for(Unit u){u.build(Barracks,Up,100)} u.train(Light,Left,4) u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Closest;S;C;Harvest;2;S;C;Train;Ranged;Right;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;50;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest)} u.harvest(2) u.train(Ranged,Right,2) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,50) u.attack(Closest) u.train(Worker,Up,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;Train;Ranged;Right;2;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;C;Train;Worker;Up;5	for(Unit u){u.build(Barracks,Left,7) for(Unit u){u.idle()} u.harvest(2) u.train(Ranged,Right,2) u.train(Heavy,Right,6) u.attack(Closest) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;Train;Ranged;Right;2;S;C;Train;Heavy;Right;6;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;5;S;For_S;S;C;Train;Heavy;Right;2	for(Unit u){u.build(Barracks,Left,7) for(Unit u){u.idle()} u.harvest(2) u.train(Ranged,Right,2) u.train(Heavy,Right,6) u.attack(Closest) u.train(Worker,Up,5) for(Unit u){u.train(Heavy,Right,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;Right;20;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Weakest;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(7) u.build(Barracks,Up,2) for(Unit u){u.harvest(3)} for(Unit u){u.train(Light,Right,20)} u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Weakest)}} u.attack(LessHealthy) u.train(Worker,Right,15) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;3	for(Unit u){u.attack(LessHealthy) u.train(Worker,Right,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;C;Train;Light;Left;3;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Harvest;25;S;C;Harvest;2;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;Attack;Closest;S;C;Train;Light;Right;7	for(Unit u){u.train(Worker,EnemyDir,20) u.train(Light,Left,3) u.idle() if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.harvest(25)} else { u.harvest(2)} u.build(Barracks,Down,25)} for(Unit u){if(u.isBuilder()) then {u.attack(MostHealthy)} u.attack(Closest) u.train(Light,Right,7)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Up;10;S;C;Train;Worker;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){for(Unit u){u.idle()} u.harvest(4)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,Up,10)} u.train(Worker,Left,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){for(Unit u){u.idle()} u.harvest(4)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Left,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;C;Build;Barracks;Right;25;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,EnemyDir,5) u.build(Barracks,Right,25) for(Unit u){for(Unit u){u.idle()} u.harvest(4)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} u.train(Worker,Left,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Up;10;S;C;Train;Worker;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){for(Unit u){u.idle()} u.harvest(6)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,Up,10)} u.train(Worker,Left,15)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;C;Train;Light;Left;3;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Harvest;25;S;C;Harvest;2;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Down;25;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Attack;MostHealthy;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Right;7	for(Unit u){u.train(Worker,EnemyDir,20) u.train(Light,Left,3) u.idle() if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.harvest(25)} else { u.harvest(2)} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,Weakest)} u.build(Barracks,Down,25)} for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.attack(MostHealthy)} u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.train(Light,Right,7)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Up;100	for(Unit u){u.build(Barracks,Down,50) u.attack(Strongest) for(Unit u){u.train(Light,Right,10) for(Unit u){u.idle() u.harvest(2) u.train(Worker,Up,100)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Up;4;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Light,Right,10) for(Unit u){u.harvest(2) u.train(Worker,Up,4)}} u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;S_S;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Attack;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} else { u.idle()} u.build(Barracks,Down,50) for(Unit u){u.train(Heavy,Up,25) u.train(Light,Right,10) for(Unit u){u.harvest(3) u.train(Worker,Up,4)}} u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Attack;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} else { u.idle()} u.build(Barracks,Down,50) for(Unit u){u.train(Heavy,Up,25) for(Unit u){u.harvest(3) u.train(Worker,Up,4)}} u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Harvest;15;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} else { u.idle()} u.build(Barracks,EnemyDir,50) for(Unit u){u.train(Heavy,Up,25) for(Unit u){u.harvest(3) u.train(Worker,Up,4)}} u.harvest(15) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;S_S;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} else { u.idle()} u.build(Barracks,Down,50) for(Unit u){u.train(Heavy,Up,25) u.train(Light,Right,10) for(Unit u){u.harvest(3) u.train(Worker,Up,4)} for(Unit u){u.train(Worker,EnemyDir,15)}} u.attack(MostHealthy)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest)}}} u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;C;Train;Ranged;Up;20;S;C;Harvest;20;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Up,20) u.harvest(20)} for(Unit u){u.idle() u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;1;S;S_S;S;C;Train;Ranged;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Build;Barracks;Right;15;S;C;Harvest;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,1) u.train(Ranged,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,Farthest)} else { e}} u.build(Barracks,Right,15) u.harvest(7)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Closest;S;C;Train;Light;Up;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;4	for(Unit u){u.build(Barracks,Down,100) u.harvest(3) u.attack(Closest) u.train(Light,Up,4) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Down,4)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;20;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;For_S;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;8	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,20) u.train(Worker,Left,9) u.attack(Strongest) u.train(Ranged,Down,1) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.harvest(8)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Worker,Left,50)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { e}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Strongest;S;S_S;S;C;Idle;S;C;Harvest;10;S;C;Train;Worker;Right;2;S;C;Train;Worker;Up;10	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Strongest)} u.idle() u.harvest(10) u.train(Worker,Right,2)} u.train(Worker,Up,10)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;10;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.moveToUnit(Ally,Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest)}}} u.train(Worker,Down,10) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Harvest;100;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;1;S;C;MoveAway;S;For_S;S;C;Train;Worker;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;If_B_then_S;B;HasNumberOfUnits;Worker;15;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;10;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Right;9;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(5) u.harvest(100) if(HasNumberOfUnits(Light,1)) then {u.moveAway()} else { for(Unit u){u.train(Worker,Up,9)}} u.build(Barracks,Left,100) if(HasNumberOfUnits(Worker,15)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.idle() u.moveToUnit(Enemy,Closest) u.attack(Closest) u.train(Light,Down,10) if(u.HasUnitWithinDistanceFromOpponent(7)) then {for(Unit u){for(Unit u){u.build(Barracks,Right,25) for(Unit u){u.idle()} u.train(Light,Right,9) u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;6;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy	for(Unit u){u.train(Ranged,Up,6) u.build(Barracks,EnemyDir,4) u.harvest(1) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;Right;15;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Right;15;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Up;8	for(Unit u){u.harvest(5) u.build(Barracks,Right,15)} for(Unit u){if(u.canHarvest()) then {if(u.is(Barracks)) then {u.moveToUnit(Ally,Closest)} else { u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Right,15)}} u.idle() u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Up,8)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;6;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Down;50;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Up,6)} for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Down,50)}} for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.attack(Closest)}}} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Worker,5)) then {e} else { u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Strongest)} for(Unit u){if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Barracks;Left;3;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Light;Right;100;S;C;Attack;Farthest	for(Unit u){u.harvest(9) for(Unit u){u.build(Barracks,Left,3)} u.train(Ranged,Right,1) for(Unit u){u.idle()} if(u.is(Barracks)) then {u.train(Light,Right,100)} u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;Up;8;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy	for(Unit u){u.idle() for(Unit u){u.train(Worker,Left,6)} u.train(Ranged,EnemyDir,3) u.build(Barracks,Up,8) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(6) u.moveToUnit(Ally,Farthest)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;Up;8;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy	for(Unit u){u.idle() for(Unit u){u.train(Worker,Left,6)} u.train(Ranged,EnemyDir,3) u.build(Barracks,Up,8) u.harvest(3) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,50) for(Unit u){u.train(Heavy,Down,20) u.train(Ranged,EnemyDir,15) for(Unit u){u.train(Worker,Up,4) for(Unit u){u.idle()}}} u.harvest(5) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;25;S;For_S;S;S_S;S;C;Train;Light;Right;7;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;Empty;S;C;Attack;Strongest;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Right,25)} for(Unit u){u.train(Light,Right,7) u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(4)) then {e} else { u.attack(Strongest)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Idle;S;C;Train;Light;Right;9;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,10)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.idle()}} u.train(Light,Right,9) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Right;8;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;C;Harvest;7;S;C;Train;Ranged;Up;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Worker,Up,10)} u.build(Barracks,Right,8) u.idle() for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(7) u.train(Ranged,Up,8)}} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;4;S;C;Train;Worker;Up;6;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,Left,25) u.harvest(4) u.train(Worker,Up,6)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,2)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Train;Heavy;Right;20;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Train;Light;Left;6;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,50) for(Unit u){u.train(Heavy,Right,20) u.train(Ranged,EnemyDir,15) for(Unit u){u.train(Worker,Right,4) u.train(Light,Left,6)}} u.harvest(5) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;8	for(Unit u){if(u.isBuilder()) then {u.harvest(7) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)} else { u.train(Worker,Up,2) u.train(Heavy,Up,20) u.idle() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,8)}}}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Right;1;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;C;Train;Light;Up;20;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;8	for(Unit u){if(u.isBuilder()) then {u.idle() u.harvest(7) u.moveToUnit(Ally,Farthest)} else { u.train(Worker,Right,1) u.train(Worker,Up,2) u.train(Light,Up,20) u.idle() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,8)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;4;S;C;Attack;Weakest	for(Unit u){u.harvest(2) u.idle() u.moveAway() u.train(Ranged,Right,1) u.build(Barracks,Left,50) u.train(Light,Down,7) for(Unit u){u.idle()} u.train(Worker,EnemyDir,4) u.attack(Weakest)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;25;S;S_S;S;C;Harvest;1;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;8	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Light,Up,25)} u.harvest(1) u.attack(Closest) for(Unit u){u.idle()}} else { u.train(Worker,Up,2) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,8)}}}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;For_S;S;C;Train;Heavy;Left;2;S;For_S;S;C;Harvest;1	for(Unit u){u.harvest(100) u.idle() u.train(Worker,Left,4) u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,5)} for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Train;Worker;Right;20;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;10;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Right,20) for(Unit u){u.idle()}} else { for(Unit u){u.harvest(10)}} for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,10)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;1;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;Right;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Up,1) if(u.isBuilder()) then {for(Unit u){u.attack(Closest)}} if(u.canHarvest()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(100)}}} for(Unit u){u.build(Barracks,Down,20)} u.train(Ranged,Right,100) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Down;4;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Up,4)} u.build(Barracks,Down,4) if(u.canAttack()) then {u.harvest(1)} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Down,4)} u.harvest(2) u.moveToUnit(Enemy,Weakest) u.idle()}
S;For_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Build;Barracks;Right;4;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Heavy,Right,9) u.idle() if(u.canAttack()) then {u.attack(MostHealthy)} else { e} u.train(Worker,Right,7) for(Unit u){u.build(Barracks,Right,4)} for(Unit u){u.harvest(4)}}
S;S_S;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){u.train(Worker,EnemyDir,8)}
S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;20;S;C;Train;Ranged;Right;20;S;For_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,100) u.build(Barracks,Down,6) u.harvest(20) u.train(Ranged,Right,20) for(Unit u){u.idle()} u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Harvest;3;S;C;Build;Barracks;Up;7;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Heavy,Left,7) u.harvest(3) u.build(Barracks,Up,7)} u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Down;20;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,2) u.harvest(4)} else { u.train(Worker,Down,20) for(Unit u){u.train(Ranged,EnemyDir,9)} u.moveToUnit(Enemy,MostHealthy)} u.attack(Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;C;Idle;S;C;Harvest;1;S;C;Train;Ranged;EnemyDir;8	for(Unit u){u.idle() u.train(Worker,EnemyDir,6) u.harvest(4) u.attack(LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Down,8) u.idle() u.harvest(1)}} u.train(Ranged,EnemyDir,8)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Harvest;15;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,Right,1) u.build(Barracks,Left,50) u.harvest(15) u.train(Light,Down,8) u.attack(Strongest) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;20;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Train;Heavy;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Right;50;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Worker,Left,20)} u.build(Barracks,EnemyDir,6) u.train(Heavy,Down,3) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Right,50)} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) u.moveAway() u.attack(Farthest) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Down;25;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,Up,1) u.build(Barracks,Left,50) u.attack(Closest) u.train(Light,Down,25) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;C;Train;Worker;Left;7;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle() u.harvest(5)} for(Unit u){u.train(Heavy,Right,25)} u.train(Light,Up,4) u.train(Worker,Left,7) for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,Closest) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;Harvest;2;S;C;Train;Light;Down;3;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Heavy;Left;25;S;S_S;S;C;Train;Worker;EnemyDir;4;S;C;Train;Ranged;Right;5	for(Unit u){u.attack(Closest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { u.harvest(2)} u.train(Light,Down,3) u.idle() u.build(Barracks,EnemyDir,50)} u.train(Heavy,Left,25) u.train(Worker,EnemyDir,4) u.train(Ranged,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Build;Barracks;Down;25;S;For_S;S;C;Idle;S;C;Harvest;2;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Heavy;Left;25;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Light;Up;100;S;C;Train;Worker;EnemyDir;6	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { u.build(Barracks,Down,25) for(Unit u){u.idle()}} u.harvest(2) if(u.canHarvest()) then {for(Unit u){u.train(Heavy,Left,25)}} u.attack(MostHealthy) if(u.canAttack()) then {e} else { u.train(Light,Up,100) u.train(Worker,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;Down;25;S;For_S;S;C;Idle;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;EnemyDir;4;S;C;Train;Light;EnemyDir;7	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,Down,25)} for(Unit u){u.idle()} u.harvest(25) u.attack(Closest) if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,4)} u.train(Light,EnemyDir,7)}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Train;Heavy;Down;100;S;C;Attack;LessHealthy	for(Unit u){if(u.canAttack()) then {u.harvest(4)} u.train(Worker,Down,3) u.idle() u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Left,4) u.train(Heavy,Down,100)} u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;10;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;2;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.harvest(5)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,10)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest)} u.train(Worker,Right,2)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Build;Barracks;Left;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;6	for(Unit u){u.harvest(3) u.build(Barracks,Left,9)} for(Unit u){u.train(Light,Right,15) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Right,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;100;S;C;Idle;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;20;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Up;100;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Ally,Weakest)} u.idle() if(u.is(Ranged)) then {for(Unit u){u.train(Light,EnemyDir,100) u.idle()}} u.build(Barracks,EnemyDir,5) u.harvest(20) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Heavy,Up,100)}} for(Unit u){u.train(Ranged,EnemyDir,7)} for(Unit u){u.moveToUnit(Ally,Farthest)} if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Up;100;S;C;Train;Light;Down;20;S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitInOpponentRange()) then {u.attack(Strongest) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Ranged,EnemyDir,2) u.build(Barracks,Up,100) u.train(Light,Down,20)} for(Unit u){u.harvest(9) u.attack(Closest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;S_S;S;C;Train;Heavy;Up;100;S;For_S;S;C;Build;Barracks;Left;25;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;20	for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){u.train(Worker,Down,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle()}} u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,EnemyDir,20) for(Unit u){u.train(Heavy,Up,100) for(Unit u){u.build(Barracks,Left,25)}} if(u.isBuilder()) then {for(Unit u){u.harvest(20)}}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Right;25;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;C;Train;Worker;Left;7;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(3) u.idle() u.harvest(5)} u.train(Heavy,Right,25) u.train(Light,Up,4) u.train(Worker,Left,7) for(Unit u){u.build(Barracks,EnemyDir,8)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;25;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;C;Train;Worker;Left;7;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.harvest(3) u.idle()} u.train(Heavy,Right,25) u.train(Light,Up,4) u.train(Worker,Left,7) for(Unit u){u.build(Barracks,EnemyDir,8)} u.attack(Weakest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;Empty;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Idle;S;C;Harvest;5;S;For_S;S;C;Train;Light;Up;5;S;C;Train;Worker;Left;100;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;EnemyDir;50	for(Unit u){if(HaveQtdUnitsAttacking(4)) then {e} else { u.idle()} for(Unit u){u.train(Worker,Up,5) u.idle()} u.harvest(5) for(Unit u){u.train(Light,Up,5)} u.train(Worker,Left,100) u.build(Barracks,Left,4) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(Weakest)}} u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,EnemyDir,50)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Train;Ranged;Left;10;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.harvest(2) u.train(Ranged,Left,10) for(Unit u){u.idle()} u.build(Barracks,Down,7) u.moveToUnit(Ally,Strongest) u.attack(Strongest) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,4)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;Train;Ranged;Left;10;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,Left,10) u.build(Barracks,Down,7) u.attack(LessHealthy) u.train(Worker,EnemyDir,4)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;EnemyDir;100;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;20;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Ranged;EnemyDir;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.attack(Closest)} if(u.is(Ranged)) then {u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,EnemyDir,100)}} u.build(Barracks,EnemyDir,5) u.harvest(20)} for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Ranged,EnemyDir,7)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Up;25;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(1)} u.train(Worker,Up,25) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Down;5;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;C;Harvest;100;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;4	for(Unit u){for(Unit u){u.train(Ranged,Down,5)} for(Unit u){u.build(Barracks,Right,8) u.harvest(100) u.attack(Closest) u.train(Worker,Left,4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;8;S;S_S;S;C;Harvest;9;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,8)} u.harvest(9) u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Left,50)} u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;Build;Barracks;Left;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,5)} u.harvest(2) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)} u.build(Barracks,Left,15)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;C;Attack;Weakest	for(Unit u){u.harvest(5) u.moveAway() for(Unit u){u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Harvest;100;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;6	for(Unit u){u.harvest(5) u.moveAway() for(Unit u){u.idle() u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.harvest(100) u.attack(LessHealthy) u.train(Worker,Left,6)}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;Left;10;S;C;Harvest;2;S;C;Train;Worker;Up;6;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;2;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,Left,10) u.harvest(2) u.train(Worker,Up,6)} for(Unit u){u.idle() for(Unit u){u.train(Heavy,EnemyDir,2)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Left;25;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;LessHealthy;S;C;Train;Light;Down;2	for(Unit u){u.harvest(5) u.idle() u.train(Worker,Up,8) u.train(Worker,Left,25) u.train(Ranged,Right,1) u.build(Barracks,Left,50) u.attack(LessHealthy) u.train(Light,Down,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;25;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;1;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Up;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;0;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Right,25) for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,1)}} for(Unit u){u.idle()}} for(Unit u){u.harvest(1) u.train(Worker,EnemyDir,2) u.build(Barracks,Up,6) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(0)) then {e} else { u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Harvest;2;S;C;Train;Worker;Right;100;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;10;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;2;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100)} for(Unit u){for(Unit u){u.harvest(5)} u.idle() u.train(Heavy,Up,10)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest)} u.train(Worker,Right,2)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;C;Harvest;5;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;2;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.train(Heavy,Down,20) u.harvest(5)} u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest)} u.train(Worker,Right,2)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Left;25;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;LessHealthy;S;C;Train;Light;Down;2	for(Unit u){u.harvest(2) u.idle() u.train(Worker,Up,8) u.train(Worker,Left,25) u.train(Ranged,Right,1) u.build(Barracks,Left,50) u.attack(LessHealthy) u.train(Light,Down,2)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;2;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.idle()} u.train(Worker,Up,100) u.moveToUnit(Enemy,MostHealthy)} if(OpponentHasNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest)} u.train(Worker,Right,2)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Heavy;Right;15;S;S_S;S;C;Idle;S;C;Harvest;2;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Down,1) for(Unit u){u.train(Heavy,Right,15)} u.idle() u.harvest(2)} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;2;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;C;Train;Heavy;Left;2;S;For_S;S;C;Harvest;1	for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Light,Left,2) u.build(Barracks,EnemyDir,50)} for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;10;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.harvest(5)} u.train(Worker,Down,3) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,10)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Train;Light;Up;6;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;C;Train;Heavy;Up;6;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Weakest) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100) for(Unit u){u.train(Light,Up,6)} u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.harvest(5)} u.train(Worker,Down,3) u.idle() u.train(Heavy,Up,6)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Train;Light;Up;6;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) u.attack(Weakest) for(Unit u){u.build(Barracks,Down,50)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.harvest(2)} u.train(Worker,Right,100) for(Unit u){u.train(Light,Up,6)} u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.harvest(5)} u.train(Worker,Down,3) u.idle() u.attack(Weakest)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Train;Light;Up;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.build(Barracks,Down,50)} u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.harvest(2)} u.attack(Closest) u.train(Worker,Right,100) for(Unit u){u.train(Light,Up,6)} u.moveToUnit(Enemy,MostHealthy)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Up;100;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.build(Barracks,Right,7) u.harvest(15) u.idle() u.moveToUnit(Enemy,MostHealthy) u.moveAway()} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,2) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest) u.train(Heavy,Up,100) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Up;100;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Ranged;Left;10;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.build(Barracks,Right,7) u.harvest(15) u.idle() u.moveToUnit(Enemy,MostHealthy) u.moveAway()} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,2) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest) u.train(Heavy,Up,100) u.moveToUnit(Ally,Strongest) u.train(Ranged,Left,10) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;C;Train;Light;Down;50	for(Unit u){u.build(Barracks,Right,7) u.harvest(15) u.idle() u.moveToUnit(Enemy,MostHealthy) u.moveAway()} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){u.train(Light,Down,50)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Harvest;15;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;7;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Up;100;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Ranged;Left;10;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.build(Barracks,Right,7) u.harvest(15) u.idle() u.moveToUnit(Enemy,MostHealthy) u.moveAway()} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,Up,2) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,7) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Farthest) u.train(Heavy,Up,100) u.moveToUnit(Ally,Strongest) u.train(Ranged,Left,10) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;C;Build;Base;Up;50;S;C;Attack;Weakest	for(Unit u){u.harvest(5) u.moveAway() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle() u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){u.build(Base,Up,50) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Up;9;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;10;S;C;Harvest;4;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;C;Build;Base;Up;50;S;C;Attack;Closest	for(Unit u){u.harvest(5) u.moveAway() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.train(Light,Up,9)}} for(Unit u){u.train(Light,EnemyDir,10) u.harvest(4)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){u.build(Base,Up,50) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(5) u.moveAway() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle() u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;10;S;Empty;S;C;Attack;Closest	for(Unit u){u.harvest(5) u.moveAway() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle() u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(10)}} else { e}} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Harvest;9;S;Empty;S;C;Attack;Closest	for(Unit u){u.harvest(5) u.moveAway() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle() u.train(Light,EnemyDir,15)} u.build(Barracks,Up,1) u.train(Worker,Left,6)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(9)}} else { e}} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.build(Barracks,Down,50)} u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Up,4)} u.attack(MostHealthy)}} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.build(Barracks,Down,50)} u.harvest(20) if(u.canHarvest()) then {for(Unit u){u.train(Heavy,Up,4)} u.attack(MostHealthy)}} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;100;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;S_S;S;C;Train;Heavy;Up;3;S;C;Train;Light;Right;7	for(Unit u){if(u.isBuilder()) then {u.harvest(100)} u.attack(Strongest) for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,2)} u.train(Heavy,Up,3) u.train(Light,Right,7)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;100;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Heavy;Up;3;S;C;Train;Light;Right;3	for(Unit u){if(u.isBuilder()) then {u.harvest(100)} u.attack(Strongest) for(Unit u){for(Unit u){u.idle() u.build(Barracks,Right,2)} u.train(Heavy,Up,3) u.train(Light,Right,3)}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Left;3;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.build(Barracks,Up,6) u.harvest(7) u.attack(Closest) u.train(Light,Left,3) for(Unit u){u.train(Heavy,Left,100)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Light;Left;10;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,LessHealthy)}} u.train(Light,Left,10) for(Unit u){u.build(Barracks,Left,6)} u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(9)} for(Unit u){u.train(Heavy,Right,1)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Right;20;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(20) u.attack(LessHealthy) u.train(Heavy,Right,20) for(Unit u){u.build(Barracks,Left,25)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;C;Build;Barracks;Left;3;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Left,100)} u.build(Barracks,Left,3) u.harvest(8) u.moveToUnit(Ally,LessHealthy) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Left;2;S;C;Build;Barracks;Left;1;S;C;Harvest;3;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Left,2)} u.build(Barracks,Left,1) u.harvest(3) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;8;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Right,8) u.build(Barracks,EnemyDir,1) u.harvest(50)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Idle;S;C;Train;Light;Up;1;S;C;Attack;MostHealthy;S;C;Train;Ranged;Down;4	for(Unit u){u.build(Barracks,Down,100) u.harvest(9) u.idle() u.train(Light,Up,1) u.attack(MostHealthy) u.train(Ranged,Down,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Harvest;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;20	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle()}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,9) u.harvest(9)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} u.train(Ranged,Right,20)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveAway;S;C;Train;Light;Left;4	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle()}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,9) u.harvest(9)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveAway()} u.train(Light,Left,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Left;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Harvest;9;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Right;20	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Left,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,9) u.harvest(9)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.train(Ranged,Right,20)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Heavy;Right;50;S;C;Train;Ranged;Right;20	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Heavy,Right,50)} u.train(Ranged,Right,20)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Light;Up;100;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.moveAway() u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,3) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}}} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.moveAway() u.attack(Closest) for(Unit u){u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.moveAway() u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;S_S;S;C;Train;Heavy;Up;5;S;C;Harvest;2;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Down,4) u.build(Barracks,Left,2) u.harvest(4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} for(Unit u){u.train(Heavy,Up,5) u.harvest(2)} u.attack(Closest) u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;3;S;C;Harvest;6;S;C;Train;Heavy;Left;10;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle() u.train(Worker,Right,3) u.harvest(6) u.train(Heavy,Left,10) u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;3;S;C;Harvest;6;S;C;Train;Ranged;Up;100;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle() u.train(Worker,Right,3) u.harvest(6) u.train(Ranged,Up,100) u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Closest;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,2) u.train(Worker,Right,3) u.harvest(6) if(u.canHarvest()) then {for(Unit u){u.idle()} for(Unit u){u.attack(Closest)}} u.train(Heavy,Left,10) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Heavy;Left;5;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;C;Train;Light;Down;50;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Heavy,Left,5)}} u.train(Worker,Right,4)} u.attack(Farthest) u.train(Light,Down,50) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(10)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest)}} u.moveToUnit(Ally,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,MostHealthy) if(u.canHarvest()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Closest)}} else { e} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Heavy;Left;5;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;50;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Heavy,Left,5)}} u.train(Worker,Right,4)} u.attack(Farthest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(10)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Weakest)}} u.moveToUnit(Ally,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest)} u.train(Light,Left,50) u.moveToUnit(Enemy,MostHealthy) if(u.canHarvest()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Closest)}} else { e} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Train;Light;Down;50;S;For_S;S;C;Build;Barracks;Down;3;S;If_B_then_S_else_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HaveQtdUnitsAttacking(100)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { for(Unit u){u.idle() u.harvest(100) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.train(Light,Down,50)} for(Unit u){u.build(Barracks,Down,3)}}} if(u.is(Worker)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Closest)} if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Farthest)}} else { for(Unit u){u.train(Heavy,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy)}}}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Left;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Heavy;Down;4	for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Left,1)} for(Unit u){u.build(Barracks,Right,15) u.attack(Closest) u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Heavy,Down,4)}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Heavy;Down;4	for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,50) u.attack(LessHealthy) u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Heavy,Down,4)}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;50;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;Train;Heavy;Down;10	for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,50) u.attack(MostHealthy) u.train(Worker,Down,2)} for(Unit u){u.train(Heavy,Down,10)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;9;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;C;Train;Worker;Up;7	for(Unit u){u.idle() u.train(Ranged,Right,9) u.harvest(9) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,3)} u.train(Worker,Up,7)}
S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;10;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Right;15	if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.build(Barracks,Left,10) u.harvest(10) u.train(Worker,Right,4) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,LessHealthy)} u.idle() u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Right,15)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;Train;Ranged;Left;10;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;is_Type;Ranged;S;Empty;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;MostHealthy	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,Left,10) u.build(Barracks,Down,7) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,4) if(u.is(Ranged)) then {e} else { u.train(Worker,EnemyDir,15) u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Ranged;Left;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;MostHealthy	for(Unit u){u.harvest(2) u.train(Ranged,Left,10) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Strongest)}} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,4) if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { u.train(Worker,EnemyDir,15) u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Left;50;S;C;Harvest;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Train;Light;Down;4;S;C;Idle;S;C;Build;Barracks;Up;5;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Enemy,LessHealthy)}} u.train(Worker,Left,50) u.harvest(6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,4) u.idle()}}} u.build(Barracks,Up,5) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;50;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Right;3;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Left;25	for(Unit u){for(Unit u){u.idle()}} for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Enemy,LessHealthy)} if(u.is(Ranged)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,50)}}} u.build(Barracks,EnemyDir,5) u.harvest(20)} for(Unit u){u.train(Light,Right,1) u.train(Light,Right,3) for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}} u.train(Ranged,Left,25)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Up;100;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(10) u.moveAway() for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,3) u.train(Ranged,Up,100)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Barracks;Down;25;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Right;3;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Barracks,Down,25)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { u.harvest(3)}} for(Unit u){u.train(Light,Right,1) u.train(Light,Right,3) for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Build;Barracks;Down;8;S;S_S;S;S_S;S;C;Harvest;5;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,5) u.train(Worker,EnemyDir,8) u.build(Barracks,Down,8) u.harvest(5) u.moveAway() u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Train;Heavy;Right;1;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,5) u.train(Heavy,Right,1) u.build(Barracks,Down,100) u.harvest(7) u.moveAway() u.attack(Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Train;Heavy;Up;1;S;S_S;S;C;Build;Barracks;Down;100;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,5) u.train(Heavy,Up,1) u.build(Barracks,Down,100) u.harvest(7) u.moveToUnit(Enemy,Weakest) u.moveAway() u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;20;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Light;Down;6;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Up,20)} for(Unit u){u.harvest(9)} for(Unit u){u.train(Light,Down,6) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(100) u.moveAway() u.attack(Closest) u.moveToUnit(Ally,Strongest) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.train(Heavy,Down,50) u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.train(Light,Left,7)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;50;S;C;Harvest;2;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Light,Down,20) for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.build(Barracks,Down,50)} u.harvest(2) u.harvest(20) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()}} for(Unit u){u.moveAway() u.attack(Closest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Left;2;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,2) if(u.is(Heavy)) then {if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Closest)} u.idle()} u.harvest(2) for(Unit u){u.train(Heavy,Left,2)}} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Left;8;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Left,2) if(u.is(Heavy)) then {if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Closest)} u.idle()} u.harvest(2) for(Unit u){u.train(Heavy,Left,8)}} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;5;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Up,5) u.harvest(8) u.train(Heavy,EnemyDir,50) u.attack(LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){u.idle()}}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;25;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Heavy;Right;20;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest;S;C;Idle	if(HasNumberOfUnits(Barracks,25)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Heavy,Right,20)} for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(9) u.moveToUnit(Enemy,Closest) u.idle()}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;7;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;5;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Up,5) for(Unit u){u.idle()} u.train(Light,Left,7) if(u.isBuilder()) then {for(Unit u){u.harvest(5)}} u.attack(LessHealthy) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;9;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;For_S;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(3) for(Unit u){u.train(Heavy,Up,10)} u.build(Barracks,Right,1) if(u.canHarvest()) then {u.harvest(9)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(MostHealthy)} if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} if(u.is(Base)) then {u.moveToUnit(Enemy,Strongest)} u.attack(LessHealthy)} for(Unit u){u.train(Worker,Right,4) for(Unit u){u.train(Light,Down,25)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Train;Heavy;Right;4;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;Empty	for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Right,4) u.harvest(4) for(Unit u){u.idle()} for(Unit u){if(u.canHarvest()) then {e} else { u.attack(Strongest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway() u.train(Ranged,EnemyDir,20)}} else { e}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;15;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.idle() for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Strongest) u.train(Light,EnemyDir,15) u.moveToUnit(Ally,Closest)} else { e}} for(Unit u){u.moveAway() u.attack(Weakest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Train;Light;EnemyDir;15;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.idle() u.attack(Closest) for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Light,EnemyDir,15) u.moveToUnit(Ally,Closest)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Ranged;Right;3;S;Empty	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.idle() u.attack(Closest) for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Ranged,Right,3)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.idle() u.attack(Closest) for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Attack;Strongest;S;C;Train;Ranged;Right;3;S;Empty;S;For_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.idle() for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Strongest) u.train(Ranged,Right,3)} else { e}} for(Unit u){u.moveAway() u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;9;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;EnemyDir;6;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle() for(Unit u){if(u.canHarvest()) then {u.harvest(9)} else { u.train(Heavy,Up,50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Strongest) u.train(Ranged,EnemyDir,6) u.moveToUnit(Ally,LessHealthy)} else { e}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Left;7;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;7;S;C;Attack;Strongest;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Left,5) u.build(Base,Left,7) u.idle() u.train(Heavy,Up,5) u.harvest(4) u.build(Barracks,Left,7) u.attack(Strongest) if(u.is(Ranged)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Left;7;S;S_S;S;C;Idle;S;C;Train;Light;Right;5;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;7;S;C;Harvest;8;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,5) u.build(Base,Left,7) u.idle() u.train(Light,Right,5) u.harvest(4) u.build(Barracks,Left,7) u.harvest(8) u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Left;7;S;S_S;S;C;Idle;S;C;Train;Light;Right;5;S;S_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;7;S;C;Train;Ranged;Right;100;S;C;Harvest;8;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,5) u.build(Base,Left,7) u.idle() u.train(Light,Right,5) u.harvest(4) u.build(Barracks,Left,7) u.train(Ranged,Right,100) u.harvest(8) u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;Train;Worker;Down;15;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;1;S;C;Harvest;20;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Down,15) for(Unit u){if(HasLessNumberOfUnits(Worker,3)) then {u.train(Worker,Down,15) u.attack(MostHealthy)}} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.harvest(20)} else { u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.attack(Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;Train;Worker;Down;15;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;1;S;S_S;S;C;Harvest;20;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Down,15) for(Unit u){if(HasLessNumberOfUnits(Worker,3)) then {u.train(Worker,Down,15) u.attack(MostHealthy)}} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.harvest(20) u.moveAway()} else { u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.attack(Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;Train;Worker;Down;15;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;1;S;C;Harvest;20;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;6;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Down,15) for(Unit u){if(HasLessNumberOfUnits(Worker,3)) then {u.train(Worker,Down,15) u.attack(MostHealthy)}} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.harvest(20)} else { u.moveToUnit(Ally,LessHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(6)}} for(Unit u){u.attack(Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;3;S;S_S;S;C;Train;Worker;Down;15;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;5;S;For_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;1;S;C;Harvest;20;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Down,15) for(Unit u){if(HasLessNumberOfUnits(Worker,3)) then {u.train(Worker,Down,15) u.attack(MostHealthy)}} for(Unit u){u.build(Barracks,Left,5)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Base,1)) then {u.harvest(20)} else { u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.attack(Closest) for(Unit u){u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Heavy;Left;3;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Heavy,Left,3)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) u.moveAway() u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;Left;20	for(Unit u){if(u.isBuilder()) then {u.harvest(1) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.train(Worker,Right,2) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Ranged,Left,20)}}}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;Left;20	for(Unit u){if(u.isBuilder()) then {u.harvest(1) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.train(Worker,Right,2) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Ranged,Left,20)}}}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Up;100;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;Train;Ranged;EnemyDir;8	for(Unit u){if(u.isBuilder()) then {u.idle() u.harvest(1) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,100)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.train(Worker,Right,2) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.train(Light,Right,7)} u.train(Ranged,EnemyDir,8)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Right;1;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.train(Worker,EnemyDir,2)}} u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,2) u.harvest(9)} for(Unit u){u.train(Light,Up,100) for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Right,2)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveAway;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Weakest;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Left;7;S;C;Build;Barracks;Left;9;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Ranged;Down;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Down,5) u.moveAway() u.idle() for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Enemy,Closest)} u.harvest(4) if(HasNumberOfWorkersHarvesting(5)) then {u.attack(Weakest)} else { u.idle()}} if(u.isBuilder()) then {e} else { u.attack(Closest)} u.train(Heavy,Left,7) u.build(Barracks,Left,9) u.harvest(10) u.train(Ranged,Down,4) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Train;Heavy;Right;15;S;S_S;S;C;Train;Worker;Right;3;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveAway;S;C;Harvest;6;S;C;Attack;Farthest;S;For_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;3;S;C;Train;Ranged;Right;5	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.train(Heavy,Right,15) u.train(Worker,Right,3) if(u.OpponentHasUnitInPlayerRange()) then {u.moveAway()} u.harvest(6) u.attack(Farthest)} for(Unit u){for(Unit u){u.train(Ranged,Up,3) u.train(Ranged,Right,5)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;3;S;C;Train;Worker;Right;2;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;8;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Harvest;8;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,3) u.train(Worker,Right,2)} for(Unit u){u.harvest(1) u.build(Barracks,Up,8) for(Unit u){u.train(Heavy,EnemyDir,20)} u.harvest(8) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Down;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Build;Base;Right;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Harvest;4;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Down,2)} for(Unit u){u.build(Barracks,Up,1) for(Unit u){u.build(Base,Right,3)} for(Unit u){u.train(Heavy,EnemyDir,20)} u.harvest(4) u.attack(Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Harvest;4;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Down;9	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Down,7)} for(Unit u){u.harvest(1) u.build(Barracks,Up,1) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Heavy,EnemyDir,20)} u.harvest(4) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Light,Down,9)}
S;For_S;S;S_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;100;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Heavy;Down;8;S;C;Train;Worker;Up;5	for(Unit u){u.train(Light,EnemyDir,15) for(Unit u){u.idle() u.build(Barracks,Up,1) u.harvest(100) u.attack(Closest)} for(Unit u){if(HasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Ally,Farthest)} u.train(Heavy,Down,8) u.train(Worker,Up,5)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Left;1;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Left;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Down,1) u.harvest(5) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.attack(MostHealthy) if(HasNumberOfUnits(Light,1)) then {if(u.canAttack()) then {e} else { for(Unit u){u.idle()}}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Light,Left,1)} if(u.isBuilder()) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)}}}} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Left,5)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Left;1;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Down;1;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Left;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Down,1) u.harvest(5) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.idle() u.attack(Weakest) if(HasNumberOfUnits(Light,1)) then {if(u.canAttack()) then {e} else { for(Unit u){u.idle()}}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Light,Left,1)} if(u.isBuilder()) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)}}}} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} u.moveToUnit(Enemy,Farthest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Down,1)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Left,5)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;C;Train;Ranged;Left;10;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Harvest;6	for(Unit u){u.harvest(2) u.idle() u.train(Ranged,Left,10) u.build(Barracks,Down,7) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,10) u.harvest(6)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;EnemyDir;20;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;8;S;C;Harvest;20;S;S_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,EnemyDir,20)}} for(Unit u){u.build(Barracks,Up,8) u.harvest(20) u.idle() u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;8;S;C;Train;Light;Down;50;S;C;Build;Barracks;EnemyDir;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;3;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Light,Right,8) u.train(Light,Down,50)} u.build(Barracks,EnemyDir,100) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Ally,MostHealthy) u.harvest(3)} u.harvest(8) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Down;25;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Harvest;6	for(Unit u){u.harvest(2) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,25) u.train(Worker,EnemyDir,10) u.harvest(6)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Down;25;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.harvest(2) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} u.build(Barracks,Down,7) u.attack(Strongest) u.train(Light,Down,25) u.train(Worker,EnemyDir,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Harvest;2;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Down;25;S;C;Train;Worker;EnemyDir;9	for(Unit u){for(Unit u){u.train(Heavy,Up,4)} u.harvest(2) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} u.build(Barracks,Down,7) u.attack(Strongest) u.train(Light,Down,25) u.train(Worker,EnemyDir,9)}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;3;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;15;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(2) u.build(Barracks,Right,3) u.idle() u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,15) u.moveAway() for(Unit u){u.train(Light,Left,2)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy) u.train(Ranged,Right,15) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,4) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;3;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;15;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(2) if(u.canAttack()) then {e} else { u.train(Worker,Down,7)} u.build(Barracks,Right,3) u.idle() u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,15) u.moveAway() for(Unit u){u.train(Light,Left,2)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) u.train(Ranged,Right,15) u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(2) if(u.canAttack()) then {e} else { u.train(Worker,Down,7)} u.build(Barracks,Left,15) u.idle() u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveAway() u.train(Heavy,Left,9) for(Unit u){u.train(Light,Left,2)} u.moveToUnit(Ally,Closest) u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) u.train(Ranged,Right,15) u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Down;7;S;C;Build;Barracks;Left;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(2) if(u.canAttack()) then {e} else { u.train(Worker,Down,7)} u.build(Barracks,Left,15) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveAway() u.train(Heavy,Left,9) for(Unit u){u.train(Light,Left,2)} u.moveToUnit(Ally,Closest) u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) u.train(Ranged,Right,15) u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Left;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;25;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway	for(Unit u){u.harvest(2) u.build(Barracks,Left,15) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.moveAway() for(Unit u){u.train(Light,Left,2)} for(Unit u){u.train(Light,Down,25)} u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,4) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}}}
S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;50;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;8	for(Unit u){u.build(Barracks,Left,6) u.harvest(50) u.train(Worker,Up,2) u.idle() u.attack(MostHealthy) u.train(Light,EnemyDir,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;8;S;C;Build;Barracks;Left;100;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Attack;Strongest;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(8)} u.build(Barracks,Left,100) u.train(Light,EnemyDir,7) u.attack(Strongest) u.train(Worker,Left,25)}
S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;25	for(Unit u){u.attack(Strongest) u.train(Worker,Left,25)}
S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Right;2;S;C;Build;Barracks;Left;1;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Left,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(3) u.train(Heavy,Right,2) u.build(Barracks,Left,1) u.attack(Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Right;2;S;C;Build;Barracks;Left;1;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Left,7)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(5) u.train(Heavy,Right,2) u.build(Barracks,Left,1) u.attack(Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Right;2;S;C;Build;Barracks;Left;1;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Left,7)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(2) u.harvest(3) u.train(Heavy,Right,2) u.build(Barracks,Left,1) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;C;Train;Heavy;EnemyDir;1;S;For_S;S;C;Build;Barracks;Right;9	for(Unit u){u.harvest(3) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()}} for(Unit u){u.train(Worker,Left,25) u.train(Heavy,EnemyDir,1)} for(Unit u){u.build(Barracks,Right,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;25;S;C;Train;Heavy;EnemyDir;1;S;For_S;S;C;Build;Barracks;Right;9	for(Unit u){u.harvest(3) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()}} for(Unit u){u.train(Worker,Up,25) u.train(Heavy,EnemyDir,1)} for(Unit u){u.build(Barracks,Right,9)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;25;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;For_S;S;C;Attack;Weakest	for(Unit u){u.harvest(3) for(Unit u){u.idle()}} for(Unit u){u.train(Worker,Up,25) if(u.canAttack()) then {u.moveAway()}} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Right;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Right,3)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Weakest) u.train(Ranged,Right,7) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Train;Ranged;Right;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,3)} for(Unit u){u.harvest(7)} for(Unit u){u.train(Light,EnemyDir,9) u.train(Ranged,Right,7) u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;2;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Up;5	for(Unit u){u.build(Barracks,Right,3)} for(Unit u){u.harvest(5)} for(Unit u){u.train(Ranged,Down,2) u.train(Heavy,Up,3) u.idle() u.attack(Strongest) u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Up,5)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;Train;Light;Up;2;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Ranged;Up;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;100	for(Unit u){for(Unit u){u.train(Heavy,Left,15) u.train(Light,Up,2)} u.attack(Weakest) u.train(Ranged,Up,2) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(100)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;100	for(Unit u){for(Unit u){u.train(Heavy,Left,15) u.idle()} u.attack(Weakest) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(100)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Enemy,Closest)}
S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Attack;LessHealthy;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;4;S;C;Harvest;25	if(HasNumberOfUnits(Ranged,7)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(LessHealthy)} else { u.attack(Strongest)}} u.moveToUnit(Enemy,Strongest) u.train(Worker,EnemyDir,4)} u.harvest(25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;S_S;S;C;Train;Ranged;Left;20;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,EnemyDir,2) u.train(Heavy,Right,8) u.train(Ranged,Left,20) for(Unit u){for(Unit u){u.build(Barracks,Left,25)} u.attack(Closest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;C;Train;Worker;Up;2;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;20;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Harvest;10	for(Unit u){u.idle() u.moveAway() u.train(Worker,Up,2) u.attack(MostHealthy) for(Unit u){u.train(Heavy,Down,20)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,20)} else { u.moveToUnit(Enemy,Farthest)} u.train(Light,EnemyDir,9) u.harvest(10)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;50;S;C;Harvest;6;S;C;Build;Barracks;Up;8;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.train(Light,Down,50)} u.harvest(6) u.build(Barracks,Up,8) u.attack(Closest) u.moveToUnit(Ally,Weakest) u.train(Worker,Right,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;7;S;For_S;S;C;Train;Light;Down;50;S;C;Harvest;2;S;C;Build;Barracks;Up;8;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(OpponentHasNumberOfUnits(Worker,7)) then {for(Unit u){u.train(Light,Down,50)}} u.harvest(2) u.build(Barracks,Up,8) u.attack(Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,100)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;S_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Worker;Left;4;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;5;S;C;Attack;Strongest	for(Unit u){u.idle() u.harvest(1) u.train(Light,Up,100) u.build(Barracks,EnemyDir,1) u.train(Worker,Left,4) if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) u.harvest(5)} u.attack(Strongest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Worker;Down;25;S;C;Attack;Weakest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,EnemyDir,50)} u.harvest(2) u.build(Barracks,EnemyDir,20) u.train(Worker,Down,25) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Right;10;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;100;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(4) u.train(Ranged,Right,10) for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,100)} u.idle() u.build(Barracks,Left,50) u.attack(Weakest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;100;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Ranged,Right,10) for(Unit u){u.harvest(4)} for(Unit u){u.idle() u.train(Worker,Down,100)} u.build(Barracks,Up,50) u.attack(Weakest) u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;9;S;C;Train;Worker;Left;4;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;Attack;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(1) u.train(Light,Up,100) u.build(Barracks,EnemyDir,1) u.harvest(9) u.train(Worker,Left,4) if(HasNumberOfUnits(Light,1)) then {u.attack(Weakest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;9;S;C;Attack;Strongest;S;C;Train;Worker;Left;4;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(1) u.train(Light,Up,100) u.build(Barracks,EnemyDir,1) u.harvest(9) u.attack(Strongest) u.train(Worker,Left,4) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;MoveAway;S;C;Train;Light;Left;10;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Down,3) u.idle() u.train(Worker,Down,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveAway() u.train(Light,Left,10)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;7;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;S_S;S;C;Train;Light;Up;10;S;C;Build;Barracks;Down;7;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Worker,Up,7) u.harvest(4) for(Unit u){u.train(Light,Up,10) u.build(Barracks,Down,7)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Idle;S;C;Train;Worker;Right;25;S;C;Attack;Weakest;S;For_S;S;C;Harvest;4	for(Unit u){u.moveAway() for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.idle()} u.train(Worker,Right,25) u.attack(Weakest) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Left;8;S;S_S;S;C;Harvest;1;S;S_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Worker;Left;4;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Base,Left,8) u.harvest(1) u.train(Light,Up,100) u.build(Barracks,EnemyDir,1) u.train(Worker,Left,4) u.idle() u.harvest(25) if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,MostHealthy)} u.attack(Strongest) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Harvest;100;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;C;Build;Barracks;Right;15;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;6;S;Empty;S;C;Train;Ranged;Right;20;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,EnemyDir,6) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.harvest(100)} u.idle()} u.harvest(4) if(u.isBuilder()) then {u.moveAway()} u.build(Barracks,Right,15) u.moveAway() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,6)}} else { e} u.train(Ranged,Right,20) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Build;Base;Right;15;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy	for(Unit u){u.harvest(1)} for(Unit u){u.build(Base,Right,15) u.idle() u.train(Worker,Down,7) u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Train;Worker;Left;7	for(Unit u){u.harvest(1) u.attack(Strongest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.train(Worker,Left,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;2;S;For_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;15;S;For_S;S;C;Harvest;3	for(Unit u){u.attack(Farthest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,2) for(Unit u){for(Unit u){u.train(Ranged,Left,5)}} for(Unit u){u.idle() u.build(Barracks,Up,15)} for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;For_S;S;C;Train;Heavy;Down;1;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Weakest	for(Unit u){u.harvest(4) u.train(Light,Down,10) for(Unit u){u.train(Heavy,Down,1)} for(Unit u){u.train(Worker,Up,100)} u.idle() u.build(Barracks,Left,50) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Ranged;Down;10;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.harvest(2) u.train(Ranged,Down,10) for(Unit u){u.train(Worker,Up,100)} u.build(Barracks,Left,50) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Train;Heavy;Down;1;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;100;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(4) u.train(Ranged,Right,10) for(Unit u){u.train(Heavy,Down,1)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,100)} u.idle() u.build(Barracks,Left,50) u.attack(Weakest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;C;Train;Worker;Up;2;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;20;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.moveAway() u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Up,20)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,20)} else { u.moveToUnit(Ally,MostHealthy)} u.train(Light,EnemyDir,9) u.harvest(10) u.moveToUnit(Enemy,Weakest)}}} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;C;Train;Light;Up;7;S;C;Train;Worker;Right;7;S;C;Build;Barracks;Right;9;S;For_S;S;C;Attack;Weakest	for(Unit u){u.harvest(3) u.idle() u.train(Light,Up,7) u.train(Worker,Right,7) u.build(Barracks,Right,9)} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;For_S;S;C;Train;Heavy;Down;7;S;Empty;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Left;6;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.harvest(3)} u.train(Worker,EnemyDir,15) u.moveToUnit(Enemy,Closest) if(u.is(Base)) then {for(Unit u){u.train(Heavy,Down,7)}} else { e} u.train(Ranged,Left,4) for(Unit u){u.harvest(4) u.build(Barracks,Left,6)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;10;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;Build;Barracks;Left;50;S;C;Attack;Weakest	for(Unit u){u.harvest(4) u.idle() u.train(Light,Left,10) for(Unit u){u.train(Worker,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} u.build(Barracks,Left,50) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;8;S;C;Build;Barracks;Down;5;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Down;5;S;C;Train;Light;Up;20	for(Unit u){u.harvest(3) for(Unit u){u.train(Worker,Up,8) u.build(Barracks,Down,5)} u.attack(Closest) u.train(Light,Down,5) u.train(Light,Up,20)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;9;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Down;8;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,Farthest)} u.train(Worker,EnemyDir,20) if(u.is(Light)) then {for(Unit u){u.attack(MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy)} for(Unit u){u.moveAway() u.harvest(9)}}} u.harvest(9) if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,Down,8)}} for(Unit u){u.idle() u.build(Barracks,EnemyDir,10)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;10;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;9;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Down;8;S;C;Train;Heavy;Left;25;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(10)) then {e} else { u.moveToUnit(Ally,Weakest)}}} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Ranged,Left,2)}} u.train(Worker,EnemyDir,20) if(u.is(Light)) then {for(Unit u){u.attack(MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)}} u.attack(LessHealthy) for(Unit u){u.moveAway() u.harvest(9)}}} u.harvest(9) u.moveAway() if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,Down,8)}} u.train(Heavy,Left,25) u.attack(Closest) for(Unit u){u.idle() u.build(Barracks,EnemyDir,10)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;10;S;For_S;S;C;Train;Heavy;Down;1;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.harvest(4) u.idle() u.train(Light,Left,10) for(Unit u){u.train(Heavy,Down,1)} for(Unit u){u.train(Worker,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} u.attack(Closest) for(Unit u){u.build(Barracks,Down,4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;For_S;S;C;Train;Heavy;Down;1;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;50;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Down,10) for(Unit u){u.train(Heavy,Down,1)} for(Unit u){u.train(Worker,Up,100)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,Weakest)} else { e}} u.harvest(5) for(Unit u){u.idle()}} u.build(Barracks,Left,50) u.moveToUnit(Ally,Weakest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;C;Build;Barracks;EnemyDir;15	for(Unit u){u.harvest(2) u.attack(Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){u.build(Barracks,EnemyDir,15)}}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Ranged;Down;10;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.harvest(2) u.train(Ranged,Down,10) for(Unit u){u.train(Light,EnemyDir,1)} for(Unit u){u.train(Worker,Up,100)} u.build(Barracks,Left,50) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;20;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;Idle;S;C;Harvest;10;S;C;Attack;Closest	for(Unit u){u.train(Worker,Up,2) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Up,20)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,20)} else { u.moveToUnit(Ally,MostHealthy)} u.train(Light,EnemyDir,9) u.idle() u.harvest(10)} u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Left;9;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Right;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.harvest(50) u.attack(LessHealthy) for(Unit u){u.train(Heavy,Left,9)} for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,10)}} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;2;S;C;Idle;S;C;Harvest;50;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Left;9;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Right;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Light,Right,2)} u.idle() u.harvest(50) if(u.isBuilder()) then {if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Strongest)}} u.attack(LessHealthy) for(Unit u){u.train(Heavy,Left,9)} for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,10)}} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Heavy;Right;7;S;For_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Train;Ranged;Right;10;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;20	for(Unit u){u.harvest(3) u.moveToUnit(Enemy,Closest) u.harvest(4) u.train(Heavy,Right,7) for(Unit u){u.train(Worker,Up,5)} u.train(Ranged,Right,10) u.idle() for(Unit u){u.build(Barracks,EnemyDir,20)} u.harvest(20)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Build;Barracks;Down;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;15;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(1) u.moveAway() u.build(Barracks,Down,15) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,15) for(Unit u){u.idle()} for(Unit u){u.train(Worker,Left,2)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}}} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;100;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,100) u.build(Barracks,Left,9) for(Unit u){u.train(Heavy,Down,2)} for(Unit u){u.harvest(2)} u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Train;Worker;Down;4;S;If_B_then_S;B;CanAttack;S;C;Harvest;8;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Right,10)} for(Unit u){u.harvest(2)} for(Unit u){u.idle()} u.build(Barracks,EnemyDir,50) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Down,4) if(u.canAttack()) then {u.harvest(8)}} else { e}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;1;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;C;Harvest;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;20;S;For_S;S;S_S;S;C;MoveAway;S;C;Train;Light;Up;9	for(Unit u){u.train(Heavy,Down,1) u.build(Barracks,Up,50) u.train(Worker,Down,4) u.harvest(2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)} u.harvest(20)} for(Unit u){u.moveAway() u.train(Light,Up,9)}
S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Up;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;100;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Right,2) u.idle() u.train(Heavy,Up,10) for(Unit u){u.idle() u.build(Barracks,Up,100)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;C;Harvest;3;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Ranged;Right;8;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;3	for(Unit u){for(Unit u){u.train(Light,Up,1)} u.harvest(1) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,100)} u.harvest(3) u.moveToUnit(Ally,Closest) u.train(Worker,Up,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){if(u.is(Barracks)) then {u.train(Ranged,Right,8)}} u.attack(Closest) for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.attack(Closest)} u.train(Worker,EnemyDir,3)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;Train;Ranged;Right;8;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Up,1)} u.harvest(1) u.build(Barracks,Left,50) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} u.harvest(3) u.train(Worker,Up,2) for(Unit u){u.train(Light,Up,3)} for(Unit u){if(u.is(Barracks)) then {u.train(Ranged,Right,8)}} u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;7;S;C;Idle;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveAway;S;C;Attack;Farthest;S;C;Train;Worker;Down;3	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Closest)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7) u.idle()} u.train(Light,Right,3) u.train(Ranged,Right,15) u.moveToUnit(Enemy,Closest) u.moveAway() u.attack(Farthest) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;7;S;C;Idle;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Closest)}}} u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7) u.idle()} u.train(Light,Right,3) u.train(Ranged,Right,15) u.moveToUnit(Enemy,Closest) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;7;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Left;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Closest)}}} u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7) u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} u.train(Light,Right,3) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,7) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;7;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Left;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Closest)}}} u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7) u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} u.train(Light,Right,3) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,7) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Left;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){for(Unit u){u.idle()} u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7)} u.moveToUnit(Ally,Closest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} u.train(Light,Right,3) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,7) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Left;7;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3	for(Unit u){for(Unit u){u.idle()} u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(7) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Closest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} u.train(Light,Right,3) u.moveToUnit(Enemy,Closest) u.train(Heavy,Left,7) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3)}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;100;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Train;Worker;Down;4;S;C;Harvest;9;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Up,100) u.build(Barracks,Up,50) u.train(Worker,Down,4) u.harvest(9)} for(Unit u){for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Ranged,Right,10) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.idle() u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;50;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Ranged,Right,10) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.idle() u.build(Barracks,Up,50) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Right;10;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;100;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Strongest	for(Unit u){u.idle() u.harvest(4) u.train(Ranged,Right,10) for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,100)} u.build(Barracks,Left,50) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;50;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Ranged,Right,10) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Left,10) u.train(Worker,Down,20)} u.idle() u.build(Barracks,Up,50) u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Ranged,Right,10) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.idle() u.build(Barracks,Left,50) u.attack(Closest) u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Up;9;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,9) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Right;20;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.train(Ranged,Right,20) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Right;20;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.train(Ranged,Right,20) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Right;20;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,1) for(Unit u){u.harvest(2)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.train(Ranged,Right,20) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Right;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.train(Ranged,Right,20) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Down;20;S;C;Build;Barracks;Up;7;S;S_S;S;S_S;S;C;Train;Ranged;Right;20;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Worker,Down,20)} u.build(Barracks,Up,7) u.train(Ranged,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Right;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.train(Ranged,Right,20) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Right;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,EnemyDir,50) u.attack(Closest) u.train(Ranged,Right,20) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;10;S;C;Train;Worker;Down;20;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;Right;20;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,50) u.moveToUnit(Ally,Weakest) u.train(Ranged,Right,1) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Left,10) u.train(Worker,Down,20)} u.attack(Closest) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Right,20) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Up;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Ranged,Down,1) if(u.is(Heavy)) then {e} else { u.build(Barracks,EnemyDir,25)} for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.attack(Closest) u.train(Ranged,Up,10) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Down,20) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Down,20) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,EnemyDir,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Right;20;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Harvest;5;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Ranged,Right,20)} if(u.is(Heavy)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest) u.harvest(5)}}} else { e} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Down,20) for(Unit u){u.harvest(4)} for(Unit u){u.train(Worker,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() for(Unit u){u.harvest(3)}} u.train(Ranged,Down,20) for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) if(u.is(Heavy)) then {for(Unit u){u.moveAway()}} u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Down,7) for(Unit u){u.idle() for(Unit u){u.harvest(3)}} for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) if(u.is(Heavy)) then {for(Unit u){u.attack(MostHealthy)}} u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;Train;Worker;Down;20;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Down,7) for(Unit u){u.idle() for(Unit u){u.harvest(3)}} for(Unit u){u.train(Worker,Right,2)} for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Down,10) u.train(Worker,Down,20)} u.build(Barracks,Up,50) u.attack(Closest) u.moveToUnit(Enemy,Farthest) if(u.is(Heavy)) then {for(Unit u){u.attack(MostHealthy)}} u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Up;8;S;S_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;25;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Worker,Right,7) for(Unit u){u.idle()} u.train(Light,Up,8) u.build(Barracks,Up,15) u.moveToUnit(Enemy,Closest) u.harvest(25) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(4) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;100;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;15;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(4) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.build(Barracks,Down,100)} u.moveToUnit(Enemy,Closest) u.harvest(15)} for(Unit u){u.train(Worker,Right,4)}} for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;S_S;S;C;Train;Heavy;Right;5;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.attack(Closest) u.train(Worker,Up,3)} u.train(Heavy,Right,5) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;Up;3;S;C;Train;Heavy;Right;9	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.idle() u.attack(Weakest) u.train(Worker,Up,3)} u.train(Heavy,Right,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Heavy;Right;9	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.idle() u.attack(Weakest)} u.train(Heavy,Right,9)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;C;Train;Heavy;Right;9	for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.idle() u.attack(Closest) u.train(Worker,Up,3)} u.train(Heavy,Right,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;C;Train;Heavy;Right;9	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.idle() u.attack(Closest) u.train(Worker,Up,3)} u.train(Heavy,Right,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;C;Train;Heavy;Right;9	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.idle() u.attack(LessHealthy) u.train(Worker,Up,3)} u.train(Heavy,Right,9)}
S;For_S;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;9;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;25;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;C;Train;Heavy;Down;9	for(Unit u){u.train(Light,Right,4) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} u.idle() if(HasNumberOfUnits(Worker,9)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(25) u.attack(LessHealthy) u.train(Worker,Up,3)} u.train(Heavy,Down,9)}
S;For_S;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Down;9	for(Unit u){u.train(Light,Right,4) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} u.idle() u.harvest(25) u.attack(LessHealthy) u.train(Worker,Up,3)} u.train(Ranged,Down,9)}
S;For_S;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;3;S;C;Train;Ranged;Down;9	for(Unit u){u.train(Light,Right,4) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} u.idle() u.harvest(25) u.attack(LessHealthy) u.train(Worker,EnemyDir,3)} u.train(Ranged,Down,9)}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;9;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;8;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Train;Worker;Right;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;1	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,9)} u.idle() if(u.canAttack()) then {u.attack(Strongest) for(Unit u){u.build(Barracks,Right,8) u.harvest(2) u.idle() for(Unit u){for(Unit u){u.train(Worker,Right,2)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy)}}} if(u.is(Light)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;8	for(Unit u){u.train(Worker,Up,6) if(u.isBuilder()) then {u.harvest(3)} else { for(Unit u){u.idle()}} u.build(Barracks,Down,25) u.attack(Closest) u.moveToUnit(Enemy,Closest) u.train(Light,Down,8)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Heavy;Up;7	for(Unit u){u.train(Worker,Up,6) if(u.isBuilder()) then {u.harvest(3)} else { for(Unit u){u.idle()}} u.build(Barracks,Down,25) u.attack(Closest) u.moveToUnit(Enemy,Closest) if(u.canHarvest()) then {e} else { u.train(Heavy,Up,7)}}
S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;5;S;S_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Ranged;Right;3;S;S_S;S;C;Train;Worker;Left;8;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.train(Heavy,Up,8) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.build(Barracks,Up,2) u.moveToUnit(Ally,MostHealthy) u.harvest(5)}} else { u.harvest(4) for(Unit u){u.train(Ranged,Right,3)} u.train(Worker,Left,8) u.idle()} u.attack(Closest) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3;S;S_S;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;3;S;For_S;S;For_S;S;C;Train;Heavy;Left;20	for(Unit u){for(Unit u){u.train(Light,Up,1)} u.harvest(1) u.build(Barracks,Left,50) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} u.harvest(3) u.train(Ranged,Down,100) u.moveToUnit(Ally,Closest) u.train(Worker,Up,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,EnemyDir,3)} u.attack(Closest) for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){u.attack(Closest)} u.train(Worker,EnemyDir,3)}} for(Unit u){for(Unit u){u.train(Heavy,Left,20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Ranged;Down;100;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,1)} u.harvest(1) u.build(Barracks,Left,50) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} u.harvest(3) u.train(Ranged,Down,100) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Up,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){if(HaveQtdUnitsAttacking(9)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Ranged;Down;100;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Up;50;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;3	for(Unit u){for(Unit u){u.train(Light,Up,1)} u.harvest(1) u.build(Barracks,Left,50) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} u.harvest(3) u.train(Ranged,Down,100) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Up,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.harvest(6) u.attack(Closest) for(Unit u){u.train(Ranged,Up,50) u.moveToUnit(Ally,Strongest)}} u.train(Worker,EnemyDir,3)}}}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;Down;6;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;2;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.is(Ranged)) then {u.attack(Closest)} for(Unit u){u.train(Light,Up,1)} u.harvest(1) u.build(Barracks,Left,50) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Down,6) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Up,2) for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.attack(Closest)}}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;C;Train;Light;Right;7;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20) u.attack(Closest)} u.train(Light,Right,7) for(Unit u){u.idle()}} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Train;Light;EnemyDir;100;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.harvest(20) u.train(Light,EnemyDir,100) u.idle() u.attack(Strongest) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Train;Light;Right;7;S;For_S;S;S_S;S;C;Build;Barracks;Up;8;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Right,7)} for(Unit u){u.build(Barracks,Up,8) u.harvest(1) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;100;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,EnemyDir,100)} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.harvest(6) u.attack(Strongest) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;Up;3;S;C;Train;Worker;Up;8;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Heavy;Left;1;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.train(Light,Up,3)} u.train(Worker,Up,8)} for(Unit u){for(Unit u){u.build(Barracks,Up,2)} u.train(Heavy,Left,1) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,Weakest)} u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Build;Base;Down;4;S;C;Train;Light;Right;10;S;For_S;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.build(Barracks,Up,50) u.attack(Closest) for(Unit u){u.harvest(5)} for(Unit u){u.build(Base,Down,4)} u.train(Light,Right,10)} for(Unit u){u.train(Worker,EnemyDir,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;C;Train;Light;Down;10;S;For_S;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.build(Barracks,Up,50) u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Light,Down,10)} for(Unit u){u.train(Worker,EnemyDir,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Up,50) u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Light,Right,10)} for(Unit u){u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Up;6;S;C;Train;Light;EnemyDir;10;S;For_S;S;For_S;S;C;Train;Ranged;Down;9	for(Unit u){u.build(Barracks,Up,50) u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Up,6) u.train(Light,EnemyDir,10)} for(Unit u){for(Unit u){u.train(Ranged,Down,9)}}
S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Ranged;Right;8;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(6) u.train(Ranged,Right,8) u.build(Barracks,Left,1) u.attack(Closest) for(Unit u){u.idle()} for(Unit u){u.train(Light,Left,6)} u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Up;7;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;20	for(Unit u){u.attack(LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Right,5)} for(Unit u){u.train(Heavy,Left,8)} if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Up,7)}} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()}}} u.train(Ranged,Left,20)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Up;7;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;20	for(Unit u){u.attack(Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Right,5)} for(Unit u){u.train(Heavy,Left,8)} if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Up,7)}} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()}}} u.train(Ranged,Left,20)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Up;15;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;20	for(Unit u){u.harvest(7) u.attack(Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Up,15)}} else { u.train(Worker,Right,5)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()}}} u.train(Ranged,Left,20)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;EnemyDir;20	for(Unit u){u.harvest(7) u.attack(Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Up,15)}} else { u.train(Worker,Right,5) u.train(Light,Right,3)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}} u.train(Ranged,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Down;20	for(Unit u){u.harvest(7) u.attack(Strongest) if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Barracks,Up,15)}} else { u.moveToUnit(Enemy,Closest) u.train(Worker,Down,5) u.train(Light,Right,3)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}} u.train(Ranged,Down,20)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.harvest(7) u.attack(Strongest) if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Barracks,Up,15)}} else { u.moveToUnit(Enemy,Closest) u.train(Worker,Down,5) u.train(Ranged,Left,25)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Up;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.harvest(7) u.attack(MostHealthy) if(u.canAttack()) then {for(Unit u){u.build(Barracks,Up,15)}} else { u.moveToUnit(Enemy,Closest) u.train(Worker,Up,5) u.train(Ranged,Left,25)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Up;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3	for(Unit u){u.harvest(7) u.attack(MostHealthy) if(u.canAttack()) then {for(Unit u){u.build(Barracks,Up,15)}} else { u.moveToUnit(Enemy,Closest) u.train(Worker,Up,5) u.train(Ranged,Left,25)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(3)}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Up;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3	for(Unit u){u.attack(MostHealthy) if(u.canAttack()) then {for(Unit u){u.build(Barracks,Up,15)}} else { u.moveToUnit(Enemy,Closest) u.train(Worker,Up,5) u.train(Ranged,Left,25)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(3)}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;5;S;C;Train;Ranged;Left;25;S;S_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;2	for(Unit u){u.attack(MostHealthy) if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Up,5) u.train(Ranged,Left,25)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,2)}}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Down;15;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;2	for(Unit u){u.attack(MostHealthy) u.train(Light,Down,15) for(Unit u){u.train(Worker,Right,4)} for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,2)}}}}
S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,10) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,2)}}} u.train(Ranged,Up,50) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,10) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,2)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveAway()}}} u.train(Ranged,Up,50) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Up;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(2)} else { for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,2)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveAway()}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Up;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,2)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveAway()}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Train;Ranged;Up;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway	for(Unit u){if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,2)}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,2)}}} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,2)}}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Down;7;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { for(Unit u){for(Unit u){u.idle()}} u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} for(Unit u){u.train(Worker,Down,7)}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Down;7;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()}} u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} for(Unit u){u.train(Worker,Down,7)}}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,3) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()}} u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} for(Unit u){u.train(Worker,Down,7)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Worker;Down;7;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway	for(Unit u){u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} for(Unit u){for(Unit u){u.harvest(6)} u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Worker,Down,7)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;0;S;C;Train;Heavy;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(OpponentHasNumberOfUnits(Worker,0)) then {u.train(Heavy,EnemyDir,10)} else { u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canHarvest()) then {u.harvest(8)} else { u.moveToUnit(Enemy,LessHealthy) for(Unit u){for(Unit u){u.idle()}} u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,EnemyDir,10) u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(2) u.moveToUnit(Enemy,LessHealthy) u.harvest(15) u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;EnemyDir;10;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(MostHealthy) u.train(Heavy,EnemyDir,10) u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Right,4)} u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(2) u.moveToUnit(Enemy,LessHealthy) u.harvest(15) u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Harvest;15;S;C;Attack;MostHealthy;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,2) for(Unit u){u.train(Worker,Down,4)} u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(2) u.moveToUnit(Enemy,LessHealthy) u.harvest(15) u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,2)}} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}} u.train(Ranged,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;C;Attack;Strongest	for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveAway;S;C;Build;Barracks;Up;20;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Left;3	for(Unit u){u.harvest(7)} for(Unit u){u.build(Base,EnemyDir,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.attack(Strongest)} for(Unit u){u.moveAway() u.build(Barracks,Up,20)} u.train(Light,EnemyDir,4) u.moveToUnit(Ally,Weakest) u.train(Worker,Left,3)}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;3	for(Unit u){u.harvest(2)} for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,Strongest)} for(Unit u){u.attack(Weakest)} u.train(Worker,Left,3)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.idle()} u.attack(Weakest) u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;C;Train;Light;Up;9;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;C;Train;Ranged;Down;3;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Right;5	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.harvest(1)} u.moveAway() u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.idle()} else { u.train(Light,Up,9)}} for(Unit u){u.build(Barracks,Right,5)} u.train(Ranged,Down,3) u.harvest(4) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;C;Train;Ranged;Down;3;S;C;Train;Worker;Right;5	for(Unit u){for(Unit u){u.harvest(1)} u.attack(LessHealthy) for(Unit u){u.harvest(4)} for(Unit u){u.build(Barracks,Right,5)} u.train(Ranged,Down,3) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Right;20;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.attack(LessHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Worker,Right,20)} if(u.HasUnitWithinDistanceFromOpponent(0)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Idle;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(100) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,5)} for(Unit u){u.build(Barracks,Down,9) u.idle()} u.train(Worker,Right,10) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;4;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,5)} u.build(Barracks,EnemyDir,100) u.harvest(5) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Light,Up,4)} for(Unit u){u.idle()}}}}} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;Down;6;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(25) for(Unit u){u.build(Barracks,Down,10)} u.train(Worker,Right,4) u.idle() u.moveToUnit(Enemy,Closest) u.train(Light,Down,6) u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;C;Train;Light;Left;20	for(Unit u){u.harvest(100) u.train(Worker,EnemyDir,5) u.attack(Strongest) for(Unit u){u.idle() u.build(Barracks,EnemyDir,10)} for(Unit u){u.train(Light,Left,20)}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Right;9;S;C;Train;Light;Up;3;S;C;Train;Worker;Down;7	for(Unit u){u.train(Ranged,Up,8) for(Unit u){u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} for(Unit u){u.build(Barracks,Up,4)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Right,9) u.train(Light,Up,3)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;7;S;C;Train;Worker;Down;7	for(Unit u){u.build(Barracks,Up,10) for(Unit u){if(u.canAttack()) then {u.harvest(3)}} u.idle() for(Unit u){u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.train(Light,Left,7)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;Empty;S;C;Train;Worker;Down;7	for(Unit u){if(u.canAttack()) then {u.attack(LessHealthy)} else { e} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;7;S;C;Train;Worker;Down;7	for(Unit u){u.moveAway() for(Unit u){if(u.canAttack()) then {u.harvest(3)}} for(Unit u){u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} u.idle() for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.train(Light,Left,7)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;50	for(Unit u){u.build(Barracks,EnemyDir,4) for(Unit u){u.idle()} u.harvest(5) u.train(Worker,EnemyDir,7) u.moveToUnit(Ally,LessHealthy) u.attack(LessHealthy) u.train(Light,EnemyDir,50)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Down;6;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Train;Heavy;Down;50;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Attack;Strongest	for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Down,6)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.train(Heavy,Down,50)} u.build(Barracks,EnemyDir,7) u.attack(Strongest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Left;3;S;For_S;S;C;Train;Heavy;EnemyDir;25	for(Unit u){u.build(Barracks,EnemyDir,9)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} u.train(Worker,Left,3) for(Unit u){u.train(Heavy,EnemyDir,25)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;50	for(Unit u){u.attack(Weakest) for(Unit u){if(u.canAttack()) then {u.harvest(1)}} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Train;Worker;Right;25;S;S_S;S;C;Build;Base;Left;20;S;C;Harvest;5;S;S_S;S;C;Train;Ranged;Down;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Harvest;10;S;For_S;S;C;Harvest;1;S;For_S;S;C;Idle	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.train(Worker,Right,25) u.build(Base,Left,20) u.harvest(5) u.train(Ranged,Down,25) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Up,10) u.harvest(10) for(Unit u){u.harvest(1)} for(Unit u){u.idle()}}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;C;Train;Worker;Left;20;S;C;Build;Barracks;Up;15	for(Unit u){u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Ally,Weakest)} u.harvest(4) for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} u.harvest(2)}} u.train(Worker,Left,20) u.build(Barracks,Up,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Idle;S;C;Train;Ranged;Up;7;S;S_S;S;C;Harvest;5;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.build(Barracks,EnemyDir,7) for(Unit u){u.idle()} u.train(Ranged,Up,7) u.harvest(5) u.attack(LessHealthy) u.train(Worker,EnemyDir,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Ranged;Down;100;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Up;3;S;C;Train;Worker;Down;7	for(Unit u){u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.train(Ranged,Down,100) for(Unit u){u.build(Barracks,Left,20) u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Light,Up,3)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;For_S;S;C;Train;Heavy;Down;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(100) for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.build(Barracks,Down,10)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){u.train(Heavy,Down,5)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Up;3;S;C;Train;Worker;Down;7	for(Unit u){u.train(Ranged,Up,8) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,Left,20) u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Light,Up,3)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Up;3;S;C;Train;Worker;Down;7	for(Unit u){u.train(Ranged,Up,8) for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,Left,20) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Light,Up,3)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Train;Light;Right;4;S;Empty	for(Unit u){u.harvest(100) for(Unit u){u.build(Barracks,Down,10)} u.train(Worker,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,4) u.idle() u.moveAway() u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.train(Light,Right,4)} else { e}}
S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} u.idle() for(Unit u){u.train(Worker,Up,100)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Heavy;Right;10;S;S_S;S;C;Harvest;15;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Left;4;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,EnemyDir,5) u.train(Heavy,Right,10) u.harvest(15) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Left,4) u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Heavy;Right;10;S;S_S;S;C;Harvest;2;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Left;4;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,EnemyDir,5) u.train(Heavy,Right,10) u.harvest(2) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Left,4) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2	for(Unit u){u.harvest(3) u.idle() u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.attack(Weakest)} u.moveAway() u.moveToUnit(Ally,Closest) u.train(Light,Up,2)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Left;50	for(Unit u){u.build(Barracks,Up,9)} for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.harvest(7) u.idle() u.attack(MostHealthy) for(Unit u){u.train(Light,Left,50)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;For_S;S;C;MoveAway;S;C;Harvest;6;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Light;Down;4;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;8	for(Unit u){u.build(Barracks,EnemyDir,100) if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.moveAway()}} u.harvest(6) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,Down,4)}}} u.attack(MostHealthy) u.train(Worker,Down,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;Attack;Closest;S;C;Train;Ranged;Up;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) if(u.canHarvest()) then {u.attack(Weakest)} u.attack(Closest) u.train(Ranged,Up,8) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.harvest(20) if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Left,5)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Down,10)} u.train(Light,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveAway() u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){u.train(Light,Left,7)} for(Unit u){u.build(Barracks,Down,10)} u.train(Worker,Right,4) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.idle() for(Unit u){u.train(Light,Left,7)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Down,10)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.idle() for(Unit u){u.train(Light,Left,7)} for(Unit u){u.idle()} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Down,10)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Farthest;S;If_B_then_S;B;is_Type;Worker;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;For_S;S;S_S;S;C;Train;Light;Down;50;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Farthest)} if(u.is(Worker)) then {u.attack(Closest)} for(Unit u){u.idle()} u.train(Worker,EnemyDir,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.build(Barracks,EnemyDir,8)}} for(Unit u){u.build(Barracks,Down,10)} for(Unit u){u.attack(Weakest)} for(Unit u){for(Unit u){u.train(Light,Down,50) u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.idle() for(Unit u){u.train(Light,Left,7)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,10)} u.train(Worker,Right,4) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.idle() for(Unit u){u.train(Light,Left,7)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,10)} u.train(Worker,Right,4) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)} if(u.is(Barracks)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { for(Unit u){u.attack(MostHealthy)}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.moveAway() u.attack(Closest) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(Closest) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Attack;Farthest	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,5) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) u.train(Ranged,Up,2) if(u.HasUnitWithinDistanceFromOpponent(7)) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.attack(Farthest)}}}}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;Attack;MostHealthy	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Light,EnemyDir,10)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2;S;C;Train;Ranged;Down;20	for(Unit u){u.harvest(5) u.idle() u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) u.moveToUnit(Ally,Closest) if(u.canHarvest()) then {u.attack(Weakest)} u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Up,2) u.train(Ranged,Down,20)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2	for(Unit u){u.harvest(3) u.idle() u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) if(u.canHarvest()) then {u.attack(Weakest)} u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2	for(Unit u){u.harvest(3) u.idle() u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Up,7)} if(u.canHarvest()) then {u.attack(Weakest)} u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;50;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2	for(Unit u){u.harvest(3) u.idle() u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Up,7)} if(u.canHarvest()) then {u.harvest(50)} u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;2	for(Unit u){u.harvest(3) u.idle() u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.attack(Closest) u.moveToUnit(Ally,Closest) u.train(Light,Up,2)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Left;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle() u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Ranged,Left,5)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Down,10)} if(u.canAttack()) then {e} else { for(Unit u){u.attack(Weakest)}} u.train(Light,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Farthest;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Up;50;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.idle() u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) if(u.canHarvest()) then {u.attack(Farthest)} u.attack(Strongest) u.train(Light,Up,50) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,8) u.attack(LessHealthy) u.train(Light,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;Idle;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Light,EnemyDir,6) u.moveToUnit(Enemy,Closest)} u.moveAway()} else { u.idle()} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;6;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.attack(MostHealthy) u.train(Light,EnemyDir,6) u.moveToUnit(Enemy,Closest)}} else { u.idle()} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Strongest) for(Unit u){u.idle()} u.train(Ranged,Down,7) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;6;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.attack(MostHealthy) u.train(Light,EnemyDir,6) u.moveToUnit(Enemy,Closest)}} else { u.idle()} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Weakest) for(Unit u){u.idle()} u.train(Ranged,Down,7) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;Idle;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,EnemyDir,7) u.moveToUnit(Enemy,Closest)} u.moveAway()} else { u.idle()} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Strongest) for(Unit u){u.idle()} u.train(Ranged,Down,7) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,Right,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Ranged;Down;100;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Strongest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;For_S;S;C;Idle;S;C;Train;Worker;Down;7	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(5)} u.train(Ranged,Down,100) for(Unit u){u.harvest(6) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Strongest)} else { e} for(Unit u){u.build(Barracks,Up,4)} for(Unit u){u.idle()}} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveAway;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,Right,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) if(u.is(Worker)) then {if(u.HasUnitInOpponentRange()) then {u.moveAway() u.attack(Farthest)} else { u.moveToUnit(Ally,Strongest)}} u.attack(Weakest) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Harvest;5;S;C;Train;Worker;Left;20;S;C;Build;Barracks;EnemyDir;25;S;C;Attack;Closest	for(Unit u){u.train(Ranged,EnemyDir,50) u.idle() for(Unit u){for(Unit u){u.harvest(2)} u.harvest(5) u.train(Worker,Left,20)} u.build(Barracks,EnemyDir,25) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;1;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;C;Train;Ranged;Down;7;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;4;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Light,Right,1)} for(Unit u){u.build(Barracks,Left,9)} u.train(Ranged,Down,7) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}} for(Unit u){for(Unit u){u.train(Light,Down,4)} for(Unit u){u.harvest(5)} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Light;Right;50;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,4) u.harvest(15) u.attack(LessHealthy) for(Unit u){u.train(Light,Right,50)} for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,LessHealthy)}}}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Attack;Closest;S;C;Harvest;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;6;S;C;Train;Worker;Left;7;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){if(u.canHarvest()) then {if(HaveQtdUnitsAttacking(4)) then {u.attack(Closest)} else { u.harvest(7)}} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(6)} else { u.train(Worker,Left,7)}}} if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} u.train(Worker,Right,4) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;Empty;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Up;3;S;C;Train;Worker;Down;7	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(50) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { e} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} for(Unit u){u.build(Barracks,Up,4)} u.train(Heavy,Left,25) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Light,Up,3)} u.train(Worker,Down,7)}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Left,5) for(Unit u){for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Weakest;S;C;Attack;Closest;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,6) if(u.canHarvest()) then {u.attack(Weakest)} u.attack(Closest) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Attack;Strongest;S;Empty;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Idle;S;C;Harvest;4;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Down;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.attack(Strongest)} else { e} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.idle()} else { u.harvest(4)} for(Unit u){u.train(Heavy,Down,9)}} u.attack(Closest) u.train(Ranged,Down,7) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Harvest;20;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.harvest(20)} u.attack(MostHealthy) u.train(Ranged,Up,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;Right;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Harvest;10;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Left;100	for(Unit u){u.train(Ranged,Right,6) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){u.harvest(10) u.idle()} for(Unit u){u.attack(Weakest) for(Unit u){u.train(Heavy,Left,100)}}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;25	for(Unit u){u.build(Barracks,EnemyDir,9)} for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(5) u.idle()} for(Unit u){u.train(Heavy,Right,25)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Worker,Up,3)}} else { u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,100)} u.build(Barracks,EnemyDir,4)} for(Unit u){if(u.canHarvest()) then {u.harvest(9)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;8;S;C;Build;Barracks;Left;9;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;9;S;C;MoveAway	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Up,3)}} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,8)} u.build(Barracks,Left,9)} for(Unit u){if(u.canHarvest()) then {u.harvest(9)} u.moveAway()}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;8;S;C;Build;Barracks;Left;9;S;For_S;S;For_S;S;S_S;S;C;Harvest;20;S;C;Train;Light;Down;1	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Up,3)}} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,Left,9)} for(Unit u){for(Unit u){u.harvest(20) u.train(Light,Down,1)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;7;S;For_S;S;C;Harvest;15;S;C;MoveAway	for(Unit u){u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,Down,7)} for(Unit u){u.harvest(15)} u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;Empty;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Light,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy)} u.moveAway()} else { e} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) for(Unit u){u.idle()} u.train(Ranged,Down,7) u.moveToUnit(Enemy,Closest) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2;S;C;Train;Worker;Left;4	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,5) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) u.train(Ranged,Up,2) u.train(Worker,Left,4)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;3;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;C;Build;Barracks;Right;5;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Ranged,Down,3) u.harvest(3) for(Unit u){u.train(Worker,Up,10)} u.build(Barracks,Right,5) u.moveAway() u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Ranged;Down;5;S;For_S;S;C;Train;Worker;Up;10;S;C;Train;Light;EnemyDir;3;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Weakest;S;For_S;S;C;Idle	for(Unit u){u.harvest(6) for(Unit u){u.train(Ranged,Down,5)} for(Unit u){u.train(Worker,Up,10)} u.train(Light,EnemyDir,3) u.build(Barracks,Right,5) u.attack(Weakest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;5;S;S_S;S;S_S;S;C;Build;Barracks;Up;20;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Down;8;S;For_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle	for(Unit u){u.train(Ranged,EnemyDir,5) u.build(Barracks,Up,20) u.attack(Strongest) u.train(Worker,Down,8) for(Unit u){u.train(Worker,Right,9) u.harvest(4) for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;8;S;C;Idle;S;C;MoveAway	for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Light,EnemyDir,4) for(Unit u){u.build(Barracks,Down,7) u.harvest(8) u.idle()} u.moveAway()}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;9;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;MostHealthy	for(Unit u){u.train(Ranged,Down,9) u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,6) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;9;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Strongest	for(Unit u){u.train(Ranged,Down,9) u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;6;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Light,EnemyDir,6)} u.moveAway()} else { u.attack(LessHealthy)} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) for(Unit u){u.idle()} u.train(Ranged,Down,7) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveAway()} else { u.attack(LessHealthy)} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) for(Unit u){u.idle()} u.train(Ranged,Down,7) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;9;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Ranged,Down,9) u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Attack;Closest;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){if(u.canHarvest()) then {if(HaveQtdUnitsAttacking(4)) then {u.attack(Closest)} else { u.harvest(7)}} u.train(Ranged,Left,1) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Farthest)}} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.train(Worker,Right,4) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;4;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){if(u.canHarvest()) then {u.harvest(7)} u.train(Ranged,Left,1) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Farthest)}} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.train(Worker,Left,4) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;4;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){if(u.canHarvest()) then {u.harvest(7)} u.train(Ranged,Left,1) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.train(Worker,Left,4) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;4;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){if(u.canHarvest()) then {u.harvest(7)} u.train(Ranged,Left,1) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()}} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.train(Worker,Left,4) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;5;S;C;Idle;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;8;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){u.train(Ranged,Left,1) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasLessNumberOfUnits(Light,5)) then {u.idle()}}} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.harvest(8) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Up;10;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;8;S;For_S;S;C;Train;Heavy;Up;100;S;C;Train;Light;Down;6	for(Unit u){u.train(Ranged,Left,1) u.attack(Closest) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,10)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.is(Heavy)) then {u.moveToUnit(Ally,Strongest)}} u.harvest(8) for(Unit u){u.train(Heavy,Up,100)}} u.train(Light,Down,6)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Right;2;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.build(Barracks,EnemyDir,8) u.attack(LessHealthy) u.train(Light,Right,2) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Train;Worker;Left;7;S;For_S;S;C;Harvest;4	for(Unit u){u.idle() u.build(Barracks,EnemyDir,4) u.attack(Strongest) u.train(Heavy,Right,100) u.train(Light,EnemyDir,2) u.train(Worker,Left,7) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;EnemyDir;50;S;C;Train;Light;Down;1;S;For_S;S;C;Build;Base;Right;2;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Worker;Left;20;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(5) u.build(Barracks,Up,10) u.attack(Closest) u.moveToUnit(Ally,Farthest) u.train(Heavy,EnemyDir,50) u.train(Light,Down,1) for(Unit u){u.build(Base,Right,2)} if(u.isBuilder()) then {for(Unit u){u.train(Worker,Left,20)}} u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;25;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;15;S;For_S;S;C;Idle;S;C;Train;Worker;Right;6	for(Unit u){u.harvest(4) u.moveToUnit(Enemy,Farthest) if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Enemy,Farthest)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Up,15)}} for(Unit u){u.idle()} u.train(Worker,Right,6)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;EnemyDir;50;S;C;Train;Light;Down;25;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(5) u.build(Barracks,Up,10) u.attack(Weakest) u.train(Heavy,EnemyDir,50) u.train(Light,Down,25) if(u.isBuilder()) then {for(Unit u){u.idle()}} u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;50;S;C;Train;Light;Down;25;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(5) u.build(Barracks,Up,10) u.attack(Closest) u.train(Heavy,EnemyDir,50) u.train(Light,Down,25) u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;25;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(5) u.build(Barracks,Up,10) u.attack(Closest) u.train(Light,Down,25) u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;25;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.harvest(3) u.build(Barracks,Down,1) u.harvest(5) u.build(Barracks,Up,10) u.attack(Closest) u.train(Light,Down,25) u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;4;S;C;Train;Light;Left;25;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3) for(Unit u){u.idle() u.train(Worker,EnemyDir,5)} u.build(Barracks,Right,4) u.train(Light,Left,25) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;15;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.train(Light,Up,15) u.idle()} u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;15;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.train(Light,Up,15) u.idle()} u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy) if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;15;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.harvest(3) u.train(Worker,EnemyDir,6) for(Unit u){u.train(Light,Up,15) u.idle()} u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Strongest) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveAway()} u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,1)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveAway()} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.train(Light,Down,5) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,1)} u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Light;EnemyDir;1	for(Unit u){u.harvest(3) if(u.is(Worker)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.train(Heavy,EnemyDir,100) u.train(Worker,EnemyDir,6) u.train(Light,Down,5) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,1)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Harvest;20;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Right,4)} u.harvest(20) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Right,4)} u.harvest(20) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;C;Train;Heavy;Left;5;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Right,4)} u.harvest(20) u.train(Heavy,Left,5) u.attack(Strongest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;C;Train;Light;Left;2;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Up;3	for(Unit u){if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,Down,7) u.train(Light,Left,2) for(Unit u){u.harvest(1) u.attack(LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Up,3)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Up;6;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,EnemyDir,20) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Light,Up,6) u.harvest(100) for(Unit u){u.build(Barracks,EnemyDir,1) for(Unit u){u.idle()}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;50;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;5;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Train;Worker;Down;20;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;C;Attack;Closest	for(Unit u){u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {if(HasNumberOfUnits(Ranged,50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Light,Up,5)}} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.train(Worker,Down,20) for(Unit u){u.train(Ranged,EnemyDir,7) u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;50;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Up;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Train;Ranged;Up;15;S;S_S;S;C;Train;Worker;Down;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {if(HasNumberOfUnits(Ranged,50)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Light,Up,5)}} for(Unit u){for(Unit u){u.build(Barracks,Left,6) u.train(Ranged,Up,15)} u.train(Worker,Down,20) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Worker,Left,100)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;For_S;S;C;Train;Light;Up;2;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Up,100) u.idle() u.harvest(5) u.build(Barracks,Down,20) for(Unit u){u.train(Light,Up,2)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Closest;S;C;Train;Light;Up;2;S;C;Train;Worker;Left;100;S;C;Harvest;25	for(Unit u){for(Unit u){u.build(Barracks,Left,9) if(HasNumberOfWorkersHarvesting(3)) then {u.attack(Closest)} u.train(Light,Up,2)} u.train(Worker,Left,100) u.harvest(25)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;10;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Ranged;Down;20;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;25;S;S_S;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Worker,Up,10) u.build(Barracks,Down,25) u.harvest(6) u.train(Ranged,Down,20) u.moveToUnit(Enemy,Closest) u.harvest(7) u.train(Worker,EnemyDir,25) u.moveAway() u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;MoveAway;S;Empty;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Down;7;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){if(HasLessNumberOfUnits(Light,4)) then {for(Unit u){u.train(Light,EnemyDir,6) u.idle()} u.moveAway()} else { e} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} u.attack(Closest) for(Unit u){u.idle()} u.train(Ranged,Down,7) for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Train;Heavy;Down;9;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;2;S;Empty	for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Heavy,Down,9)} for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {u.harvest(2)} else { e}}}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Worker,Down,3) u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,1)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.train(Heavy,EnemyDir,2) u.moveAway()} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Train;Heavy;EnemyDir;2;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Worker,Down,3) u.train(Worker,Down,6) for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Right,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,1)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.train(Heavy,EnemyDir,2)} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Worker,Down,3) u.train(Worker,Down,6) for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Right,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,1)} if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,EnemyDir,2) u.moveAway()} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Worker,Down,3) u.train(Worker,Down,6) for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Right,6) u.moveToUnit(Enemy,Strongest) if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,EnemyDir,2) u.moveAway()} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.train(Worker,Down,3) u.train(Worker,Down,6) for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Right,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(4)} u.train(Heavy,EnemyDir,2) u.moveAway() u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;S_S;S;C;Train;Heavy;Left;2;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;2	for(Unit u){u.harvest(3) u.train(Worker,Down,3) u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,6) for(Unit u){for(Unit u){u.idle()}} u.build(Barracks,Right,6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(2)} if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,Left,2) u.moveAway()} u.attack(MostHealthy) u.train(Ranged,Up,2)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;100;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;Idle;S;S_S;S;C;Train;Light;Down;7;S;C;Build;Barracks;Down;5;S;C;Train;Heavy;EnemyDir;3	for(Unit u){u.harvest(4) u.attack(Strongest) for(Unit u){if(HasNumberOfUnits(Light,100)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.idle() u.train(Light,Down,7) u.build(Barracks,Down,5)} u.train(Heavy,EnemyDir,3)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Harvest;1;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Ranged;Left;8	for(Unit u){u.idle() u.build(Barracks,Left,1) u.train(Light,Right,3) u.harvest(1) u.moveAway() u.attack(MostHealthy) u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {for(Unit u){u.idle() u.moveToUnit(Ally,Farthest)}} u.train(Ranged,Left,8)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Ranged;Left;8	for(Unit u){u.idle() u.build(Barracks,Left,1) u.train(Light,Right,3) u.harvest(50) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Ranged,Left,8)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Left;15;S;C;Train;Ranged;Left;8	for(Unit u){u.idle() u.build(Barracks,Left,1) u.train(Light,Right,3) u.harvest(50) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest) if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Left,15)}} u.train(Ranged,Left,8)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.build(Barracks,Left,1) u.train(Light,Right,3) u.harvest(50) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,Left,4)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;Down;9;S;C;Harvest;1;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,Down,9)} u.harvest(1) u.moveAway() u.moveToUnit(Enemy,Weakest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;Down;9;S;S_S;S;C;Train;Light;Up;10;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,Down,9)} u.train(Light,Up,10) u.harvest(6) u.moveToUnit(Enemy,Weakest) u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;2;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.build(Barracks,Left,25)} u.idle() u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)} for(Unit u){u.idle() u.train(Heavy,Left,4)} u.moveToUnit(Enemy,Farthest) u.attack(LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){for(Unit u){u.train(Light,Right,2) u.harvest(20)} u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,EnemyDir,9) u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway()}} else { u.moveToUnit(Ally,MostHealthy)}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Right,4)} u.harvest(20) u.attack(Weakest) u.train(Light,EnemyDir,8) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;5;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;Up;15;S;For_S;S;C;Build;Barracks;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Light,Up,5) u.harvest(9) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} u.idle() if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.attack(MostHealthy) u.train(Ranged,Up,15) for(Unit u){u.build(Barracks,Left,100)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,2) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;5;S;C;Harvest;9;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;For_S;S;C;Build;Barracks;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Build;Barracks;Right;2;S;C;Train;Worker;Down;2;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Light,Up,5) u.harvest(9) if(u.HasUnitThatKillsInOneAttack()) then {u.idle() u.attack(LessHealthy) for(Unit u){u.train(Heavy,Up,50)} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Ally,MostHealthy)} else { e} for(Unit u){u.build(Barracks,Left,100)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy)} u.build(Barracks,Right,2) u.train(Worker,Down,2) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Heavy,Right,4)} u.harvest(20) u.attack(Weakest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Train;Light;Right;8;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.train(Light,Right,8)}} u.build(Barracks,Right,5)} for(Unit u){u.train(Worker,Up,2) u.harvest(20) u.attack(Weakest) u.train(Light,EnemyDir,8) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;C;Train;Worker;Down;2;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;EnemyDir;50;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(9) u.train(Worker,Down,2)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(MostHealthy) u.train(Light,EnemyDir,50) if(u.canHarvest()) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Train;Worker;Down;2;S;C;Train;Heavy;Up;1;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;50;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(9) u.train(Worker,Down,2) u.train(Heavy,Up,1)} for(Unit u){u.attack(Strongest) u.train(Light,EnemyDir,50) if(u.canHarvest()) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Train;Worker;Down;2;S;C;Train;Heavy;Up;1;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;50;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(9) u.train(Worker,Down,2) u.train(Heavy,Up,1) u.attack(MostHealthy)} for(Unit u){u.train(Light,EnemyDir,50) if(u.canHarvest()) then {if(u.is(Ranged)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;MoveAway;S;Empty;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;4;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;9	for(Unit u){if(HasLessNumberOfUnits(Light,4)) then {for(Unit u){u.train(Light,EnemyDir,6) u.idle()} u.moveAway()} else { e} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Left,9)} u.moveAway() u.attack(MostHealthy) u.train(Ranged,Left,4) for(Unit u){u.idle()} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;MoveAway;S;Empty;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Left;4;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;9	for(Unit u){if(HasLessNumberOfUnits(Light,4)) then {for(Unit u){u.train(Light,EnemyDir,6) u.idle()} u.moveAway()} else { e} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Left,9)} u.attack(Weakest) u.train(Ranged,Left,4) for(Unit u){u.idle()} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Down;7;S;C;Train;Ranged;Right;4;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;9	for(Unit u){if(HasLessNumberOfUnits(Light,4)) then {for(Unit u){u.train(Light,EnemyDir,6) u.idle()} u.moveToUnit(Enemy,LessHealthy)} else { u.idle()} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Left,9)} u.attack(Weakest) u.train(Light,Down,7) u.train(Ranged,Right,4) for(Unit u){u.idle()} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;100;S;C;Idle;S;For_S;S;C;Idle;S;C;Train;Worker;Up;2;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(1) u.build(Barracks,EnemyDir,5) u.train(Light,EnemyDir,100) u.idle() for(Unit u){u.idle()} u.train(Worker,Up,2) u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;4;S;S_S;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;Attack;Farthest;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;Empty;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Down;7;S;C;Train;Ranged;Right;4;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;9	for(Unit u){if(HasLessNumberOfUnits(Light,4)) then {for(Unit u){u.train(Light,EnemyDir,6) u.idle()} u.attack(Farthest)} else { u.idle()} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Left,9)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} else { e} u.attack(Strongest) u.train(Light,Down,7) u.train(Ranged,Right,4) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;For_S;S;C;Idle;S;C;Train;Light;Up;15;S;C;Train;Worker;Left;3;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,1) u.harvest(10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HaveQtdUnitsAttacking(4)) then {for(Unit u){u.idle()}}} u.train(Light,Up,15) u.train(Worker,Left,3) if(u.canAttack()) then {u.idle() u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;15;S;C;Train;Worker;Left;3;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Down,1) u.harvest(10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} u.train(Light,Up,15) u.train(Worker,Left,3) if(u.canAttack()) then {u.idle() u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Harvest;10;S;C;Train;Light;Up;15;S;C;Train;Worker;Left;3;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,1) u.train(Heavy,Left,7) u.harvest(10) u.train(Light,Up,15) u.train(Worker,Left,3) if(u.canAttack()) then {u.idle() u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Harvest;10;S;C;Train;Light;Up;15;S;C;Train;Worker;Left;3;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,1) u.train(Heavy,Left,7) u.harvest(10) u.train(Light,Up,15) u.train(Worker,Left,3) if(u.canAttack()) then {u.idle() u.attack(Weakest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;100	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,100) u.harvest(100) u.attack(MostHealthy) if(u.HasUnitInOpponentRange()) then {u.train(Light,EnemyDir,50) u.train(Worker,Down,4)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,100)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Train;Ranged;Left;10;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;100	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,100) u.harvest(4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Ranged,Left,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Up,15)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,100)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Train;Light;EnemyDir;50;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Left;100;S;For_S;S;C;Idle;S;C;Train;Light;EnemyDir;15	for(Unit u){u.train(Heavy,Left,100) u.harvest(100) u.attack(MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Light,EnemyDir,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Up,15)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Left,100)} for(Unit u){u.idle()} u.train(Light,EnemyDir,15)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Right;9;S;Empty;S;C;Attack;Strongest	for(Unit u){u.harvest(3) u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Ranged,EnemyDir,3)}} u.build(Barracks,EnemyDir,6) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Right,9)} else { e} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;10;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;10;S;C;Train;Ranged;Up;5;S;Empty;S;C;Attack;Strongest	for(Unit u){u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,10)}} u.build(Barracks,EnemyDir,6) if(HasNumberOfUnits(Light,10)) then {u.train(Ranged,Up,5)} else { e} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;7;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Down,4) u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,7)}} u.build(Barracks,EnemyDir,6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;7;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Down,4) u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,7)}} u.build(Barracks,EnemyDir,6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;7;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Ranged;Up;5;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Down,4) u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,7)}} u.build(Barracks,EnemyDir,6) u.train(Ranged,Up,5) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveAway;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;7;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;Empty;S;C;Train;Ranged;Up;5;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Down,4) u.moveAway() u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,7)}} u.build(Barracks,EnemyDir,6) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { e} u.train(Ranged,Up,5) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Down;4;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;C;Train;Light;Right;7;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;Empty;S;C;Train;Ranged;Up;5;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Down,4) u.train(Worker,EnemyDir,8) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { u.train(Light,Right,7)}} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { e} u.train(Ranged,Up,5) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Left;50;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;5;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Heavy,Right,4) u.train(Worker,EnemyDir,7) u.build(Barracks,Left,50) u.train(Light,Down,10) u.harvest(5) for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Ranged;Down;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Idle;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Ranged,Down,2) u.build(Barracks,Down,50) u.idle() u.train(Light,Down,10) u.harvest(5) u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Build;Barracks;Left;1;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Up;2;S;C;Train;Light;Right;10;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canAttack()) then {u.idle()} u.build(Barracks,Left,1)} for(Unit u){u.harvest(7) u.train(Ranged,Up,2) u.train(Light,Right,10)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;Attack;Weakest;S;Empty;S;For_S;S;S_S;S;C;Train;Light;Up;6;S;C;Harvest;2;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.harvest(7) u.build(Barracks,Right,4) u.idle() u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} else { e} for(Unit u){u.train(Light,Up,6) u.harvest(2)} u.train(Worker,EnemyDir,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Base;Left;8;S;For_S;S;S_S;S;C;Train;Light;Up;6;S;C;Harvest;2;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.harvest(7) u.build(Barracks,Right,4) u.idle() u.attack(Closest) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} else { for(Unit u){u.build(Base,Left,8)}} for(Unit u){u.train(Light,Up,6) u.harvest(2)} u.train(Worker,EnemyDir,8)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;8	for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,EnemyDir,8)}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(2)} for(Unit u){u.train(Worker,Down,4) for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveAway;S;C;Harvest;20	for(Unit u){u.train(Worker,Left,2)} for(Unit u){u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveAway()} u.harvest(20)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Right,15)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2	for(Unit u){u.train(Worker,Up,25) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle() u.harvest(2)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(7) u.moveToUnit(Enemy,Closest)} u.train(Worker,Left,20) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Right;10	for(Unit u){if(u.canAttack()) then {u.idle() for(Unit u){u.harvest(1)} u.attack(LessHealthy) u.moveToUnit(Ally,Strongest)} u.train(Worker,Right,10)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;C;Build;Barracks;Left;9;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Down;100;S;C;Harvest;6;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} else { e} for(Unit u){u.build(Barracks,Left,9)} if(u.HasUnitInOpponentRange()) then {e} else { if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,Closest)} else { u.train(Ranged,Down,100)} u.harvest(6)} u.attack(LessHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10	for(Unit u){u.moveToUnit(Ally,Closest) u.train(Worker,Right,3) u.attack(Strongest) for(Unit u){u.train(Heavy,EnemyDir,50) u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,100) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(1) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.idle()}}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() u.moveToUnit(Ally,Farthest) u.harvest(10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;C;Idle;S;C;Train;Light;EnemyDir;4;S;C;Train;Worker;Left;4;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;2	for(Unit u){u.build(Barracks,Down,8) u.idle() u.train(Light,EnemyDir,4) u.train(Worker,Left,4)} for(Unit u){u.attack(MostHealthy) if(u.isBuilder()) then {for(Unit u){u.harvest(2)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;C;Idle;S;C;Train;Light;EnemyDir;4;S;C;Train;Worker;Left;4;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;2	for(Unit u){u.build(Barracks,Down,8) u.idle() u.train(Light,EnemyDir,4) u.train(Worker,Left,4)} for(Unit u){u.attack(MostHealthy) if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} if(u.isBuilder()) then {for(Unit u){u.harvest(2)}}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Harvest;10;S;Empty;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle() u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Ranged,Left,5)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Down,10)} if(u.is(Barracks)) then {e} else { for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.harvest(10)}} else { e}}} u.train(Light,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveAway() u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;For_S;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Down;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;For_S;S;C;Harvest;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle() u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Ranged,Left,5)} u.train(Worker,EnemyDir,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,7)} for(Unit u){u.moveAway()}}} for(Unit u){u.build(Barracks,Down,10)} if(u.is(Barracks)) then {e} else { for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {for(Unit u){u.harvest(10)}} else { if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}}}} u.train(Light,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveAway() u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;8;S;C;Idle;S;C;Train;Light;EnemyDir;4;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;2	for(Unit u){u.build(Barracks,Down,8) u.idle() u.train(Light,EnemyDir,4) u.train(Worker,Up,4)} for(Unit u){u.attack(Closest) if(u.isBuilder()) then {for(Unit u){u.harvest(2)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;6;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;Right;15;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasLessNumberOfUnits(Worker,6)) then {for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.harvest(2)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.attack(Strongest) for(Unit u){u.train(Worker,Right,15)} u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Down,15)} u.harvest(4) for(Unit u){u.train(Light,Right,25)} u.build(Barracks,EnemyDir,5) u.idle() u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Down,15)} u.harvest(4) for(Unit u){u.train(Light,Right,25)} u.build(Barracks,EnemyDir,5) u.idle() u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Left;50;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;5;S;For_S;S;C;Harvest;3;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.build(Barracks,Left,50) u.train(Light,Down,10) u.harvest(5) for(Unit u){u.harvest(3)} u.attack(Strongest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Left;50;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;5;S;For_S;S;C;Harvest;3;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.build(Barracks,Left,50) u.train(Light,Down,10) u.harvest(5) for(Unit u){u.harvest(3)} u.attack(Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Left;50;S;C;Train;Light;Down;10;S;S_S;S;C;Harvest;4;S;For_S;S;C;Harvest;3;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,EnemyDir,7) u.build(Barracks,Left,50) u.train(Light,Down,10) u.harvest(4) for(Unit u){u.harvest(3)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;9;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(4) for(Unit u){u.train(Light,Left,8)} u.idle() u.build(Barracks,EnemyDir,9) if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;9;S;For_S;S;C;Train;Light;Left;8;S;C;Idle;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;15;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(4) u.build(Barracks,Right,9) for(Unit u){u.train(Light,Left,8)} u.idle() if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.harvest(15) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;is_Type;Light;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;9;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(4) if(u.is(Light)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)}} u.idle()} for(Unit u){u.train(Light,Left,8)} u.idle() u.build(Barracks,EnemyDir,9) if(HaveQtdUnitsAttacking(10)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;is_Type;Light;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;9;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(4) if(u.is(Light)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)}} u.idle()} for(Unit u){u.train(Light,Left,8)} u.idle() u.build(Barracks,EnemyDir,9) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,6)}
S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;10	for(Unit u){if(u.isBuilder()) then {u.harvest(2) u.attack(LessHealthy)} else { u.train(Worker,Right,10)}}
S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;If_B_then_S;B;IsBuilder;S;C;Attack;Closest	for(Unit u){u.harvest(1)} for(Unit u){u.train(Worker,EnemyDir,6) if(u.isBuilder()) then {u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;100;S;C;Train;Ranged;Down;6;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;6	for(Unit u){if(u.canAttack()) then {u.idle() for(Unit u){u.moveToUnit(Ally,Weakest)} u.attack(Weakest)} for(Unit u){u.build(Barracks,Right,100) u.train(Ranged,Down,6)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(6)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;5	for(Unit u){if(u.canAttack()) then {u.harvest(1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.harvest(5)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;S_S;S;C;Train;Ranged;Up;5;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,5)} for(Unit u){u.train(Ranged,Up,5) for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.harvest(4)}}} for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Right;10;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,5)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Ally,Farthest) u.train(Light,Right,10) for(Unit u){u.harvest(4) u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Idle;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,Left,8)} for(Unit u){u.build(Barracks,Up,9) u.idle() u.harvest(9) u.attack(MostHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Idle;S;S_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Right;20	for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Left,8)} for(Unit u){u.build(Barracks,Up,9) u.idle() u.harvest(9) u.moveToUnit(Ally,Weakest) u.attack(Strongest) u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}} u.train(Ranged,Right,20)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;15;S;S_S;S;C;Harvest;20;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;0;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.train(Worker,EnemyDir,15) u.harvest(20) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,LessHealthy)}}}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.moveToUnit(Ally,MostHealthy) if(u.is(Worker)) then {for(Unit u){u.harvest(7) u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,EnemyDir,20) u.idle() for(Unit u){u.train(Worker,EnemyDir,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Train;Ranged;Right;50;S;C;Harvest;15;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Right;8	for(Unit u){for(Unit u){u.train(Light,Right,3) u.train(Ranged,Right,50)} u.harvest(15) u.attack(Weakest) for(Unit u){u.build(Barracks,Right,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Train;Ranged;Right;50;S;C;Harvest;15;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Right;8	for(Unit u){for(Unit u){u.train(Light,Right,3) u.train(Ranged,Right,50)} u.harvest(15) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Right,8)}}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Down;25;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;C;Build;Barracks;Down;20	for(Unit u){if(u.is(Worker)) then {for(Unit u){u.harvest(7) u.train(Worker,Down,25) u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;C;Build;Barracks;Down;20	for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(7) u.idle() u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;7;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,EnemyDir,5)} u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Ranged,Right,7) for(Unit u){u.harvest(9)} for(Unit u){u.moveAway() if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Left;100;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Train;Worker;Down;8;S;C;Attack;Closest;S;C;Train;Light;Left;10;S;For_S;S;C;MoveAway	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Left,100)} for(Unit u){u.idle()} u.harvest(1) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Down,8) u.attack(Closest)} u.train(Light,Left,10)} for(Unit u){u.moveAway()}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Farthest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest) if(u.is(Worker)) then {for(Unit u){u.harvest(7) u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,EnemyDir,20) u.idle() for(Unit u){u.train(Worker,EnemyDir,4)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.moveAway() u.attack(Strongest) if(u.is(Worker)) then {for(Unit u){u.harvest(7) u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,EnemyDir,20) u.idle() for(Unit u){u.train(Worker,EnemyDir,4)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;4;S;For_S;S;C;Harvest;25	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) if(u.is(Worker)) then {for(Unit u){u.attack(MostHealthy)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,EnemyDir,20) u.idle() for(Unit u){u.train(Worker,EnemyDir,4)}} for(Unit u){u.harvest(25)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;4;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;Down;20;S;For_S;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle() u.train(Heavy,EnemyDir,4)} u.moveToUnit(Ally,Weakest) if(u.is(Worker)) then {for(Unit u){u.harvest(7) u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,Down,20) for(Unit u){u.train(Worker,EnemyDir,4)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;4;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;4;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Ranged;Down;20;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;C;Harvest;15	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle() u.train(Heavy,EnemyDir,4)} u.moveToUnit(Ally,Weakest) if(u.is(Worker)) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Ranged,EnemyDir,4) u.build(Barracks,Down,20) u.train(Ranged,Down,20) for(Unit u){u.train(Worker,EnemyDir,4)} u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Worker;Left;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(1)} for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,10)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Worker,Left,15)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Down;8;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Harvest;15;S;Empty;S;For_S;S;C;Harvest;2;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveAway;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Down,8) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.harvest(15)} else { e} for(Unit u){u.harvest(2)}} for(Unit u){u.harvest(5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway()}} else { e} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){for(Unit u){u.harvest(6)} u.build(Barracks,Down,1)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;Right;15;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;For_S;S;C;Train;Worker;Right;10;S;C;Attack;Closest	for(Unit u){u.harvest(7) u.build(Barracks,Right,7) u.train(Light,Right,15) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.canHarvest()) then {u.moveAway()}}} for(Unit u){u.train(Worker,Right,10)} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(8)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;20;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} if(u.isBuilder()) then {u.attack(MostHealthy)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.moveAway() u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,20) u.attack(Weakest) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;For_S;S;C;Train;Light;Down;7;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(8)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) for(Unit u){u.train(Light,Down,7)} for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} if(HasNumberOfUnits(Barracks,4)) then {u.moveAway()} else { u.build(Barracks,Down,7)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;8;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;50;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;MoveAway;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.harvest(50) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} for(Unit u){u.moveAway()} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Harvest;15;S;Empty;S;C;Build;Base;Left;7;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveAway;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){u.moveAway() u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.harvest(15)} else { e} u.build(Base,Left,7)} for(Unit u){u.harvest(5)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway()}} else { e} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;8;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;50;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Left;1;S;C;Train;Light;Up;20;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;MoveAway;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Left,7) u.moveToUnit(Enemy,Strongest) u.harvest(50) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Left,1) u.train(Light,Up,20) for(Unit u){u.harvest(5)} for(Unit u){u.moveAway()} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Left;1;S;C;Train;Ranged;Left;10;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} if(HasNumberOfUnits(Barracks,4)) then {u.moveAway()} else { u.build(Barracks,Down,7)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Closest) u.train(Ranged,Left,1) u.train(Ranged,Left,10) for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;1;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} if(OpponentHasNumberOfUnits(Heavy,1)) then {u.harvest(8)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} if(HasNumberOfUnits(Barracks,2)) then {u.moveAway()} else { u.build(Barracks,Down,7)} u.harvest(10) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Left,100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} if(HasNumberOfUnits(Barracks,2)) then {u.moveAway()} else { u.build(Barracks,Down,7)} u.harvest(10) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Left,100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;2;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Ally,Closest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} if(HasNumberOfUnits(Barracks,2)) then {u.moveAway()} else { u.build(Barracks,Down,7)} u.harvest(10) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Left,100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Right;15;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Base;EnemyDir;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;2;S;For_S;S;C;Train;Worker;Right;10;S;C;Train;Light;Up;2;S;C;Attack;Closest	for(Unit u){u.harvest(7) u.train(Heavy,Right,15) if(u.OpponentHasUnitInPlayerRange()) then {u.idle() for(Unit u){u.build(Base,EnemyDir,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,2)}}} for(Unit u){u.train(Worker,Right,10)} u.train(Light,Up,2) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Right;15;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Build;Base;EnemyDir;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Up;2;S;For_S;S;C;Train;Worker;Right;10;S;C;Attack;Closest	for(Unit u){u.harvest(7) u.train(Heavy,Right,15) if(u.OpponentHasUnitInPlayerRange()) then {u.idle() for(Unit u){u.harvest(15) u.build(Base,EnemyDir,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Up,2)}}} for(Unit u){u.train(Worker,Right,10)} u.attack(Closest)}
S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Harvest;3	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(LessHealthy) u.train(Worker,EnemyDir,7) for(Unit u){u.harvest(3)}}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;S_S;S;C;Harvest;1;S;C;Attack;Farthest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.attack(Closest)} u.train(Worker,Up,3) u.harvest(1) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;Farthest;S;C;Train;Worker;Right;7	for(Unit u){u.idle() u.harvest(4) u.attack(Farthest) u.train(Worker,Right,7)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.harvest(4) u.moveToUnit(Enemy,Strongest) u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(8)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Up,20) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1) u.build(Barracks,EnemyDir,100)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(8)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Up,20) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Up;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1) u.build(Barracks,EnemyDir,100)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) u.train(Ranged,Up,20) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;5;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) u.attack(Closest) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Closest) u.train(Light,Right,50) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Build;Barracks;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;5	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.build(Barracks,Down,7) u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest) u.attack(MostHealthy)} u.moveToUnit(Enemy,Closest) u.train(Light,Right,50) u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.attack(Weakest) for(Unit u){u.harvest(5)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HasNumberOfUnits(Light,3)) then {for(Unit u){u.train(Heavy,Left,3) u.moveAway()}} for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.train(Light,Right,50) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Light;Left;100;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;3;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} u.train(Light,Left,100) u.attack(Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Light,3)) then {for(Unit u){u.train(Heavy,Left,3) u.moveAway()}} for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Light;Left;100;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} u.train(Light,Left,100) u.attack(Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.train(Light,EnemyDir,1)} for(Unit u){u.attack(Weakest)}}}} u.train(Light,Left,100) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;For_S;S;C;Attack;Weakest;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Up;10;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.train(Light,EnemyDir,1)} for(Unit u){u.attack(Weakest)}}}} u.train(Light,Left,100) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Up,10)}}} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;For_S;S;C;Attack;Strongest;S;C;Train;Light;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Up;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Up;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.train(Light,EnemyDir,1)} for(Unit u){u.attack(Strongest)}}}} u.train(Light,Left,100) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Up,10)}}} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Up,15)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;C;Attack;Strongest;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Up;10;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.harvest(10)} for(Unit u){u.attack(Strongest)}}}} u.train(Light,Left,100) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Up,10)}}} if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Weakest;S;Empty;S;C;Train;Light;Left;7	for(Unit u){u.build(Barracks,Left,25) u.harvest(9) u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Weakest)} else { e} u.train(Light,Left,7)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;100;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Left;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.attack(Weakest) u.train(Light,Left,7) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;100;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;Left;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Left,20) u.harvest(100) u.attack(Weakest) u.train(Light,Left,7) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;100;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Right;50	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.idle() u.attack(Strongest) u.train(Light,EnemyDir,7) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Farthest) u.train(Ranged,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Harvest;100;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;7;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Right;50	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.idle() u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(LessHealthy)}} u.train(Light,Up,7) for(Unit u){u.train(Worker,Up,4)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;7;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Right;50	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.moveToUnit(Enemy,LessHealthy) u.idle() u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(LessHealthy)}} u.train(Light,Up,7) for(Unit u){u.train(Worker,Up,4)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Harvest;9;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;Up;7;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Right;50	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.harvest(3) u.harvest(9) u.attack(Strongest)}} u.train(Light,Up,7) for(Unit u){u.idle() u.train(Worker,Up,4)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;C;Harvest;9;S;C;MoveAway;S;S_S;S;C;Train;Light;Up;7;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Right;50	for(Unit u){u.build(Barracks,Left,20) u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.idle() u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.harvest(3) u.idle() u.moveToUnit(Ally,LessHealthy) u.harvest(9) u.moveAway()}} u.train(Light,Up,7) for(Unit u){u.idle() u.train(Worker,Up,4)}} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Right;8;S;C;Train;Worker;Down;3;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)} u.build(Barracks,EnemyDir,7) u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,LessHealthy) u.train(Ranged,Right,8) u.train(Worker,Down,3) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Down,7) u.moveAway()}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Build;Barracks;Right;6;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;10;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Train;Light;Down;5;S;For_S;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;5;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;5	for(Unit u){u.idle() u.harvest(1)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Strongest)} if(u.is(Base)) then {for(Unit u){if(u.is(Light)) then {e} else { u.build(Barracks,Right,6)}}} else { e} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,10) if(HasNumberOfWorkersHarvesting(3)) then {u.train(Light,Down,5) for(Unit u){u.attack(LessHealthy)}} else { e} if(OpponentHasNumberOfUnits(Barracks,5)) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Up;6	for(Unit u){u.harvest(4) u.attack(Weakest) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)} for(Unit u){u.train(Worker,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Up;9;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3	for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.harvest(25) u.attack(Closest)} else { u.train(Worker,Up,9)} for(Unit u){u.idle()} u.harvest(4) u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Up;9;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3	for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.harvest(25) u.attack(Closest)} else { u.train(Worker,Up,9)} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Up;9;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.harvest(25) u.attack(Closest)} else { u.train(Worker,Up,9)} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Light;Up;20;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.harvest(25) u.attack(Closest)} else { u.train(Worker,EnemyDir,9)} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Light,Up,20) u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Train;Heavy;Up;10;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Light,Down,4) u.harvest(1)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.train(Light,Left,100) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,9) u.attack(Weakest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){u.train(Heavy,Up,10)}} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(1)} for(Unit u){for(Unit u){u.attack(Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Barracks,4)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,7) u.moveToUnit(Enemy,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;25;S;For_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;C;Train;Light;Down;8;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;For_S;S;C;Train;Heavy;Down;7;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){u.idle() u.harvest(25)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,20) u.train(Light,Down,8) u.build(Barracks,EnemyDir,3) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.attack(Closest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Worker;Left;100;S;S_S;S;C;Train;Light;Down;8;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(7) u.idle()}} for(Unit u){u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,5)} u.train(Worker,Left,100) u.train(Light,Down,8) u.build(Barracks,EnemyDir,3) for(Unit u){u.moveToUnit(Enemy,Closest)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;4	for(Unit u){u.idle() u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,4)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Right;9;S;C;Train;Worker;Right;6;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.harvest(2) u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Right,9)} u.train(Worker,Right,6) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Light;Right;6;S;C;Train;Worker;Right;6;S;C;Attack;Closest	for(Unit u){u.harvest(2) u.build(Barracks,Up,100) u.train(Light,Right,6) u.train(Worker,Right,6) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;C;Harvest;100;S;C;Train;Heavy;Down;4;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(100) u.train(Heavy,Down,4) u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.build(Barracks,Right,3)} for(Unit u){u.idle()} for(Unit u){u.harvest(4) u.attack(MostHealthy)} for(Unit u){u.train(Heavy,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;C;Train;Worker;Up;25;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() u.build(Barracks,Down,15) u.train(Worker,Up,25) u.harvest(1) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Right;20;S;C;Train;Worker;EnemyDir;3;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;10	for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Left,25) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.train(Light,Right,20) u.train(Worker,EnemyDir,3) if(u.is(Heavy)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,10)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;Idle;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Right;6;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;1;S;For_S;S;C;Train;Ranged;Down;8	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.train(Worker,Left,7)} u.idle()} if(u.canHarvest()) then {u.build(Barracks,Right,6)}} for(Unit u){u.harvest(15) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(Strongest)}} else { for(Unit u){u.harvest(1)}}} for(Unit u){u.train(Ranged,Down,8)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;C;Train;Light;Right;15;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,3) u.train(Light,Right,15) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Harvest;25;S;S_S;S;S_S;S;C;Train;Light;Right;20;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Up,2) u.harvest(25) u.train(Light,Right,20) u.attack(Closest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;20;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;20;S;C;Harvest;1;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Heavy;Right;3	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20) u.idle()}}} for(Unit u){u.build(Barracks,Up,20) u.harvest(1) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}}} u.train(Heavy,Right,3)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;20;S;C;Harvest;8;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Right;25;S;C;Train;Light;Down;2	for(Unit u){u.build(Barracks,Up,20) u.harvest(8) u.attack(LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Right,25)}} u.train(Light,Down,2)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;20;S;C;Harvest;8;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Right;25;S;C;Train;Light;Left;2	for(Unit u){u.build(Barracks,Up,20) u.harvest(8) u.attack(LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Right,25)}} u.train(Light,Left,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;1;S;S_S;S;C;Harvest;10;S;C;Train;Heavy;EnemyDir;6;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){u.idle() for(Unit u){u.train(Light,Left,1)} u.harvest(10) u.train(Heavy,EnemyDir,6) u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Right;6;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,10) u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.harvest(3)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,6) u.train(Worker,Left,8) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy;S;C;Train;Light;Right;6;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,10) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,50) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(2)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.attack(MostHealthy) u.train(Light,Right,6) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;LessHealthy;S;C;Train;Light;Right;6;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;9;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,10) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,50) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.harvest(2)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(LessHealthy)} u.train(Light,Right,6) if(OpponentHasNumberOfUnits(Worker,9)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;10;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Idle;S;C;Harvest;25;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Right;6;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Up,10) u.moveToUnit(Enemy,Weakest) u.idle() u.harvest(25) for(Unit u){u.harvest(2)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,6) u.attack(Closest) u.train(Worker,Left,8) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Up,10) for(Unit u){u.train(Light,Left,7)} u.moveToUnit(Enemy,Weakest) u.attack(Closest) if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(2)} u.train(Worker,Left,8) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Harvest;3;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Up,10) for(Unit u){u.train(Light,Left,7)} if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(2)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.harvest(3)} u.attack(Strongest) u.train(Worker,Left,8) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;For_S;S;C;Train;Light;Left;7;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Left;8;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Up,10) for(Unit u){u.train(Light,Left,7)} if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(2)} u.attack(Strongest) u.train(Worker,Left,8) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;C;Train;Light;Right;25;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(2) u.idle() u.train(Light,Right,25)} u.harvest(4) u.build(Barracks,Right,50) u.attack(Closest) for(Unit u){u.train(Worker,Down,8)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;C;Train;Light;Right;25;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;4;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()} else { e}} u.train(Light,Right,25)} u.harvest(4) u.build(Barracks,Right,4) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;25;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;4;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;6;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Light,Up,25) for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.isBuilder()) then {if(HasLessNumberOfUnits(Base,25)) then {u.attack(Farthest)} else { u.moveToUnit(Ally,Strongest)}}} u.idle()}} u.harvest(4) u.build(Barracks,Right,4) if(HaveQtdUnitsAttacking(1)) then {u.harvest(50)} else { u.attack(Strongest)} for(Unit u){u.train(Worker,Down,6)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;3;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Up,3) u.train(Ranged,EnemyDir,3) for(Unit u){u.idle()}} u.harvest(4) u.build(Barracks,Right,4) u.moveToUnit(Enemy,Closest) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;3;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Up,3) u.train(Ranged,Up,3) for(Unit u){u.idle()}} u.harvest(4) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Closest) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;3;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Up,3) u.train(Ranged,Up,3) for(Unit u){if(u.is(Light)) then {u.attack(Closest)} u.idle()}} u.harvest(4) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Closest) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Down,3) u.train(Ranged,Up,3) for(Unit u){if(u.is(Light)) then {u.attack(Closest)} u.idle()}} u.harvest(4) u.build(Barracks,Down,4) u.moveToUnit(Enemy,Closest) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;Attack;Closest;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Down,3) u.train(Ranged,Up,3) for(Unit u){if(u.is(Light)) then {u.attack(Closest)} u.idle()}} u.harvest(4) u.build(Barracks,Down,4) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;C;Train;Worker;Left;3;S;C;Train;Heavy;Left;4;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Light,Down,3) u.train(Worker,Left,3) u.train(Heavy,Left,4)} u.harvest(4) u.build(Barracks,Down,4) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;Harvest;5;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.train(Heavy,Left,100)} u.harvest(4) u.build(Barracks,Down,4) u.harvest(5) u.attack(Closest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;10;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.idle() u.train(Heavy,Up,10)} u.harvest(4) u.build(Barracks,Down,4) u.attack(Strongest) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;10;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Down;4;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Down;6	for(Unit u){for(Unit u){u.idle() u.train(Heavy,Up,10)} u.harvest(4) u.build(Barracks,Down,4) u.attack(MostHealthy) for(Unit u){u.train(Worker,Down,6)}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;5;S;C;Train;Worker;Right;2;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,EnemyDir,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(5)} u.train(Worker,Right,2) for(Unit u){u.train(Worker,EnemyDir,3) for(Unit u){u.idle()}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Harvest;9;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Right,15) u.harvest(9) u.train(Worker,Up,2) u.idle() u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Train;Light;Down;25;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,EnemyDir,15) u.train(Light,Down,25) u.train(Worker,Right,2) u.harvest(3) for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;50;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){u.train(Heavy,Up,7) u.build(Barracks,EnemyDir,15) u.harvest(50) u.train(Light,Down,1) u.train(Worker,Right,2) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Harvest;50;S;C;Idle;S;C;Train;Light;Down;10;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Right;2;S;For_S;S;C;Train;Worker;Left;3	for(Unit u){u.train(Heavy,Up,7) u.build(Barracks,EnemyDir,15) u.harvest(50) u.idle() u.train(Light,Down,10) u.attack(Weakest) u.train(Worker,Right,2) for(Unit u){u.train(Worker,Left,3)}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;50;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Up,7) u.build(Barracks,EnemyDir,15) u.harvest(50) u.train(Light,Down,1) u.train(Worker,Right,2) if(u.HasUnitInOpponentRange()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){u.train(Heavy,Up,7) u.build(Barracks,Down,15) u.harvest(50) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,1) u.train(Worker,Right,2) if(u.HasUnitInOpponentRange()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;8;S;For_S;S;C;MoveToUnit;Ally;Closest	if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.attack(MostHealthy)}} if(OpponentHasNumberOfUnits(Worker,8)) then {for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Up;2;S;S_S;S;For_S;S;C;Train;Worker;Up;50;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.attack(LessHealthy) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,Strongest) u.train(Ranged,Up,2) for(Unit u){u.train(Worker,Up,50)} if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;C;Train;Worker;Up;50	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()}} else { u.attack(Farthest)}} for(Unit u){u.train(Worker,Up,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;10;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Base;7;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Worker,Up,10) u.harvest(5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.attack(LessHealthy) if(HasNumberOfUnits(Base,7)) then {u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;10;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,10) u.harvest(5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;15;S;C;Attack;Strongest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,10) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(15)) then {u.attack(Strongest)} else { u.harvest(5)} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;15;S;C;Attack;Strongest;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,10) for(Unit u){for(Unit u){u.idle()}} if(HaveQtdUnitsAttacking(15)) then {u.attack(Strongest)} else { for(Unit u){u.harvest(7)}} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;Build;Base;Up;15;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Up,10) for(Unit u){u.harvest(7)} u.build(Base,Up,15) if(u.canAttack()) then {u.idle()} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;9;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;8;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveAway	for(Unit u){u.train(Ranged,Up,8) u.train(Light,EnemyDir,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,4)} if(HasNumberOfUnits(Light,9)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.harvest(8)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Down;4;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.train(Light,Left,25)} u.harvest(20) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,4)} u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {e} else { if(OpponentHasNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.idle()}} u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Left;100;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Base;50;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Base,Left,100) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.moveToUnit(Enemy,Farthest)}} if(HasNumberOfUnits(Base,50)) then {u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Base;EnemyDir;100;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Base,EnemyDir,100) u.train(Worker,EnemyDir,9) u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(LessHealthy) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Left;4;S;C;Train;Light;Down;3;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Weakest) for(Unit u){u.build(Barracks,Left,4)} u.train(Light,Down,3)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;3;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Left;15;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;For_S;S;C;Harvest;9;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,3)} else { e} for(Unit u){u.build(Barracks,Left,15)} for(Unit u){u.idle()} for(Unit u){u.train(Light,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.harvest(9)}}} for(Unit u){u.attack(Strongest)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;3;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Left;15;S;For_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;C;Harvest;9;S;For_S;S;C;Attack;Strongest	for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,3)} else { e} for(Unit u){u.build(Barracks,Left,15)} for(Unit u){u.train(Light,Up,6) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { for(Unit u){u.harvest(9)}}} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;Train;Heavy;Up;3;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;C;Harvest;9;S;For_S;S;C;Attack;Strongest	for(Unit u){if(u.is(Barracks)) then {u.train(Heavy,Up,3)} else { e} for(Unit u){u.build(Barracks,Down,15)} for(Unit u){u.train(Light,Up,6) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { for(Unit u){u.harvest(9)}}} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;15;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;20;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;20;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Left;10	for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest) u.train(Heavy,Up,3) u.train(Light,Right,5) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,15)} for(Unit u){if(HasNumberOfUnits(Worker,20)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} else { for(Unit u){u.harvest(20)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(LessHealthy)} u.train(Ranged,Left,10)}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;25;S;S_S;S;For_S;S;C;Build;Barracks;Down;15;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Up,25)} for(Unit u){u.build(Barracks,Down,15)} u.moveToUnit(Ally,Weakest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(MostHealthy)}} else { for(Unit u){u.idle() u.harvest(7)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;C;Build;Barracks;Down;15;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,Down,15)} u.moveToUnit(Ally,Weakest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(MostHealthy)}} else { for(Unit u){u.idle() u.harvest(7)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,Down,15) u.idle()} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,Left,15) u.idle()} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;100;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,100)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;100;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,100)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;4;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,4)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Up;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Up,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,4) u.moveToUnit(Ally,LessHealthy)} u.attack(MostHealthy)}}
S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Closest)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Left,15) for(Unit u){u.harvest(9)} u.moveToUnit(Enemy,Weakest) u.moveAway() u.idle() u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Left,15) for(Unit u){u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,15) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;20;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;2	for(Unit u){u.train(Worker,EnemyDir,15) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) u.train(Worker,Right,20) for(Unit u){u.idle()} for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(2)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;8	for(Unit u){u.build(Barracks,Up,4) u.train(Worker,EnemyDir,15) u.idle() u.harvest(6) u.attack(Weakest) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,8)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {e} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {e} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Ally,Farthest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;10;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;If_B_then_S;B;HasNumberOfUnits;Heavy;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Up,10)} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} if(HasNumberOfUnits(Heavy,20)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;For_S;S;C;Build;Base;EnemyDir;2;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.attack(LessHealthy) for(Unit u){u.train(Worker,Left,7)} for(Unit u){u.build(Base,EnemyDir,2)}} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.attack(Closest) u.train(Worker,Up,20) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;4;S;C;Harvest;2;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Ranged,4)) then {u.harvest(2)} else { u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Strongest)} u.train(Worker,Left,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;EnemyDir;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Right,10) u.moveToUnit(Ally,LessHealthy) u.train(Ranged,EnemyDir,4) for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() u.attack(MostHealthy) for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,Up,1)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;EnemyDir;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Right,10) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,EnemyDir,4) for(Unit u){u.moveToUnit(Enemy,Closest) u.harvest(8) u.attack(MostHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;EnemyDir;4;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Right,10) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,EnemyDir,4) for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(MostHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(1)} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(6)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(MostHealthy) for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(MostHealthy) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.harvest(4)} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Down;7;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) u.moveToUnit(Ally,Strongest) u.train(Heavy,Down,7) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.moveToUnit(Ally,Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;C;Train;Heavy;Down;15;S;C;Train;Ranged;Down;15;S;C;Attack;Closest;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} u.train(Heavy,Down,15) u.train(Ranged,Down,15) u.attack(Closest) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;C;Attack;Farthest	for(Unit u){u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Down;8	for(Unit u){u.idle() u.attack(MostHealthy) for(Unit u){u.build(Barracks,Down,8)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Harvest;25	for(Unit u){u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,100)} for(Unit u){u.harvest(25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(6)}} for(Unit u){u.idle()} for(Unit u){u.train(Worker,Left,7)} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(6)}} for(Unit u){u.train(Worker,Left,7)} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.harvest(6)}} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Right;4;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.harvest(6)} u.train(Worker,Right,4)} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,20)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.harvest(6)}} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) u.attack(Closest) u.train(Worker,Up,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;C;Attack;Weakest;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) u.attack(Weakest) u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;For_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} u.attack(Strongest) for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) for(Unit u){u.train(Worker,Up,8)} u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;For_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} u.idle() u.attack(Strongest) for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) for(Unit u){u.train(Worker,Up,8)} u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;4;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Strongest	if(OpponentHasNumberOfUnits(Worker,4)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;C;Train;Worker;Left;9;S;For_S;S;C;Attack;Strongest	for(Unit u){u.moveToUnit(Ally,Closest) if(HasLessNumberOfUnits(Worker,2)) then {u.train(Worker,Left,9)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;S_S;S;For_S;S;C;MoveAway;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Worker,2)) then {for(Unit u){u.moveAway()} u.train(Worker,Left,9)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} if(u.is(Base)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} if(HasLessNumberOfUnits(Worker,2)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Left,9)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { e} if(u.is(Base)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;5;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;C;Train;Heavy;EnemyDir;50;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}} else { if(u.canAttack()) then {for(Unit u){u.harvest(5)}} else { for(Unit u){u.build(Barracks,Up,9)}}}} u.moveToUnit(Ally,Strongest) u.train(Ranged,Right,1) u.train(Heavy,EnemyDir,50) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Light;Right;10;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,LessHealthy)} u.attack(Strongest)} else { if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Enemy,Closest)} else { for(Unit u){u.build(Barracks,Up,9)}}}} u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} else { e} u.train(Worker,EnemyDir,2) for(Unit u){u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Light,Right,10)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;7;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Up;9;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Light;Right;10;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(7)} else { if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.build(Barracks,Up,9)}}}} u.attack(MostHealthy) for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Light,Right,10)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Right;1;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;15;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;100;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;100;S;Empty;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;EnemyDir;8	for(Unit u){u.attack(Weakest) u.train(Light,Right,1) u.train(Heavy,Up,15) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} if(HasNumberOfUnits(Base,100)) then {u.moveToUnit(Enemy,Farthest)} else { e} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(LessHealthy)} if(u.isBuilder()) then {for(Unit u){if(u.is(Heavy)) then {if(HasLessNumberOfUnits(Base,100)) then {e} else { u.moveToUnit(Ally,Closest)}} u.train(Heavy,EnemyDir,8)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Right;1;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;100;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;100;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;EnemyDir;8	for(Unit u){u.attack(Weakest) u.train(Light,Right,1) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} if(HasNumberOfUnits(Base,100)) then {u.moveToUnit(Enemy,Farthest)} else { e} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.is(Heavy)) then {if(HasLessNumberOfUnits(Base,100)) then {e} else { u.moveToUnit(Enemy,LessHealthy)}} u.train(Heavy,EnemyDir,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Attack;Farthest;S;For_S;S;C;Harvest;20;S;For_S;S;C;Train;Light;Left;5	for(Unit u){u.train(Ranged,Right,15) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.moveAway() u.attack(Farthest) for(Unit u){u.harvest(20)} for(Unit u){u.train(Light,Left,5)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;15;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;10;S;For_S;S;C;Train;Light;EnemyDir;5	for(Unit u){u.train(Ranged,Right,15) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.moveAway() u.attack(Farthest) for(Unit u){u.harvest(10)} for(Unit u){u.train(Light,EnemyDir,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;100	for(Unit u){for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(7)} for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Light,Left,100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;100	for(Unit u){for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){u.train(Heavy,Down,3) if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Light,Left,100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Left;100	for(Unit u){for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(3)} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,Down,3) if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Light,Left,100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;Train;Ranged;Up;10;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;100	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() u.train(Ranged,Up,10) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Down,3) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.train(Light,Left,100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;Train;Ranged;Up;10;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;100	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() u.train(Ranged,Up,10) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Down,3) if(u.canAttack()) then {e} else { u.train(Light,Right,100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right;3;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.train(Worker,Right,3) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Worker,Left,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.moveAway() u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;20;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Worker,Left,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.moveAway() u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,20) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Right;9;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;20;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Heavy,Right,9)} u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,20) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.idle() u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { e} u.train(Worker,Right,8) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.harvest(4)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { e} u.train(Worker,Right,50) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Ranged;15;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.harvest(3)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.HasUnitThatKillsInOneAttack()) then {if(HasNumberOfUnits(Ranged,15)) then {u.moveToUnit(Ally,MostHealthy)}}} else { e} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Right,50) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Idle;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;C;Train;Light;Up;1;S;C;Train;Worker;Right;50	for(Unit u){for(Unit u){if(u.canAttack()) then {u.harvest(3)}} for(Unit u){u.build(Barracks,Left,6) u.idle() u.attack(Closest)} u.train(Worker,EnemyDir,4) u.train(Light,Up,1) u.train(Worker,Right,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Right;50	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Right,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Right;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Right,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Down,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Heavy,Down,7) u.train(Worker,Down,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} u.train(Heavy,Down,7) u.train(Worker,Down,3)}
S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Down;9	for(Unit u){u.attack(MostHealthy)} for(Unit u){u.train(Worker,Down,9)}
S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Right,9)}
S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;Empty;S;For_S;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle() u.harvest(2)}} else { e}} for(Unit u){u.train(Worker,Right,9)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Farthest;S;C;Train;Worker;Right;9	for(Unit u){u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle() u.attack(LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfWorkersHarvesting(8)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}} else { e}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Farthest)}} u.train(Worker,Right,9)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;Train;Worker;Right;25;S;C;Train;Worker;Right;9	for(Unit u){u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.attack(Closest)} if(u.HasUnitInOpponentRange()) then {if(HasNumberOfWorkersHarvesting(8)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.moveToUnit(Ally,MostHealthy)} else { e}} for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Farthest)} if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { e} if(HasNumberOfWorkersHarvesting(2)) then {u.train(Worker,Right,25)}} u.train(Worker,Right,9)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Ranged;Left;4;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;25	for(Unit u){u.harvest(4) for(Unit u){u.train(Ranged,Left,4)} u.attack(MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { e} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.build(Barracks,Right,25)}}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Ranged;Left;4;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;9;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Right;25	for(Unit u){u.harvest(4) for(Unit u){u.train(Ranged,Left,4)} u.attack(MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} u.train(Ranged,Left,9) if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)} else { e} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.build(Barracks,Right,25)}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Ranged;Left;4;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Idle;S;C;Train;Light;Left;7;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Build;Barracks;Right;25	for(Unit u){u.attack(LessHealthy) for(Unit u){u.train(Ranged,Left,4)} if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.attack(Farthest) if(u.isBuilder()) then {for(Unit u){u.idle()}}}} u.train(Light,Left,7) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.build(Barracks,Right,25)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Harvest;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;For_S;S;S_S;S;C;Train;Light;Down;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Left,6) u.harvest(20)} for(Unit u){if(u.is(Ranged)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} for(Unit u){u.train(Light,Down,7) if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.attack(Weakest)}}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Down;100	for(Unit u){u.build(Barracks,Left,6) u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest)} for(Unit u){if(u.canAttack()) then {e} else { u.train(Light,Down,100)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Base;8;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Barracks;Left;6;S;C;Harvest;20;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Strongest;S;C;Train;Light;Down;100	for(Unit u){for(Unit u){if(HasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,Strongest)}} u.build(Barracks,Left,6) u.harvest(20) u.idle()} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.attack(Strongest)} else { u.train(Light,Down,100)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Harvest;8;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Closest;S;C;Train;Heavy;Right;100	for(Unit u){u.build(Barracks,Left,6) u.harvest(8) u.idle()} for(Unit u){u.attack(MostHealthy) for(Unit u){u.train(Light,Up,3)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.canAttack()) then {u.attack(Closest)} else { u.train(Heavy,Right,100)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.harvest(10)}} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Strongest)} for(Unit u){u.train(Worker,Left,5)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(10)}} for(Unit u){u.moveToUnit(Ally,Weakest) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Right,7) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(10)}} for(Unit u){u.moveToUnit(Ally,Weakest) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(10)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(100)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(100)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {u.attack(LessHealthy) for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Down;9;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,9) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Left;25;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,25) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;Train;Ranged;Right;20	for(Unit u){u.build(Barracks,Up,6) u.attack(LessHealthy)} if(HasNumberOfUnits(Base,5)) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.train(Ranged,Right,20)}}
S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Down,5)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;25;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.isBuilder()) then {if(OpponentHasNumberOfUnits(Ranged,25)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy)} else { u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.harvest(1)}} u.train(Worker,Right,25) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;50;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.isBuilder()) then {if(OpponentHasNumberOfUnits(Light,50)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.harvest(4)}} u.attack(LessHealthy) for(Unit u){u.harvest(1) for(Unit u){u.idle()}} u.train(Worker,Right,25) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Ranged;Left;10;S;C;Build;Barracks;Left;100;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;8	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,Left,10) u.build(Barracks,Left,100)} u.attack(LessHealthy) for(Unit u){u.harvest(8)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Left,100) u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;15;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,2) u.harvest(15) u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Right;2;S;C;Harvest;25;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Right,2)} else { u.harvest(25)} u.harvest(100) u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;2;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Attack;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(6) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}} if(OpponentHasNumberOfUnits(Ranged,2)) then {u.attack(Closest)} else { if(u.HasUnitInOpponentRange()) then {e} else { u.attack(LessHealthy)}} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;2;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;2;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Attack;LessHealthy;S;C;Attack;Strongest	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(2)} u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(6) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}} if(OpponentHasNumberOfUnits(Ranged,2)) then {u.attack(Closest)} else { if(u.HasUnitInOpponentRange()) then {if(u.is(Base)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}} else { u.attack(LessHealthy)}} u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;2;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(2)} u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(6) u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;2;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(2)} u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(2) u.train(Worker,Down,3) u.idle() u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(2) u.train(Worker,Down,3) u.idle() u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} else { e} u.harvest(2) u.train(Worker,Down,3) if(u.isBuilder()) then {for(Unit u){u.harvest(20) u.idle()}} u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;50;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Up,50)} for(Unit u){u.build(Barracks,Up,2) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} else { e} u.train(Worker,Down,3) if(u.isBuilder()) then {for(Unit u){u.harvest(20) u.idle()}} u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Left;9;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Worker,Left,9)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Base;Left;20;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;4	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.build(Base,Left,20) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.train(Worker,Down,4)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;4	for(Unit u){for(Unit u){u.attack(Closest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Worker,Down,2) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} u.train(Worker,Left,4)}
S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.train(Worker,Left,9) u.idle()} u.attack(LessHealthy)} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){u.harvest(7)}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Harvest;6;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(HasNumberOfUnits(Worker,5)) then {u.harvest(6)} else { e}}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Left,50)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Base,EnemyDir,6)}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Left,50)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;EnemyDir;50;S;C;Build;Barracks;Right;5;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} for(Unit u){u.moveAway()} u.moveToUnit(Ally,MostHealthy) u.train(Light,EnemyDir,50) u.build(Barracks,Right,5)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Weakest)}
S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;1;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;Right;5;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;9;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,1) u.idle()} u.moveToUnit(Ally,MostHealthy) u.train(Light,EnemyDir,50) u.build(Barracks,Right,5) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,9)} else { u.harvest(8)}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,Right,5) u.harvest(8)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;8;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,Right,5) u.harvest(8)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,1)} for(Unit u){u.train(Worker,EnemyDir,7)} u.idle() u.train(Light,EnemyDir,25) u.build(Barracks,EnemyDir,5) u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,1)} for(Unit u){u.train(Worker,EnemyDir,7)} u.idle() u.train(Light,EnemyDir,25) u.build(Barracks,EnemyDir,5) u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Build;Base;Up;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;15	for(Unit u){u.build(Base,Up,5) if(u.isBuilder()) then {u.harvest(20) for(Unit u){u.attack(Closest) u.train(Worker,Left,15)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Build;Barracks;Right;20;S;C;Train;Light;Left;5;S;C;Harvest;7;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.attack(Closest) for(Unit u){for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,Right,20)}} u.train(Light,Left,5)} u.harvest(7)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;3;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) for(Unit u){u.train(Light,Left,9) u.attack(Closest)}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;3;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Light;EnemyDir;3;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Down,15)} if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) u.moveToUnit(Ally,Weakest) for(Unit u){if(u.canHarvest()) then {e} else { u.train(Light,EnemyDir,3)}} for(Unit u){u.train(Light,Left,9) u.attack(Closest)}}}
S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;3;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Attack;Weakest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) for(Unit u){u.train(Light,Left,9) for(Unit u){u.attack(Weakest)}}}}
S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;3;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Attack;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) for(Unit u){u.train(Light,Left,9) for(Unit u){u.attack(Weakest)}}}}
S;For_S;S;S_S;S;C;Build;Base;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;Train;Worker;Up;15	for(Unit u){u.build(Base,Down,5) if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.harvest(6)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) u.train(Worker,Up,15)}}}
S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;C;Train;Worker;Up;15	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.harvest(3) for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) u.train(Worker,Up,15)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;15	for(Unit u){u.train(Light,Right,3) u.idle() if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.attack(MostHealthy) for(Unit u){u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,15)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;15;S;C;Attack;MostHealthy	for(Unit u){u.train(Light,Right,3) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.attack(MostHealthy)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,15)}} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;15	for(Unit u){u.train(Light,Right,3) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Right,1) u.build(Barracks,EnemyDir,2) u.attack(MostHealthy) for(Unit u){u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,15)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;C;Build;Base;Up;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;6	for(Unit u){u.train(Heavy,Up,5) u.build(Base,Up,5) if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.idle() for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.train(Worker,Up,6)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;EnemyDir;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;9;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.train(Heavy,Up,25)} u.train(Worker,EnemyDir,1)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,9)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;9;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,9)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;Up;6;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(7) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.train(Worker,Up,6) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;Up;6;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(7) u.moveToUnit(Enemy,Closest) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.train(Worker,Up,6) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;25	for(Unit u){u.attack(LessHealthy) u.train(Worker,EnemyDir,25)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Left;50;S;C;Train;Worker;Up;50	for(Unit u){u.build(Barracks,Left,9) u.attack(LessHealthy) for(Unit u){u.train(Light,Left,50)} u.train(Worker,Up,50)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Left;50;S;C;Train;Worker;Up;50	for(Unit u){u.harvest(8) u.build(Barracks,Left,9) u.attack(LessHealthy) for(Unit u){u.train(Light,Left,50)} u.train(Worker,Up,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Left;50;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Up;50;S;For_S;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Barracks,Left,9) u.attack(LessHealthy) for(Unit u){u.train(Light,Left,50)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Up,50) for(Unit u){for(Unit u){u.harvest(4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;15;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Down;7	for(Unit u){u.harvest(2) u.idle() for(Unit u){u.train(Heavy,Up,15)} u.attack(LessHealthy) for(Unit u){u.build(Barracks,Down,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;10;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;7	for(Unit u){u.harvest(2) u.idle() for(Unit u){u.train(Heavy,Down,10)} u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;8;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Left;7	for(Unit u){u.harvest(2) for(Unit u){u.train(Heavy,Left,50) u.idle()} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,8) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Left,7)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;10;S;C;Harvest;50;S;For_S;S;S_S;S;C;Train;Ranged;Down;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,6) u.harvest(4) u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Down,10) u.harvest(50)} for(Unit u){u.train(Ranged,Down,15) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;Train;Heavy;EnemyDir;4;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;50;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Up,6) u.idle() u.train(Worker,EnemyDir,5) u.train(Heavy,EnemyDir,4) u.build(Barracks,EnemyDir,10) u.harvest(50) u.attack(Weakest)} for(Unit u){u.train(Ranged,EnemyDir,1) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;50;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Up,6) for(Unit u){u.train(Heavy,Right,6)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,EnemyDir,10) u.harvest(50) u.attack(Weakest)} for(Unit u){u.train(Ranged,EnemyDir,1) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;Attack;Closest;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(6)) then {u.attack(Closest)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Attack;Closest;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(5)) then {u.attack(Closest)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;4;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(4) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;10;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;C;Attack;Weakest;S;For_S;S;C;Train;Ranged;Left;8	for(Unit u){u.train(Light,Up,4) if(u.is(Base)) then {if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Weakest)} else { e}} for(Unit u){u.train(Heavy,Right,6)} u.idle() if(HaveQtdUnitsAttacking(7)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) u.harvest(10) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)} u.attack(Weakest) for(Unit u){u.harvest(10)}} u.build(Barracks,EnemyDir,7) u.train(Worker,EnemyDir,5) u.harvest(4) u.attack(Weakest)} for(Unit u){u.train(Ranged,Left,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway	for(Unit u){u.train(Light,Up,4) for(Unit u){u.idle()} if(u.is(Base)) then {if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Weakest)} else { e}} for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,7) u.train(Worker,EnemyDir,5) u.harvest(4) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()}}
S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;2;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Up,2)} for(Unit u){u.build(Barracks,Left,1) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Down;100;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Down,100) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){for(Unit u){u.attack(Strongest)} for(Unit u){u.train(Worker,EnemyDir,8)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;25;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Left,25) u.idle()} u.build(Barracks,Down,2) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Ranged;Up;1;S;S_S;S;S_S;S;C;Train;Heavy;Right;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;C;Harvest;5	for(Unit u){u.train(Ranged,Up,1) u.train(Heavy,Right,8) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Weakest)} u.train(Worker,Up,4)} u.harvest(5)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Heavy;Right;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;C;Harvest;5	for(Unit u){u.train(Ranged,Up,1) if(u.HasUnitWithinDistanceFromOpponent(1)) then {e} else { for(Unit u){u.idle()}} u.train(Heavy,Right,8) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Weakest)} u.train(Worker,Up,4)} u.harvest(5)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;C;Harvest;5	for(Unit u){u.train(Heavy,Right,8) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Weakest)} u.train(Worker,Up,4)} u.harvest(5)}
S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Heavy;Right;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;3;S;C;Attack;Weakest;S;C;Train;Worker;Up;4	for(Unit u){u.harvest(15) u.train(Heavy,Right,8) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,3)} else { u.attack(Weakest)} u.train(Worker,Up,4)}}
S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;Right;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;3;S;C;Attack;Weakest;S;C;Train;Worker;Up;4	for(Unit u){u.harvest(15) u.attack(MostHealthy) u.train(Heavy,Right,8) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,3)} else { u.attack(Weakest)} u.train(Worker,Up,4)}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;1;S;S_S;S;S_S;S;C;Train;Light;Down;15;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Closest;S;C;Train;Worker;Up;3;S;C;Harvest;5	for(Unit u){u.train(Ranged,Up,1) u.train(Light,Down,15) for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Closest)} u.train(Worker,Up,3)} u.harvest(5)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Ranged;EnemyDir;6;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Train;Light;Up;50;S;S_S;S;For_S;S;C;Harvest;50;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Up,1) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {if(u.canAttack()) then {e} else { u.train(Ranged,EnemyDir,6)}}} u.train(Heavy,Up,9) u.moveToUnit(Ally,MostHealthy) u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,3) u.idle()} if(u.is(Heavy)) then {e} else { u.train(Light,Up,50)} for(Unit u){u.harvest(50)} for(Unit u){if(u.isBuilder()) then {e} else { u.attack(Weakest)} u.train(Worker,Up,4)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Left;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;C;Train;Ranged;Down;7;S;S_S;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;LessHealthy;S;C;Train;Light;Up;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Right;4;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(LessHealthy) u.train(Light,Left,6) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.train(Worker,Up,3) u.train(Ranged,Down,7) for(Unit u){u.train(Heavy,Up,100)} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(LessHealthy)} u.train(Light,Up,3)} for(Unit u){u.harvest(25) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Right,4)} else { e}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Left;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;3;S;S_S;S;S_S;S;C;Train;Ranged;Down;7;S;S_S;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;LessHealthy;S;S_S;S;C;Harvest;5;S;C;Train;Light;Up;3;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Right;4;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(LessHealthy) u.train(Light,Left,6) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) u.train(Worker,Up,3) u.train(Ranged,Down,7) for(Unit u){u.train(Heavy,Up,100)} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(LessHealthy)} u.harvest(5) u.train(Light,Up,3)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Right,4)} else { e}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;7;S;Empty	for(Unit u){u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Weakest)} u.train(Worker,Up,4)} for(Unit u){if(u.canHarvest()) then {u.harvest(7)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;Empty;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { e} u.train(Worker,Up,4)} for(Unit u){u.train(Light,EnemyDir,2)} u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;Train;Light;Up;10;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.train(Light,Up,10) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Ranged;Up;6;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;Train;Light;Up;10;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Up,6) u.moveAway() u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.train(Light,Up,10) u.attack(Strongest)}
S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Up;8;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Up,8)}}}} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Light;Up;1;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,5) u.train(Heavy,Up,8) u.train(Light,Up,1) u.attack(Closest)}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Ranged;Down;7;S;S_S;S;C;Train;Worker;EnemyDir;4;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){u.harvest(10) u.attack(LessHealthy) u.train(Ranged,Down,7) u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;100;S;S_S;S;C;Harvest;25;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.train(Light,Up,100) u.harvest(25) for(Unit u){u.build(Barracks,EnemyDir,7)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Right,3)} u.train(Light,Up,100) u.build(Barracks,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(5)} else { u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;Harvest;50;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Left,6) u.idle()} u.build(Barracks,Down,5) u.harvest(50) u.attack(MostHealthy) u.moveToUnit(Ally,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Down,25) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;C;Train;Heavy;Right;10;S;C;Build;Barracks;Left;100;S;C;Harvest;100;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Down;50;S;C;Attack;LessHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,EnemyDir,3) u.train(Heavy,Right,10)} u.build(Barracks,Left,100) u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Down,50)} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;Harvest;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;Train;Ranged;Down;9;S;For_S;S;C;Attack;Strongest;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;Left;8	for(Unit u){u.build(Barracks,Down,5) u.harvest(50) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.train(Ranged,Down,9) for(Unit u){u.attack(Strongest)}} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,Left,8)}}}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Ranged;Down;3;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){u.harvest(25) u.attack(Closest) u.train(Heavy,Right,10) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.harvest(10)}} u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Ranged,Down,3)} for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;9;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Light;Up;1;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Down,2) u.harvest(9) u.train(Heavy,Up,8) u.train(Light,Up,1) u.attack(MostHealthy) u.train(Worker,Left,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Heavy;Up;5;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;1;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Down,2) u.harvest(9) u.train(Heavy,Up,5) u.attack(LessHealthy) u.train(Light,Up,1) u.train(Worker,Left,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;100;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Right;50;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(100) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15)} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,100)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Right,50)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;Build;Barracks;Right;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Harvest;100;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(100) for(Unit u){u.train(Heavy,EnemyDir,15)} u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.attack(MostHealthy)}}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,3) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Worker,Up,4) for(Unit u){u.build(Barracks,Right,50) if(u.HasUnitInOpponentRange()) then {u.harvest(100) u.idle()}} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,3) u.build(Barracks,EnemyDir,50) u.harvest(2) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Up;3;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Light,Up,3) u.build(Barracks,EnemyDir,100) u.harvest(2) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;C;Build;Barracks;Right;3;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Left;8;S;C;Harvest;9;S;C;Attack;Strongest	for(Unit u){u.train(Light,Down,3) u.build(Barracks,Right,3) u.idle() u.train(Ranged,Left,8) u.harvest(9) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;3;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Train;Ranged;Left;8;S;C;Harvest;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} for(Unit u){u.idle()} u.train(Light,Down,3) u.build(Barracks,Left,25) u.train(Ranged,Left,8) u.harvest(100) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Left;5;S;S_S;S;C;Train;Light;Down;3;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Train;Ranged;Left;8;S;C;Harvest;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}} for(Unit u){u.train(Heavy,Left,5)} u.train(Light,Down,3) u.build(Barracks,Left,25) u.train(Ranged,Left,8) u.harvest(100) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;4;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Heavy,Right,2) u.idle()}} for(Unit u){u.train(Ranged,Down,4)} u.train(Worker,Up,3) u.build(Barracks,EnemyDir,50) u.harvest(2) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Train;Heavy;Right;7;S;For_S;S;S_S;S;C;Train;Ranged;Down;4;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Harvest;2;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){u.train(Ranged,Down,4) for(Unit u){u.train(Heavy,Up,2)}} u.train(Worker,Up,3) u.build(Barracks,EnemyDir,50) u.harvest(2) u.attack(Strongest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;4;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Heavy,Up,7) u.idle()}} for(Unit u){u.train(Ranged,Down,4)} u.train(Worker,Up,3) u.build(Barracks,EnemyDir,50) u.harvest(2) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;S_S;S;C;Train;Light;Left;4;S;For_S;S;S_S;S;C;Harvest;9;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;4;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){if(u.is(Barracks)) then {u.train(Light,Left,4) for(Unit u){u.harvest(9) u.idle()}} for(Unit u){u.train(Ranged,Down,4)} u.train(Worker,Up,3) u.build(Barracks,EnemyDir,50) u.harvest(2) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;7;S;C;Harvest;50;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Down;1;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Up;9	for(Unit u){u.build(Barracks,Up,7) u.harvest(50) u.train(Worker,EnemyDir,2) for(Unit u){u.idle()}} for(Unit u){u.train(Light,Down,1) for(Unit u){u.attack(LessHealthy) u.train(Heavy,Up,9)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;7;S;C;Harvest;50;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Left;1;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Up;9	for(Unit u){u.build(Barracks,Up,7) u.harvest(50) u.train(Worker,EnemyDir,2) for(Unit u){u.idle()}} for(Unit u){u.train(Light,Left,1) for(Unit u){u.attack(LessHealthy) u.train(Heavy,Up,9)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;2;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;50;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Up,7) u.idle() u.harvest(50) u.attack(LessHealthy) u.train(Worker,EnemyDir,2) for(Unit u){u.idle() for(Unit u){u.train(Heavy,Right,50)}}} if(OpponentHasNumberOfUnits(Light,6)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) for(Unit u){u.harvest(4)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle()}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) for(Unit u){u.harvest(4)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.idle() u.train(Worker,EnemyDir,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Up,50)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;5;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,5)} for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;15;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;4;S;C;Attack;Weakest;S;C;Train;Ranged;Up;1	for(Unit u){if(HasNumberOfUnits(Ranged,15)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { for(Unit u){u.build(Barracks,Right,4)} u.attack(Weakest) u.train(Ranged,Up,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Train;Light;Up;9;S;C;Build;Barracks;Up;4;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Light,Up,9) u.build(Barracks,Up,4)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Up;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Up,3)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Down,8) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;C;Harvest;9;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Down;25	for(Unit u){u.build(Barracks,Down,15) for(Unit u){u.train(Light,Left,9)} u.harvest(9) u.idle() u.attack(Closest) u.train(Ranged,Down,25)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;C;Harvest;9;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.build(Barracks,Down,15) for(Unit u){u.train(Light,Left,9)} u.harvest(9) u.idle() u.moveToUnit(Ally,Strongest) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,Strongest)} u.attack(Strongest) if(u.is(Barracks)) then {e} else { u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Down,15) for(Unit u){u.train(Light,Left,9)} u.harvest(9) u.attack(Weakest) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;20;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;7;S;Empty;S;C;Build;Base;Down;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Light,Up,20)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){if(u.canHarvest()) then {u.harvest(7)} else { e} u.build(Base,Down,15) u.attack(Weakest) u.train(Worker,Down,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Worker;EnemyDir;10;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Heavy;Right;5	for(Unit u){u.build(Barracks,Down,1) u.train(Worker,EnemyDir,10) u.harvest(5) u.idle() u.attack(Strongest) u.train(Heavy,Right,5)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;7;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;8;S;C;Train;Ranged;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,6)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){if(u.canHarvest()) then {u.harvest(7)} else { e} u.attack(Closest) u.train(Worker,Down,8) u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;6;S;Empty;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,3)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){if(u.canHarvest()) then {u.harvest(6)} else { e} if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(u.canAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)}}} if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} u.attack(Strongest) u.train(Worker,Down,8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,50)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;15;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;6;S;Empty;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,15)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.harvest(6)} else { e} if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,50)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;C;Train;Ranged;Up;8;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20)} for(Unit u){u.train(Ranged,Up,8)} for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(3)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,4) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Ranged;Left;8;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20)} for(Unit u){if(HaveQtdUnitsAttacking(7)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.train(Ranged,Left,8)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} u.harvest(3)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,4) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Ranged;EnemyDir;5	for(Unit u){u.build(Barracks,Up,50) u.attack(Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Idle;S;C;Build;Barracks;Down;4;S;C;Train;Heavy;Left;20;S;C;Harvest;20;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Ranged,Left,2) u.idle()} u.build(Barracks,Down,4) u.train(Heavy,Left,20) u.harvest(20) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Down;4;S;C;Train;Heavy;Left;20;S;C;Harvest;20;S;C;Attack;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Left,3)} for(Unit u){u.idle()} u.build(Barracks,Down,4) u.train(Heavy,Left,20) u.harvest(20) u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Down;5;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,20)} for(Unit u){u.train(Worker,Up,2) u.build(Barracks,Down,5) u.idle() if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;C;Build;Barracks;Down;5;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.train(Worker,Down,2) u.build(Barracks,Down,5) u.idle() if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){u.attack(Strongest) for(Unit u){u.attack(Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Down;5;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Heavy;Right;100;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.train(Worker,Up,2) u.build(Barracks,Down,5) u.idle() if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.attack(Strongest) for(Unit u){u.train(Heavy,Right,100) u.attack(LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Up;5;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;For_S;S;C;Train;Ranged;Left;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;4	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Light,EnemyDir,2) u.build(Barracks,Up,5) u.idle() if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){for(Unit u){u.train(Ranged,Left,8)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Up;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Train;Ranged;Left;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;4	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Light,EnemyDir,2) u.build(Barracks,Up,5) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.train(Ranged,Left,8)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Up;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Train;Ranged;Left;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;4	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) if(u.is(Base)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.train(Light,EnemyDir,2) u.build(Barracks,Up,5) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.train(Ranged,Left,8)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,4)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Train;Ranged;Left;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Base;Up;5	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) if(u.is(Base)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.train(Light,EnemyDir,2) u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.train(Ranged,Left,8)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Weakest) u.build(Base,Up,5)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Up;9	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) if(u.is(Base)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { e} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Up,9)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Left;5;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Left,5)}} if(u.is(Heavy)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(3)}} for(Unit u){u.harvest(5) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Ranged;Left;1;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;10	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) u.train(Ranged,Left,1) u.train(Worker,Down,6)} for(Unit u){u.harvest(5) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,10)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Ranged;Right;1;S;C;Train;Worker;Down;6;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) u.train(Ranged,Right,1) u.train(Worker,Down,6)} for(Unit u){u.harvest(5) u.attack(Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.train(Heavy,Right,10) for(Unit u){for(Unit u){u.harvest(4)} u.attack(Weakest)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Train;Heavy;Right;10;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.idle()} for(Unit u){u.harvest(100)} for(Unit u){u.train(Heavy,Right,10) for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Train;Heavy;Down;20;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;25	for(Unit u){u.train(Heavy,Down,6)} for(Unit u){u.harvest(1) u.train(Heavy,Down,20) u.idle() u.attack(MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,EnemyDir,25)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;3;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest) u.train(Light,Right,3)} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50) if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.moveAway()}} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;Left;100;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Closest) for(Unit u){u.idle()}} else { u.train(Ranged,Up,1)} u.build(Barracks,Left,100) for(Unit u){u.train(Heavy,Left,50) if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.moveAway()}} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Closest;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Closest)} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50) if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.moveAway()}} u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(5) u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(MostHealthy)} u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;S_S;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;5;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;1;S;C;Harvest;15;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.attack(Closest) for(Unit u){u.build(Base,EnemyDir,5)} u.moveToUnit(Enemy,Farthest)} else { e} u.build(Barracks,EnemyDir,100) u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.train(Heavy,Left,50) if(HasNumberOfUnits(Heavy,1)) then {u.harvest(15)} else { u.moveAway()}} u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;50;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Closest) for(Unit u){u.train(Ranged,Left,50)}} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down;3;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Closest) u.train(Worker,Down,3)} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5) for(Unit u){u.idle()}} for(Unit u){u.attack(LessHealthy)} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;For_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,8) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(15) for(Unit u){u.train(Heavy,Left,50)}} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;8;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;For_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,Right,8) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(15) for(Unit u){u.train(Heavy,Left,50)}} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;C;Train;Worker;Right;7;S;C;Harvest;5;S;C;Train;Light;Up;2;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Right,7) u.harvest(5) u.train(Light,Up,2) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;C;Harvest;2;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Train;Worker;Right;5;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.train(Light,Left,2)} u.train(Ranged,EnemyDir,7) u.harvest(2) for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Worker,Right,5) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;C;Harvest;2;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.train(Light,Left,2)} u.train(Ranged,Right,7) u.harvest(2) u.attack(Closest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;3;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.train(Light,Left,2)} u.train(Ranged,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(3)} u.idle() for(Unit u){u.train(Heavy,EnemyDir,5)} u.moveToUnit(Enemy,Strongest) u.moveAway() u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Harvest;2;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,5)} u.harvest(2) u.attack(Weakest) u.train(Light,EnemyDir,50) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;5;S;C;Harvest;2;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,5)} u.harvest(2) u.attack(Weakest) u.train(Light,EnemyDir,50) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;C;Train;Light;Right;5;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle() u.train(Light,Right,5)}} u.train(Ranged,Right,7) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;C;Harvest;2;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,7) u.train(Ranged,EnemyDir,7) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.harvest(2) u.attack(Closest) for(Unit u){for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.train(Ranged,Right,1) u.build(Barracks,Right,7) for(Unit u){u.harvest(4)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,2) u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;50;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(MostHealthy) u.train(Worker,EnemyDir,50)} if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;50;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.attack(LessHealthy)}} u.train(Worker,Left,50)} if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Down;1;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Light,Down,15) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Ally,Weakest) u.build(Barracks,Down,1) u.attack(LessHealthy)} if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Build;Barracks;Down;10;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Train;Ranged;EnemyDir;5	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Down,10)} u.harvest(3) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,5)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Up;9	for(Unit u){if(u.canHarvest()) then {u.moveAway()} else { for(Unit u){u.build(Barracks,Up,3)}}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Light,Up,9)}
S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;Right;25;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;C;Harvest;10;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Right,25)} else { u.moveToUnit(Enemy,Strongest)}}} for(Unit u){u.build(Barracks,Up,10) u.harvest(10) u.attack(Closest) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Down;3;S;C;Harvest;7;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveAway() u.build(Barracks,Down,3) u.harvest(7)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Light,EnemyDir,7) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.harvest(5) u.attack(Farthest) u.train(Worker,EnemyDir,7)} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;20	for(Unit u){u.attack(MostHealthy) u.train(Worker,Down,20)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;6;S;C;Train;Worker;Down;20	for(Unit u){if(u.is(Base)) then {e} else { u.moveAway()} u.attack(Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,EnemyDir,6) u.train(Worker,Down,20)}
S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Right,3)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Light;Up;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Enemy,Closest) u.idle()} for(Unit u){for(Unit u){u.train(Worker,Left,3) for(Unit u){u.train(Light,Up,10)} for(Unit u){u.attack(Closest)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Light;Up;10;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Closest) u.idle()} for(Unit u){u.train(Worker,Left,3) for(Unit u){u.train(Light,Up,10)} for(Unit u){u.train(Worker,Down,25)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;7;S;S_S;S;For_S;S;C;Train;Worker;Down;25;S;For_S;S;C;Build;Barracks;Right;4	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Closest) u.idle()} for(Unit u){for(Unit u){u.train(Light,Up,7)} for(Unit u){u.train(Worker,Down,25)} for(Unit u){u.build(Barracks,Right,4)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;7;S;S_S;S;For_S;S;C;Train;Worker;Down;4;S;For_S;S;C;Build;Barracks;Right;4	for(Unit u){u.build(Barracks,EnemyDir,1) u.moveToUnit(Enemy,Closest) u.idle()} for(Unit u){for(Unit u){u.train(Light,Up,7)} for(Unit u){u.train(Worker,Down,4)} for(Unit u){u.build(Barracks,Right,4)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;5;S;C;Idle;S;For_S;S;C;Train;Heavy;Left;3;S;C;MoveAway;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,5) u.idle() for(Unit u){u.train(Heavy,Left,3)} u.moveAway()} for(Unit u){u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;C;Attack;Closest	for(Unit u){u.train(Worker,Right,10) u.attack(Closest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Down;7;S;For_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;Empty	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Enemy,Strongest) u.train(Worker,Down,7)} for(Unit u){for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { e}}
S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Worker;Left;10;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){if(HasLessNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Worker,Left,10)}} else { for(Unit u){u.moveToUnit(Ally,Closest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Left;20;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy	for(Unit u){u.harvest(5) for(Unit u){u.train(Worker,Left,20)}} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)} u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Base;Right;10;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;For_S;S;C;Harvest;7	for(Unit u){u.build(Base,Right,10) u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){for(Unit u){u.harvest(7)}}}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;25;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Up;10;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Light,25)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,10) for(Unit u){if(u.isBuilder()) then {u.attack(MostHealthy)}} u.moveToUnit(Ally,Weakest)} for(Unit u){if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Up;10;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.harvest(6)}} u.train(Worker,Up,10) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Up,2) for(Unit u){u.train(Ranged,EnemyDir,6)} u.attack(MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;5;S;C;Train;Heavy;Down;6;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Down;15;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle() u.build(Barracks,Left,5) u.train(Heavy,Down,6) u.attack(Weakest)} for(Unit u){u.train(Light,Down,15)} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Down;9;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;MostHealthy;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(3) u.train(Worker,Down,9) for(Unit u){u.idle()}} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;25;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;For_S;S;C;Train;Heavy;Right;25	for(Unit u){u.idle() u.build(Barracks,Up,25) u.harvest(7) u.moveToUnit(Enemy,MostHealthy) if(u.canHarvest()) then {e} else { for(Unit u){u.train(Heavy,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;25;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.idle() u.build(Barracks,Up,25) u.harvest(7) u.moveToUnit(Enemy,MostHealthy) u.attack(Closest) for(Unit u){u.train(Heavy,Up,25)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;25;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;15;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.idle() u.build(Barracks,Up,25) for(Unit u){u.idle()} u.harvest(15) u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Up,25)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;15;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.build(Barracks,Up,25) u.train(Worker,EnemyDir,2) for(Unit u){u.idle()} u.harvest(15) u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Up,25)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;25;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;15;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.build(Barracks,Up,25) u.train(Worker,EnemyDir,2) u.idle() for(Unit u){u.idle()} u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Up,25)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;15;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;Up;25	for(Unit u){u.build(Barracks,Down,2) u.train(Worker,EnemyDir,2) for(Unit u){u.idle()} u.harvest(15) u.attack(MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Up,25)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;8;S;C;Build;Barracks;Up;50;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;9;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Ranged;Down;50;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){if(HasLessNumberOfUnits(Base,8)) then {u.build(Barracks,Up,50)} else { u.moveToUnit(Ally,Strongest)} u.harvest(9)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Ranged,Down,50)} for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Worker,EnemyDir,50)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveAway;S;C;Attack;Strongest;S;C;Harvest;9;S;For_S;S;For_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){for(Unit u){u.harvest(7)} if(HaveQtdUnitsAttacking(7)) then {u.moveAway()} else { u.attack(Strongest)} u.harvest(9)} for(Unit u){for(Unit u){u.build(Barracks,Right,7)}} for(Unit u){u.train(Worker,EnemyDir,50)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;15;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;Idle;S;C;MoveAway;S;C;Harvest;9	for(Unit u){for(Unit u){u.train(Worker,Up,15)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Down,50)} u.idle() u.moveAway() u.harvest(9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;S_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Base;Left;50;S;C;Harvest;9	for(Unit u){for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Down,50)} u.moveAway() for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Base,Left,50)} u.harvest(9)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(LessHealthy)} u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Base;EnemyDir;2;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.train(Worker,Up,3)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.build(Base,EnemyDir,2) u.harvest(8) u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;C;Train;Worker;Down;25	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.harvest(1) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) u.train(Worker,Down,25)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Strongest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest)}}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;25;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,25)} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.attack(Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;Farthest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;3	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.build(Barracks,Up,50) u.attack(Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,3)}}}
S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;9;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.build(Barracks,Up,50) for(Unit u){for(Unit u){u.idle()}}} for(Unit u){for(Unit u){u.train(Heavy,Down,9) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.attack(Closest)}}}}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(Closest)}}} for(Unit u){u.train(Worker,Up,100)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;4;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,4)} for(Unit u){for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;C;Idle;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.attack(Weakest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.idle()}} else { e}}} for(Unit u){u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;15	for(Unit u){u.train(Worker,EnemyDir,8) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Right,15)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;10;S;C;Harvest;3;S;Empty;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;15	for(Unit u){u.train(Worker,EnemyDir,8) for(Unit u){if(HaveQtdUnitsAttacking(10)) then {u.harvest(3)} else { e} u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.train(Worker,Right,15)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.harvest(1) u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,Left,6) u.train(Worker,Right,25) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle() u.harvest(6)} for(Unit u){for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,Left,6) u.train(Worker,Right,25) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Build;Base;EnemyDir;15;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;20	for(Unit u){if(u.canHarvest()) then {for(Unit u){u.build(Base,EnemyDir,15)}} else { u.moveToUnit(Ally,Strongest)}} for(Unit u){u.harvest(7)} for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,20)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Harvest;7;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;5;S;S_S;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;EnemyDir;6	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.harvest(7)} for(Unit u){u.idle()}} for(Unit u){u.attack(Strongest)} for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Right,5) u.train(Heavy,Left,8) for(Unit u){u.moveToUnit(Enemy,Strongest)}}}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Light,EnemyDir,6)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Ranged;Left;3;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;25;S;For_S;S;C;Train;Heavy;Left;25	for(Unit u){for(Unit u){u.train(Worker,Down,7)} for(Unit u){u.build(Barracks,Down,1) u.harvest(2) u.attack(Weakest)} for(Unit u){u.train(Ranged,Left,3)} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,25)} for(Unit u){u.train(Heavy,Left,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;10;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;25;S;For_S;S;C;Train;Heavy;Left;25	for(Unit u){for(Unit u){u.train(Worker,Down,7)} for(Unit u){u.build(Barracks,Down,1) u.harvest(2) u.attack(Weakest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {if(HasLessNumberOfUnits(Base,10)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Enemy,LessHealthy)}}} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,25)} for(Unit u){u.train(Heavy,Left,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;C;Harvest;10;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;C;Train;Ranged;Left;100	for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(10)} u.moveToUnit(Ally,LessHealthy) u.moveAway() u.attack(Strongest) u.train(Ranged,Left,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;C;Harvest;10;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Strongest;S;C;Train;Ranged;Left;100	for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(10)} u.moveAway() u.attack(Strongest) u.train(Ranged,Left,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Left;100	for(Unit u){for(Unit u){u.train(Light,EnemyDir,9)} for(Unit u){u.idle() u.build(Barracks,Left,1) u.harvest(10)} u.moveToUnit(Enemy,Weakest) u.train(Ranged,Left,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;EnemyDir;9	for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(1) u.idle() u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(7) u.attack(Weakest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;4;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;EnemyDir;10;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(7) u.attack(Weakest) for(Unit u){u.train(Light,Left,4)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,EnemyDir,10)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;100;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;100;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(100) u.attack(Strongest) for(Unit u){u.train(Light,Left,100)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;15;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;For_S;S;C;Train;Light;Left;100;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,EnemyDir,15) u.harvest(15) u.attack(Strongest) u.train(Worker,Left,5) for(Unit u){u.train(Light,Left,100)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Up;10;S;C;Attack;Closest;S;C;Train;Worker;Left;5;S;For_S;S;C;Idle	for(Unit u){u.train(Light,Down,5) u.build(Barracks,EnemyDir,15) u.harvest(25) u.moveToUnit(Ally,LessHealthy) u.train(Ranged,Up,10) u.attack(Closest) u.train(Worker,Left,5) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;25;S;S_S;S;C;Train;Ranged;Up;10;S;C;Attack;Closest	for(Unit u){u.train(Light,Down,5) u.build(Barracks,EnemyDir,15) u.harvest(25) u.train(Ranged,Up,10) u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Harvest;25;S;S_S;S;C;Train;Ranged;Up;10;S;C;Attack;Closest	for(Unit u){u.train(Light,Down,1) u.build(Barracks,EnemyDir,15) u.harvest(25) u.train(Ranged,Up,10) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;4;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Down;50;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;100	for(Unit u){u.train(Light,Left,4) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Down,50)} for(Unit u){if(u.isBuilder()) then {u.harvest(100)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;20;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;50;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;4;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle	for(Unit u){if(HasNumberOfUnits(Light,20)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Right,50) u.harvest(1) u.moveToUnit(Enemy,MostHealthy) u.harvest(4) u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()}}
S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;7;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Left;5	if(HasNumberOfUnits(Worker,7)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,5)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Idle;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;5	for(Unit u){for(Unit u){u.build(Barracks,Right,5) u.idle() u.harvest(15)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Harvest;1;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;5;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,EnemyDir,15) for(Unit u){u.build(Barracks,Right,5) u.harvest(1) u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,5)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;8;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){for(Unit u){u.attack(Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Heavy,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.train(Light,Down,8)} for(Unit u){u.train(Worker,Left,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Ranged,Up,5)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,25)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveAway()} u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Light;Left;20;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Left;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;7;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.harvest(8) u.train(Light,Left,20) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Left,15)}}}} for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}} if(HasNumberOfUnits(Base,7)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;4	for(Unit u){for(Unit u){u.attack(Strongest) u.train(Worker,Right,4)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveAway;S;C;Build;Base;Up;7	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { for(Unit u){u.harvest(5)}}} for(Unit u){u.train(Worker,Right,50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveAway()} u.build(Base,Up,7)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Build;Base;Up;7	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { for(Unit u){u.harvest(5)}}} for(Unit u){u.train(Worker,Right,50)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveAway()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.build(Base,Up,7)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Build;Base;EnemyDir;25;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { for(Unit u){u.harvest(5)}}} for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveAway()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.build(Base,EnemyDir,25)} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.moveAway()} for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { for(Unit u){u.harvest(5)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;100;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.idle()}} for(Unit u){u.train(Worker,EnemyDir,100)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;10	for(Unit u){if(u.isBuilder()) then {u.attack(LessHealthy)}} for(Unit u){u.train(Worker,Right,10)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;Harvest;100;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.idle()} u.harvest(8)}} for(Unit u){u.harvest(100) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}}} for(Unit u){u.build(Barracks,Left,8) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.attack(Weakest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(1) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} for(Unit u){u.build(Barracks,Left,8) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;15;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(1) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} for(Unit u){u.build(Barracks,Left,8) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.train(Light,Down,15) u.moveToUnit(Ally,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;15;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(1) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} for(Unit u){u.build(Barracks,Left,8) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.train(Light,Down,15) u.moveToUnit(Ally,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;8;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Attack;Strongest;S;C;Train;Light;Down;10	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(2) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}}} for(Unit u){u.build(Barracks,Left,8) u.harvest(3) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Strongest)} else { u.train(Light,Down,10)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Worker;Right;20;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(2) if(u.canAttack()) then {u.idle()}}} for(Unit u){u.harvest(3) for(Unit u){u.train(Worker,Right,20)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Strongest)}} if(HasNumberOfUnits(Light,5)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Down;4;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest) for(Unit u){for(Unit u){u.build(Barracks,Right,25)} if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)} u.harvest(10)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.harvest(5)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;25;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;LessHealthy;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;EnemyDir;4;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy) u.attack(Weakest) for(Unit u){for(Unit u){u.build(Barracks,Right,25)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(LessHealthy)} u.harvest(10)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Heavy,EnemyDir,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;EnemyDir;4;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.attack(Weakest) for(Unit u){for(Unit u){u.build(Barracks,Right,25)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} u.harvest(10)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,EnemyDir,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;EnemyDir;4;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,Closest)} u.moveAway() u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(8) for(Unit u){u.build(Barracks,Right,25)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} u.attack(LessHealthy)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,EnemyDir,4)} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;1;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Up;5;S;For_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.build(Barracks,Right,1)}} for(Unit u){if(u.isBuilder()) then {u.attack(LessHealthy)}} for(Unit u){u.train(Heavy,Up,100) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Up,5) for(Unit u){u.attack(Weakest)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Down,20)} for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)} for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.train(Light,Up,4) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;7;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;1;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;7;S;For_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Closest;S;For_S;S;C;MoveAway;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Light,Up,7)} u.idle() u.build(Barracks,Up,1)} if(HasLessNumberOfUnits(Light,7)) then {for(Unit u){for(Unit u){u.harvest(7) u.attack(MostHealthy)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.moveToUnit(Ally,Weakest)} else { u.attack(Closest)}} for(Unit u){u.moveAway()} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Heavy;Down;10;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,20) u.train(Heavy,Down,10)} for(Unit u){u.attack(MostHealthy)}
S;For_S;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.attack(Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Right,10)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;Attack;Closest;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;20	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.attack(Closest)}} u.harvest(10) u.train(Worker,Right,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;25;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.idle() u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Weakest)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,EnemyDir,9)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;25;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;25;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.idle() u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Farthest) u.train(Ranged,Left,25)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Weakest)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Ranged;Down;100;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;25;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4) u.attack(Closest)} if(u.canHarvest()) then {for(Unit u){u.train(Ranged,Down,100)}}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Weakest)} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4) u.attack(Weakest)} u.attack(Weakest) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Harvest;5;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}} else { u.harvest(5)} u.attack(Weakest) u.moveToUnit(Ally,Weakest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;C;Harvest;5;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}} else { u.harvest(5)} u.attack(Weakest) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,15)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}} else { u.harvest(5)} u.attack(Weakest) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,15)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Weakest)} else { u.harvest(5)} u.attack(Weakest) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,15)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest) u.train(Worker,EnemyDir,4) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Harvest;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;1;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() u.harvest(10) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Weakest) u.train(Light,Left,1) u.train(Heavy,Left,15)} u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Harvest;10;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;1;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Up;3	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() u.harvest(10) if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Weakest) u.train(Light,Left,1) u.train(Heavy,Left,15)} u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Up,3)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Harvest;10;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;1;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;EnemyDir;25	for(Unit u){for(Unit u){u.build(Barracks,Left,8) u.harvest(1) u.idle() u.harvest(10) if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Weakest) u.train(Light,Left,1) u.train(Heavy,Left,15)} u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,EnemyDir,25)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Harvest;10;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Left;1;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;EnemyDir;25	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(1) u.idle() u.harvest(10) if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Weakest) u.train(Light,Left,1) u.train(Heavy,Left,15)} u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,EnemyDir,25)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Harvest;2;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Left;15;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;EnemyDir;25	for(Unit u){u.attack(MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(1) u.idle() u.harvest(2) if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Weakest) u.train(Heavy,Left,15)} u.train(Worker,EnemyDir,4) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,EnemyDir,25)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,50)} else { if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.idle()}}}} for(Unit u){u.harvest(9) if(u.HasUnitWithinDistanceFromOpponent(4)) then {if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)} else { e}}} u.attack(Weakest) if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,50)} else { if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.moveAway()}}}} for(Unit u){u.harvest(9) if(u.HasUnitWithinDistanceFromOpponent(4)) then {if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)} else { e}}} u.attack(Weakest) if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Light;6;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Up,100)} for(Unit u){if(HasNumberOfUnits(Light,6)) then {u.harvest(1)}} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,50)} else { if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.moveToUnit(Ally,Weakest)}}}} for(Unit u){u.harvest(9) u.attack(Weakest) if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,50)} else { if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}} for(Unit u){u.harvest(9) u.attack(Weakest) if(OpponentHasNumberOfUnits(Barracks,50)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;EnemyDir;50;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,100)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,EnemyDir,50)} else { if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}} for(Unit u){u.harvest(9) u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Up,50)} for(Unit u){u.build(Barracks,Down,10) u.attack(Strongest) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;5;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(1)} for(Unit u){u.idle() u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.harvest(5) for(Unit u){u.build(Barracks,Down,7)}} for(Unit u){u.train(Worker,Down,3) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.train(Light,EnemyDir,15)}} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;8;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;15;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(1)} for(Unit u){u.idle() u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Left,8) for(Unit u){u.build(Barracks,Down,7)} u.attack(Farthest)} for(Unit u){u.train(Worker,Down,3) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,EnemyDir,15)} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;8;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(1)} for(Unit u){u.idle() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Left,8) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Down,3) for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Left;8;S;S_S;S;For_S;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Down;3	for(Unit u){u.harvest(2)} for(Unit u){u.idle() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Left,8) for(Unit u){u.build(Barracks,Down,7)} u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Down,3)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Train;Worker;EnemyDir;2;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;20;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Ranged;Right;2	for(Unit u){u.harvest(4) for(Unit u){u.build(Barracks,Down,2)} u.idle() u.moveToUnit(Enemy,Closest) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,3) u.train(Worker,EnemyDir,2)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Left,20)} u.moveToUnit(Ally,Closest)}} for(Unit u){u.train(Ranged,Right,2)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Right;6;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Down,1)} if(u.isBuilder()) then {e} else { u.train(Light,Right,6)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,9) u.moveToUnit(Ally,Weakest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Right;6;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Down,1) for(Unit u){u.idle()}} if(u.isBuilder()) then {e} else { u.train(Light,Right,6)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,9) u.moveToUnit(Ally,Weakest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Right;6;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} if(u.isBuilder()) then {e} else { u.train(Light,Right,6)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Up,9) u.moveToUnit(Ally,Weakest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,9) u.moveToUnit(Ally,Weakest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,20) u.moveToUnit(Ally,Weakest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)}}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;25;S;C;MoveAway;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Up,25) u.moveAway()} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;If_B_then_S;B;IsBuilder;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Down,25) if(u.isBuilder()) then {u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;8;S;S_S;S;C;Harvest;7;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Down,25) if(u.isBuilder()) then {if(HasLessNumberOfUnits(Heavy,8)) then {u.harvest(7) for(Unit u){u.attack(Strongest)}} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}}}
S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;7;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Left,25) if(u.isBuilder()) then {u.harvest(7) for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;15	for(Unit u){u.harvest(4) u.attack(LessHealthy) u.train(Worker,Right,15)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Harvest;8;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;Train;Ranged;Up;10;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){if(u.canAttack()) then {u.harvest(8) u.idle() u.moveToUnit(Enemy,Farthest)} else { e} u.train(Ranged,Up,10) for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;Right;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){u.idle() u.train(Light,Right,15) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Weakest)} for(Unit u){u.build(Barracks,Left,5)}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle	for(Unit u){u.attack(Weakest) for(Unit u){u.train(Worker,Right,15)} for(Unit u){u.moveToUnit(Enemy,Closest) u.idle()}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;15	for(Unit u){u.attack(Weakest) for(Unit u){u.train(Worker,Right,15)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;50;S;C;MoveAway;S;C;Train;Worker;Left;6;S;C;Idle;S;C;Harvest;2;S;S_S;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Left,50) u.moveAway() u.train(Worker,Left,6) u.idle() u.harvest(2)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest) u.build(Barracks,Right,9)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;50;S;C;MoveAway;S;C;Train;Worker;Left;6;S;C;Idle;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Left,50) u.moveAway() u.train(Worker,Left,6) u.idle() u.harvest(2)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.build(Barracks,Right,9)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.moveToUnit(Ally,Strongest)}} for(Unit u){u.moveToUnit(Enemy,Farthest) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;50;S;C;MoveAway;S;C;Train;Worker;Left;6;S;C;Idle;S;C;Harvest;2;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Left,50) u.moveAway() u.train(Worker,Left,6) u.idle() u.harvest(2) for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.build(Barracks,Right,9)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(50) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;50;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Right;50;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Up,50)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Right,50)} if(u.canHarvest()) then {u.moveAway() u.attack(Closest)} u.idle() u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;50;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;7;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;Weakest;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;For_S;S;C;Train;Ranged;Up;9	for(Unit u){u.build(Barracks,Up,50)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)} else { for(Unit u){u.harvest(7)}} if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Weakest)} u.idle() u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){for(Unit u){u.train(Ranged,Up,9)}}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;20;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Heavy;Left;2;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;1;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Right,20)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Left,2) for(Unit u){if(u.is(Worker)) then {u.harvest(1)}}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(6) u.attack(Strongest) u.train(Worker,EnemyDir,50) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;S_S;S;C;Harvest;1;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Up,25) u.harvest(1) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Train;Worker;Up;100;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.train(Worker,EnemyDir,9) u.train(Worker,Up,100)} u.harvest(4) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Up,100)} u.harvest(4) u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest;S;Empty	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Up,100)} for(Unit u){u.idle()} u.harvest(4) u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)} else { e}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;Right;20;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Right,2) u.idle()} for(Unit u){u.train(Ranged,Right,20)} u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;10;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Weakest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Light,Right,10) u.harvest(6) u.attack(Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;9;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Heavy;Left;100;S;S_S;S;C;Train;Light;Up;50;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2	for(Unit u){if(u.canHarvest()) then {e} else { u.attack(Weakest)} if(u.is(Barracks)) then {u.moveToUnit(Ally,Weakest)} else { if(u.canAttack()) then {u.harvest(9)} u.attack(Farthest)} if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,Left,100)} else { u.train(Light,Up,50) for(Unit u){u.idle() u.build(Barracks,Up,2)}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Right;9;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;9;S;C;Attack;Farthest;S;S_S;S;C;Train;Heavy;Right;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;1;S;C;Train;Heavy;Left;100;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2	for(Unit u){if(u.canHarvest()) then {e} else { u.attack(Weakest)} if(u.is(Barracks)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Right,9)}} if(u.canAttack()) then {u.harvest(9)} u.attack(Farthest)} u.train(Heavy,Right,2) if(HasNumberOfWorkersHarvesting(1)) then {u.train(Heavy,Left,100)} else { for(Unit u){u.idle() u.build(Barracks,Up,2)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;C;Idle;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Harvest;1;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(HasLessNumberOfUnits(Barracks,1)) then {u.idle()}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){for(Unit u){u.build(Barracks,Left,1) u.harvest(1) u.train(Heavy,Left,4)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Right;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Train;Light;Up;20;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Right,5) u.harvest(15)} for(Unit u){u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Heavy,Right,2)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.is(Worker)) then {e} else { u.train(Light,Up,20)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Train;Light;Up;20;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Right,5) u.harvest(15)} for(Unit u){u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.is(Worker)) then {e} else { u.train(Light,Up,20)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;Train;Light;Up;20;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Right,2) u.harvest(15)} for(Unit u){u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.is(Worker)) then {e} else { u.train(Light,Up,20)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Harvest;20;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Down;1;S;Empty;S;C;Train;Heavy;EnemyDir;7	for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle() u.attack(Closest) if(u.is(Base)) then {for(Unit u){u.harvest(20)}} if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Down,1)}} else { e} u.train(Heavy,EnemyDir,7)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;15;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Harvest;20;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Down;1;S;Empty	for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle() u.attack(Closest) u.train(Ranged,EnemyDir,15) if(u.is(Base)) then {for(Unit u){u.harvest(20)}} if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Down,1)}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;1;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;S_S;S;C;Idle;S;C;Train;Light;Down;5;S;C;Attack;Weakest	for(Unit u){u.train(Light,Down,1) u.build(Barracks,EnemyDir,50) u.idle() u.train(Light,Down,5) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Train;Light;Right;15;S;C;Attack;Weakest	for(Unit u){u.train(Light,Down,1) u.build(Barracks,EnemyDir,50) u.harvest(3) u.idle() u.train(Light,Right,15) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Train;Light;Right;15;S;C;Train;Worker;Down;5	for(Unit u){u.train(Light,Down,1) u.build(Barracks,Up,50) u.harvest(3) u.moveToUnit(Enemy,Closest) u.idle() u.train(Light,Right,15) u.train(Worker,Down,5)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Train;Light;Right;15;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest	for(Unit u){u.train(Ranged,Down,1) u.build(Barracks,Up,50) u.harvest(3) u.moveToUnit(Enemy,Closest) u.idle() u.train(Light,Right,15) u.train(Worker,Down,5) u.harvest(6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Right;15;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest	for(Unit u){u.train(Ranged,Down,1) u.build(Barracks,Up,50) u.harvest(3) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest) u.train(Light,Right,15) u.train(Worker,Down,5) u.harvest(6) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;3;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Right;15;S;S_S;S;C;Train;Worker;Down;5;S;C;Harvest;6	for(Unit u){u.train(Ranged,Down,1) u.build(Barracks,Up,50) u.harvest(3) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest) u.train(Light,Right,15) u.train(Worker,Down,5) u.harvest(6)}
S;S_S;S;For_S;S;C;Build;Base;Right;8;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Right;15;S;S_S;S;C;Train;Worker;Down;5;S;C;Harvest;6	for(Unit u){u.build(Base,Right,8)} for(Unit u){u.train(Ranged,Down,1) u.build(Barracks,Up,50) u.harvest(3) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} u.train(Light,Right,15) u.train(Worker,Down,5) u.harvest(6)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest)}}} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy) if(HasNumberOfUnits(Heavy,7)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Left;15	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Left,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(Weakest) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,9) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,9) u.harvest(8) for(Unit u){u.train(Heavy,Down,10)} u.attack(Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Closest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Right;50;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveAway;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest)} else { u.idle()} u.moveAway() u.attack(LessHealthy) u.train(Worker,Right,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)} else { e} if(u.canHarvest()) then {for(Unit u){u.moveAway()}}}} if(OpponentHasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Idle	for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.idle()}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;15;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;5;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;2	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(15)} u.attack(MostHealthy) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.idle()} else { e}}} if(OpponentHasNumberOfUnits(Light,5)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,2)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;5;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;2	for(Unit u){u.attack(MostHealthy) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.idle()} else { e}}} if(OpponentHasNumberOfUnits(Light,5)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,Down,2)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.moveAway()} u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.train(Worker,Up,7) u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Down;8	for(Unit u){for(Unit u){u.idle()} u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Down,8)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Down;8	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Down,8)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;9;S;For_S;S;C;Train;Light;Up;100	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) u.build(Barracks,EnemyDir,15) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveAway()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(9)}} for(Unit u){u.train(Light,Up,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;9;S;For_S;S;C;Train;Light;Up;100	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,15) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Right,1)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(9)}} for(Unit u){u.train(Light,Up,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Harvest;9;S;For_S;S;C;Train;Light;Up;100	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,15) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,1)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.harvest(9)}} for(Unit u){u.train(Light,Up,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;Left;6	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.train(Worker,Left,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;4;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,1) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(4)} u.train(Ranged,EnemyDir,10) u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;4;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,1) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(4)} u.train(Ranged,EnemyDir,3) u.attack(Weakest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;For_S;S;C;Train;Light;Down;15;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;8	for(Unit u){for(Unit u){u.train(Light,Down,15)}} for(Unit u){u.idle() u.build(Barracks,Left,9)} for(Unit u){u.attack(Strongest)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,Down,8)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,25)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;MoveAway;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Up;5	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.harvest(6) if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { u.moveAway()} u.attack(Closest) for(Unit u){u.train(Ranged,Up,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;C;MoveAway;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Up;5	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Heavy,Down,6) u.idle() u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { u.moveAway()} u.attack(Closest) for(Unit u){u.train(Ranged,Up,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;2;S;C;Train;Heavy;Left;20;S;For_S;S;C;Train;Ranged;Up;5	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.attack(Weakest) if(u.HasUnitWithinDistanceFromOpponent(10)) then {e} else { for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2)} else { u.train(Heavy,Left,20)}}} for(Unit u){u.train(Ranged,Up,5)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Idle;S;C;Train;Ranged;Down;2;S;For_S;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;EnemyDir;2	for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.build(Barracks,Left,4) u.idle() u.train(Ranged,Down,2)}} for(Unit u){u.harvest(100) u.attack(Closest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Light,EnemyDir,2)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Idle;S;C;Train;Ranged;Down;2;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;EnemyDir;2	for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.build(Barracks,Left,4) u.idle() u.train(Ranged,Down,2)}} for(Unit u){u.attack(Closest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Light,EnemyDir,2)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Idle;S;C;Train;Ranged;Down;2;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.moveAway()} for(Unit u){u.build(Barracks,Left,4) u.idle() u.train(Ranged,Down,2)}} for(Unit u){u.attack(Closest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;For_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Idle;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,8)} for(Unit u){u.build(Barracks,Left,4) u.idle()}} for(Unit u){u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;15;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.attack(LessHealthy)}} for(Unit u){u.train(Worker,Left,15) u.moveToUnit(Enemy,Farthest)} if(HaveQtdUnitsAttacking(15)) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;For_S;S;C;Build;Base;EnemyDir;50;S;For_S;S;S_S;S;C;Train;Worker;Up;50;S;C;Attack;Strongest	for(Unit u){u.harvest(10) for(Unit u){u.build(Base,EnemyDir,50)}} for(Unit u){u.train(Worker,Up,50) u.attack(Strongest)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Train;Light;Down;5;S;C;Attack;LessHealthy	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Light,Down,5)}} u.attack(LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Worker;Left;6;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.is(Worker)) then {if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,6) if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest)}}} else { u.moveToUnit(Enemy,Strongest)}} u.attack(LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;10;S;C;Attack;LessHealthy	for(Unit u){if(u.is(Worker)) then {if(u.canAttack()) then {for(Unit u){if(u.is(Light)) then {u.moveToUnit(Enemy,Weakest)}}} else { u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,EnemyDir,10)} u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;Build;Barracks;Left;10;S;C;Harvest;8;S;For_S;S;For_S;S;C;Attack;Farthest	for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,7) u.build(Barracks,Left,10) u.harvest(8)} for(Unit u){for(Unit u){u.attack(Farthest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Left;6	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,5) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,10) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.harvest(10)} for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Left,6)}}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Up;2;S;C;Build;Barracks;Left;9;S;S_S;S;C;Idle;S;C;Harvest;3;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.train(Worker,Up,2)} else { u.build(Barracks,Left,9)} u.idle() u.harvest(3)} for(Unit u){u.moveAway()} for(Unit u){u.train(Light,Right,10) u.attack(Closest)} if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Build;Barracks;Left;9;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;10;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.build(Barracks,Left,9)} u.harvest(3)} for(Unit u){u.train(Light,Right,10) u.attack(Closest)} if(HasNumberOfWorkersHarvesting(4)) then {u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;4;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;3;S;C;MoveAway;S;For_S;S;C;Train;Light;Down;6	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(4)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(LessHealthy)}} u.attack(Closest) u.train(Light,Left,50) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,3)}} else { u.moveAway()}} for(Unit u){u.train(Light,Down,6)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;4;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(4)} u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} u.attack(Closest) u.train(Light,Left,50) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,3)}} else { u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Light,Down,6)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(4)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}} u.attack(Closest) u.train(Light,Left,50) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,3)}} else { u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Light,Down,6)} u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(4)} u.attack(Closest) u.train(Light,Left,50) for(Unit u){for(Unit u){u.train(Light,Left,7)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,3)}} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.idle()}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;50;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Left;7;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Down;3;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(4)} u.attack(Closest) u.train(Light,Left,50) for(Unit u){for(Unit u){u.train(Light,Left,7)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Down,3)}} else { u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.idle()}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;7;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Down;3;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;1	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.harvest(3)} u.attack(Closest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,Up,7)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Down,3)}} else { u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,1)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Harvest;25;S;For_S;S;C;Train;Heavy;Down;15;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.build(Barracks,EnemyDir,6)} for(Unit u){u.harvest(25)} for(Unit u){u.train(Heavy,Down,15)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {for(Unit u){if(u.isBuilder()) then {e} else { u.attack(Closest) if(u.canAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Worker,EnemyDir,25) u.attack(LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Harvest;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canHarvest()) then {if(HasLessNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveAway() u.moveToUnit(Ally,LessHealthy) u.harvest(6) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.harvest(5)}}} u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,15) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}}} for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;8;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;15;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canHarvest()) then {if(HasLessNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveAway() u.moveToUnit(Enemy,Strongest) u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.harvest(5)}}} u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,15) for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;1;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;15;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.canHarvest()) then {if(HasLessNumberOfUnits(Base,1)) then {u.moveToUnit(Ally,LessHealthy)} else { u.attack(Closest)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,15) u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;C;Train;Heavy;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.train(Heavy,Right,3)} for(Unit u){u.idle() u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Train;Heavy;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.train(Heavy,Right,3)} for(Unit u){u.idle() u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Train;Heavy;Right;3;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;10;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.train(Heavy,Right,3)} for(Unit u){u.train(Worker,Right,10) u.moveToUnit(Enemy,LessHealthy) u.idle()} for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;1;S;For_S;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle()}} for(Unit u){if(u.canAttack()) then {u.attack(LessHealthy)} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(1)}}}}} for(Unit u){u.train(Worker,Right,9)}
S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Train;Ranged;Up;100;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,15)}} for(Unit u){u.harvest(10) u.train(Ranged,Up,100) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Idle;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Light,Left,25)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.idle()}} u.build(Barracks,EnemyDir,8)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Ranged,EnemyDir,15) for(Unit u){u.build(Barracks,Up,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Farthest;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Down,100)} for(Unit u){for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Down,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Farthest)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Right;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Down;4;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.build(Barracks,Right,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,4) u.attack(Weakest)}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Base;EnemyDir;10	for(Unit u){if(u.canAttack()) then {u.attack(LessHealthy)} else { for(Unit u){u.build(Base,EnemyDir,10)}}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Train;Ranged;Up;4;S;C;Attack;Strongest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){for(Unit u){u.build(Barracks,Right,1) u.train(Ranged,Up,4)} u.attack(Strongest)}}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Right;1;S;C;Attack;Strongest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){for(Unit u){u.build(Barracks,Right,1) u.train(Heavy,Right,1)} u.attack(Strongest)}}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Right;1;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){for(Unit u){u.build(Barracks,Right,1) u.train(Heavy,Right,1)} u.attack(Closest)}}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Right;1;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;6	for(Unit u){if(u.is(Barracks)) then {e} else { for(Unit u){for(Unit u){u.build(Barracks,Right,1) u.train(Heavy,Right,1)} u.attack(Closest)}} u.train(Heavy,EnemyDir,6)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.idle()} u.moveAway()}}} for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){u.attack(MostHealthy)} u.train(Worker,EnemyDir,25) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Closest)} else { e}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;100	for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(MostHealthy) for(Unit u){u.idle()}}} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,EnemyDir,100)}
S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;Right;100;S;For_S;S;C;MoveToUnit;Ally;Strongest	if(HaveQtdUnitsAttacking(20)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.harvest(4)} for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.attack(Strongest)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} else { e}} for(Unit u){u.moveToUnit(Enemy,Weakest) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.train(Worker,Right,100)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){u.train(Ranged,EnemyDir,15) u.idle()} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Barracks,EnemyDir,5)} for(Unit u){u.harvest(25) u.attack(LessHealthy) u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Worker,Down,50)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){u.train(Ranged,EnemyDir,15) u.idle()} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Barracks,EnemyDir,5)} for(Unit u){u.harvest(7) u.attack(LessHealthy) u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Worker,Down,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Light;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Closest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Light,EnemyDir,20) for(Unit u){if(u.is(Light)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) u.attack(Closest)}}} if(u.canHarvest()) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Light,EnemyDir,7) u.idle() u.moveAway() u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Build;Barracks;Right;4;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;Empty;S;C;Attack;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,4) u.attack(MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.idle()} u.moveAway() u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(25)) then {e} else { u.attack(Strongest)}} u.attack(MostHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Heavy,EnemyDir,20) u.train(Ranged,Right,1)} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Build;Barracks;Right;4;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Right,4) u.attack(MostHealthy)} if(u.HasUnitInOpponentRange()) then {u.idle()} u.attack(Weakest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Heavy,EnemyDir,20) u.train(Ranged,Right,1)} if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;3	for(Unit u){u.attack(Weakest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Closest)} u.train(Worker,Down,3)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;Weakest;S;Empty;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;C;Train;Worker;EnemyDir;10	for(Unit u){if(u.canHarvest()) then {u.attack(Weakest)} else { e}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.train(Worker,EnemyDir,10)}}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Down;4;S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;C;Attack;Weakest	for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Closest) u.train(Ranged,Down,4) for(Unit u){u.build(Barracks,Left,25)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} u.attack(Weakest) u.moveToUnit(Enemy,Weakest) if(u.is(Worker)) then {for(Unit u){u.train(Light,Right,25)}} for(Unit u){u.moveAway()} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,EnemyDir,25)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;8;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;8	for(Unit u){for(Unit u){u.idle() u.attack(Strongest)} if(HasNumberOfUnits(Heavy,8)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} else { e} u.moveToUnit(Enemy,Strongest) for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;1;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;10;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){if(u.isBuilder()) then {e} else { for(Unit u){for(Unit u){u.idle() u.harvest(1)} u.attack(Strongest)}}} u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,10) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;For_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;9;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;7	for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.build(Barracks,EnemyDir,9)} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,7)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Up,100)} for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;100;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;MoveToUnit;Ally;MostHealthy;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Up,100) u.attack(Closest) for(Unit u){u.harvest(5) u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Strongest)}}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Ally,MostHealthy)} else { e}}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;For_S;S;C;Train;Light;Left;4;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Down,5) for(Unit u){u.train(Light,Left,4)} u.attack(Weakest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;C;Idle;S;C;Harvest;20;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Train;Heavy;Up;5	for(Unit u){for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,50)} u.idle()} u.harvest(20)} for(Unit u){u.attack(Closest) for(Unit u){u.moveAway()}} for(Unit u){for(Unit u){u.train(Heavy,Up,5)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;C;Train;Heavy;Right;6;S;C;Idle;S;C;Harvest;20;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,50)} u.train(Heavy,Right,6)} u.idle() u.harvest(20)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;C;Train;Heavy;Right;6;S;C;Idle;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,50)} u.train(Heavy,Right,6)} u.idle() u.harvest(20)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;20;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;Right;15;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveAway;S;C;Attack;Farthest;S;C;Train;Ranged;Left;10;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Train;Ranged;Down;50	if(OpponentHasNumberOfUnits(Ranged,20)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Worker,Right,15) for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.attack(LessHealthy) u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.moveAway() u.attack(Farthest)} u.train(Ranged,Left,10)}}} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.train(Ranged,Down,50)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,15) for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.attack(LessHealthy) u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.attack(MostHealthy)}}}}}
S;For_S;S;S_S;S;C;Train;Worker;Right;15;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;5;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,15) for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.attack(MostHealthy)}}}}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;4;S;Empty;S;C;Train;Worker;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;C;Attack;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,4) for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) if(OpponentHasNumberOfUnits(Light,4)) then {e} else { u.train(Worker,Up,7)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.attack(MostHealthy)}}} u.moveAway()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;C;Attack;MostHealthy;S;C;MoveAway;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) u.train(Worker,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.attack(MostHealthy)}}} u.moveAway() u.harvest(50)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy;S;C;MoveAway;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) u.train(Worker,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,6) u.harvest(9) u.attack(LessHealthy)}}} u.moveAway() u.harvest(50)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;Right;6;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) u.train(Worker,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Right,6)}}} u.moveAway()} u.moveToUnit(Ally,Closest)}
S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Up;1;S;For_S;S;For_S;S;C;Train;Light;Down;100	for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.build(Barracks,Left,4) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,1)} for(Unit u){for(Unit u){u.train(Light,Down,100)}}}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;25;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;EnemyDir;15	for(Unit u){u.harvest(1) for(Unit u){u.idle() u.build(Barracks,Left,25)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,EnemyDir,15)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Left;25;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,EnemyDir,20)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Left,25)}} for(Unit u){u.harvest(50)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;5;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Build;Barracks;Left;6;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){if(HasLessNumberOfUnits(Ranged,5)) then {e} else { u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){u.attack(Strongest)}} else { u.moveToUnit(Ally,Strongest)}}} u.build(Barracks,Left,6) u.train(Heavy,EnemyDir,20)} for(Unit u){for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,3) for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(MostHealthy)} u.train(Worker,Right,8) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.attack(LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.train(Worker,EnemyDir,50)}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Build;Barracks;Up;50;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.idle() if(u.isBuilder()) then {u.build(Barracks,Up,50) u.attack(LessHealthy)} for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.train(Worker,EnemyDir,50)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;100;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Light,Right,100) for(Unit u){u.moveAway()}} for(Unit u){u.build(Barracks,Left,7) u.idle() u.attack(Weakest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;7;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,7) for(Unit u){for(Unit u){u.train(Heavy,Down,100)} u.moveToUnit(Ally,Closest) u.idle()}} for(Unit u){if(u.canAttack()) then {u.attack(Closest)}}
S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Down,7)} for(Unit u){if(u.isBuilder()) then {for(Unit u){for(Unit u){u.attack(Weakest)}}}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Left;6;S;S_S;S;C;Train;Light;Up;50;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,6)} else { u.train(Light,Up,50) u.moveAway()}} for(Unit u){for(Unit u){u.harvest(9) u.attack(Closest)} u.train(Worker,Left,100) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Left;6;S;S_S;S;C;Train;Light;Up;50;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,6)} else { u.train(Light,Up,50) u.idle()}} for(Unit u){for(Unit u){u.harvest(9) u.attack(Closest)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;20;S;S_S;S;C;Build;Barracks;Left;20;S;For_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,20)} u.build(Barracks,Left,20) for(Unit u){u.moveAway()}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;100	for(Unit u){u.idle() u.attack(LessHealthy) u.train(Worker,Up,100)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){if(u.canAttack()) then {u.attack(Strongest) u.moveToUnit(Enemy,Closest)} else { e}} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,EnemyDir,20)} if(HasNumberOfWorkersHarvesting(4)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { e}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;20;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;0;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {u.idle() for(Unit u){u.harvest(2)} u.attack(LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)}} else { e}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,20)} if(HasNumberOfWorkersHarvesting(0)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;2;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;Weakest;S;For_S;S;C;Build;Base;Left;50;S;C;Train;Heavy;Right;15;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;7;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;C;Idle;S;S_S;S;C;MoveAway;S;C;Build;Barracks;EnemyDir;7	for(Unit u){if(OpponentHasNumberOfUnits(Worker,2)) then {u.harvest(100) u.attack(Weakest) for(Unit u){u.build(Base,Left,50)} u.train(Heavy,Right,15)} else { for(Unit u){u.attack(Farthest) if(OpponentHasNumberOfUnits(Ranged,7)) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){u.train(Light,Right,50) u.idle() u.moveAway() u.build(Barracks,EnemyDir,7)}}}}
S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;2;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Harvest;10;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;20;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Train;Heavy;Right;6	for(Unit u){if(OpponentHasNumberOfUnits(Worker,2)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,LessHealthy)}} else { for(Unit u){u.attack(Farthest) for(Unit u){u.harvest(10) u.idle()} for(Unit u){for(Unit u){u.train(Worker,Down,20)} u.build(Barracks,EnemyDir,7) for(Unit u){u.train(Heavy,Right,6)}}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;20;S;C;Harvest;3;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Weakest;S;Empty	for(Unit u){u.moveAway() u.train(Worker,Up,20) u.harvest(3) if(u.isBuilder()) then {u.attack(Weakest)} else { e}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Up;20	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,Up,20)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;4;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.attack(Strongest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,4)} if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Train;Heavy;Left;2;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Left;3;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Left,2) for(Unit u){u.train(Light,EnemyDir,1)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway() u.build(Barracks,Left,3) u.moveToUnit(Enemy,Weakest) for(Unit u){u.attack(LessHealthy)}}}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Harvest;8;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){u.attack(Farthest) u.train(Worker,Left,20) for(Unit u){u.harvest(8)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Harvest;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){u.attack(Weakest) u.train(Worker,Left,20) for(Unit u){u.harvest(8)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Left,20) for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.attack(Weakest) u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)} else { for(Unit u){u.moveToUnit(Enemy,Closest)}} if(u.canAttack()) then {for(Unit u){u.train(Worker,Down,7)} u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Worker,Left,9)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;10;S;C;Harvest;5;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;Empty;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Left,10) u.harvest(5)} for(Unit u){u.attack(LessHealthy)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(3)) then {e} else { u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Ranged;Left;20;S;C;MoveAway;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;100;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Left,25) u.harvest(1) for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} u.harvest(5) u.train(Ranged,Left,20) u.moveAway() u.idle() u.attack(Weakest)} if(OpponentHasNumberOfUnits(Barracks,100)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.train(Worker,Down,3)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;3;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;EnemyDir;10;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;100;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Left,3) u.harvest(1) for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} u.harvest(5) u.train(Light,EnemyDir,10) u.attack(Weakest)} if(OpponentHasNumberOfUnits(Barracks,100)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Down,3)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;For_S;S;C;Train;Light;Down;9;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Right;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.moveAway() u.harvest(9) if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Light,Down,9)} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.idle()}}} u.attack(Closest) for(Unit u){u.build(Barracks,Right,15)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Train;Worker;Left;15	for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,EnemyDir,7) for(Unit u){u.train(Worker,Left,15)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Down;7;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Down,7) u.idle()} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;7;S;C;Harvest;2;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Right,7) u.harvest(2)} for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;9	for(Unit u){u.attack(MostHealthy) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;9	for(Unit u){u.attack(Weakest) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Down;10;S;S_S;S;C;Build;Barracks;Up;20;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){for(Unit u){u.train(Light,Down,10) u.build(Barracks,Up,20) u.attack(Strongest)} u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Closest)} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;For_S;S;C;Harvest;1;S;C;Train;Light;Up;6	for(Unit u){u.attack(Strongest) for(Unit u){u.idle() u.build(Barracks,Left,2)} for(Unit u){u.harvest(1)} u.train(Light,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;For_S;S;C;Harvest;1;S;C;Train;Light;Up;6	for(Unit u){u.attack(MostHealthy) for(Unit u){u.idle() u.build(Barracks,Left,2)} for(Unit u){u.harvest(1)} u.train(Light,Up,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;Empty;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;C;Train;Light;Up;6	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,2) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { e}} for(Unit u){u.moveAway()} for(Unit u){u.harvest(1) u.attack(LessHealthy)} u.train(Light,Up,6)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;2;S;For_S;S;C;Train;Heavy;Up;5;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,2) for(Unit u){u.train(Heavy,Up,5)}} for(Unit u){u.moveAway()} for(Unit u){u.harvest(1) u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;25;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;3;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveAway;S;C;Harvest;5;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Down,25)} if(HasLessNumberOfUnits(Light,3)) then {u.idle()} else { u.moveToUnit(Ally,Weakest)} u.moveAway() u.harvest(5)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(Strongest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Harvest;3;S;C;Harvest;4;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Right,50) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} u.harvest(3) u.harvest(4) u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.canAttack()) then {if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,LessHealthy)}} else { for(Unit u){u.idle()}}}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.attack(Strongest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Build;Barracks;Up;8;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Train;Ranged;Right;25;S;C;Train;Worker;Up;2	for(Unit u){u.train(Light,EnemyDir,8) u.build(Barracks,Up,8) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {for(Unit u){u.harvest(3) u.idle()}} if(OpponentHasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.train(Ranged,Right,25) u.train(Worker,Up,2)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;25;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Up;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;S_S;S;C;Harvest;5;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;2;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,Up,25) for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.train(Light,Up,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {u.harvest(5) u.moveAway()}}} for(Unit u){u.moveToUnit(Enemy,Closest)} if(HasNumberOfUnits(Worker,8)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveAway()} for(Unit u){for(Unit u){for(Unit u){u.attack(MostHealthy)}} u.train(Ranged,Left,2)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;LessHealthy;S;C;Train;Heavy;EnemyDir;2	for(Unit u){u.idle() u.build(Barracks,Down,1) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveAway() u.moveToUnit(Ally,LessHealthy) u.attack(LessHealthy) u.train(Heavy,EnemyDir,2)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Harvest;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;EnemyDir;2	for(Unit u){u.idle() u.build(Barracks,Down,1) u.harvest(15) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) u.train(Heavy,EnemyDir,2)}
S;S_S;S;For_S;S;For_S;S;C;Build;Base;Up;2;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Base,Up,2)}} for(Unit u){u.harvest(1)} for(Unit u){u.train(Worker,Left,5) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Left;15;S;C;Attack;Weakest	for(Unit u){u.harvest(2)} for(Unit u){u.idle()} for(Unit u){u.train(Worker,Left,15) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Ranged;Down;3;S;For_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Down,20)} u.train(Worker,EnemyDir,5) u.train(Ranged,Down,3)}} for(Unit u){for(Unit u){u.harvest(7)} u.attack(LessHealthy)}
S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;9;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;Attack;Closest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveAway	if(OpponentHasNumberOfUnits(Heavy,9)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Right,4)} for(Unit u){u.idle()} for(Unit u){if(u.is(Light)) then {u.attack(Closest)} else { e}} for(Unit u){u.build(Barracks,Down,6)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveAway()}
S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;9;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Right;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Light;S;C;Attack;Closest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;C;Harvest;25	if(OpponentHasNumberOfUnits(Heavy,9)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Right,4)} for(Unit u){u.idle()} for(Unit u){if(u.is(Light)) then {u.attack(Closest)} else { e}} for(Unit u){u.build(Barracks,Down,6)} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveAway() for(Unit u){u.train(Ranged,EnemyDir,1) u.harvest(25)}}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;4;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Build;Base;Up;15;S;C;Harvest;8;S;S_S;S;C;Train;Light;Up;20;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.train(Heavy,EnemyDir,7)} if(OpponentHasNumberOfUnits(Ranged,4)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,1) u.build(Base,Up,15) u.harvest(8)} u.train(Light,Up,20) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;4;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Build;Base;Up;15;S;C;Harvest;8;S;S_S;S;C;Train;Light;Up;20;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)}} if(OpponentHasNumberOfUnits(Ranged,4)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,1) u.build(Base,Up,15) u.harvest(8)} u.train(Light,Up,20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;C;MoveAway	for(Unit u){u.build(Barracks,EnemyDir,2) u.attack(Closest) for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;5;S;For_S;S;S_S;S;C;Idle;S;C;MoveAway	for(Unit u){u.build(Barracks,EnemyDir,2) u.attack(MostHealthy) u.train(Ranged,Left,5) for(Unit u){u.idle() u.moveAway()}}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(7) u.train(Worker,EnemyDir,20) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.attack(Closest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Right;50	for(Unit u){u.build(Barracks,Right,9) u.idle() u.attack(Closest) for(Unit u){u.train(Heavy,Right,50)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;15;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;Farthest	for(Unit u){u.train(Light,Right,15) u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(15)} for(Unit u){for(Unit u){u.moveAway() u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.attack(Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;15;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Right,15) u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(15)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(LessHealthy)}}}
S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Train;Worker;Left;2;S;For_S;S;C;Train;Light;Right;20;S;For_S;S;C;Build;Barracks;Left;4;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(1)} u.train(Worker,Left,2)} for(Unit u){u.train(Light,Right,20)} for(Unit u){u.build(Barracks,Left,4)} for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;C;Idle;S;C;Train;Heavy;Left;5;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,25)} u.idle() u.train(Heavy,Left,5)} for(Unit u){u.harvest(5) u.attack(Farthest)}
S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Right;9	for(Unit u){u.attack(MostHealthy) for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {e} else { u.train(Worker,Right,9)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {e} else { u.train(Worker,Right,9)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.harvest(2) u.idle()} for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) if(u.canHarvest()) then {e} else { u.train(Worker,Right,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Down;100;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(6)} u.train(Worker,Down,100) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Left,100) for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;6;S;For_S;S;C;Harvest;1;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;9	for(Unit u){u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,6)} for(Unit u){u.harvest(1)} for(Unit u){u.attack(Weakest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest)} u.train(Worker,Down,9)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Light;Up;15;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.idle() u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Up,15)} for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;If_B_then_S;B;is_Type;Barracks;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;100;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Ranged,EnemyDir,10) if(u.is(Barracks)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Closest)}}}} for(Unit u){u.idle() u.train(Worker,EnemyDir,100) u.harvest(5) u.build(Barracks,EnemyDir,7) u.moveAway() u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;100;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Idle	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,EnemyDir,100) u.harvest(5) u.attack(Farthest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.idle() u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Idle;S;C;Attack;Farthest	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.idle()} u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)}} for(Unit u){u.train(Heavy,Down,5) u.attack(Strongest)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} else { e}} for(Unit u){u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.train(Heavy,EnemyDir,50) if(u.is(Worker)) then {for(Unit u){u.idle()} u.attack(Closest)} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.is(Worker)) then {for(Unit u){u.idle()} u.attack(Closest)} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}} u.idle()}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest) u.idle()} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}} u.idle()}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;9;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Light;Up;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Right,25)} for(Unit u){if(HasNumberOfUnits(Barracks,10)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Worker,Right,2) u.attack(Closest) if(u.isBuilder()) then {for(Unit u){u.harvest(25)}} u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,9) u.moveToUnit(Ally,LessHealthy) if(u.canHarvest()) then {for(Unit u){u.train(Light,Up,2)}} for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(MostHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;For_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Right,8)} for(Unit u){for(Unit u){u.harvest(3) u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;For_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Right,8)} for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.harvest(3) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;15;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,5)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Closest)}}}}} for(Unit u){for(Unit u){u.harvest(2)} u.attack(MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Left,15) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Attack;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;Left;15;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,5)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest) u.idle()}}}} for(Unit u){for(Unit u){u.harvest(2)} u.attack(MostHealthy)} if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest) u.train(Worker,Left,15) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.harvest(4) if(OpponentHasNumberOfUnits(Base,9)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.attack(Weakest)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle()} u.train(Worker,EnemyDir,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Up;20;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle	for(Unit u){u.harvest(4) if(OpponentHasNumberOfUnits(Base,9)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Worker,Up,20) u.attack(Weakest)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;10;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Up;9;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(10)} for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}} else { u.train(Heavy,Up,9)}} for(Unit u){u.train(Light,EnemyDir,8)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Up;9;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.build(Barracks,EnemyDir,6) u.harvest(20)} for(Unit u){for(Unit u){if(u.isBuilder()) then {for(Unit u){u.attack(LessHealthy)}} else { u.train(Heavy,Up,9)}} for(Unit u){u.train(Light,EnemyDir,8)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.idle() u.build(Barracks,EnemyDir,6) u.harvest(20)} for(Unit u){for(Unit u){for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Light,EnemyDir,8)}}
S;S_S;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest	for(Unit u){u.train(Light,Left,15)} for(Unit u){u.build(Barracks,Left,25) u.harvest(10) u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}
S;S_S;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;S_S;S;C;Harvest;10;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.train(Light,Left,15)} for(Unit u){u.build(Barracks,Left,25) u.harvest(10) u.idle() u.attack(Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;Down;3;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;8;S;C;Harvest;9;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;For_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,Down,3)}} u.idle()} for(Unit u){u.build(Barracks,Down,8) u.harvest(9)} for(Unit u){u.train(Heavy,EnemyDir,8)} for(Unit u){for(Unit u){if(u.isBuilder()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,Closest)}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Closest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,EnemyDir,25)}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(4)} for(Unit u){u.train(Worker,Left,100)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;8;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.train(Ranged,Right,6)} if(OpponentHasNumberOfUnits(Heavy,8)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){for(Unit u){u.build(Barracks,Left,9)}} for(Unit u){if(u.canAttack()) then {u.attack(Strongest)}} for(Unit u){if(u.canHarvest()) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}}} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Worker;Right;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Closest) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.train(Worker,Right,7)}} if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Worker;Left;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(Closest) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.train(Worker,Left,7)}} if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Left;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.attack(Closest) if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Left,7)}} if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Left;25;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;9;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Left,25)} for(Unit u){if(u.isBuilder()) then {u.harvest(9)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;5;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Ranged,5)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.attack(Strongest)} for(Unit u){for(Unit u){u.train(Worker,Left,100)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,Closest)}} if(HasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveAway	for(Unit u){u.idle()} for(Unit u){u.train(Ranged,EnemyDir,9) u.build(Barracks,EnemyDir,10) u.attack(LessHealthy) for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Harvest;8;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,20) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle()} else { u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.harvest(8)} else { u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;25;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,25)} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} u.train(Worker,Down,10) u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(1)} for(Unit u){u.idle()} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Left;100;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;2;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Ranged,Left,100) for(Unit u){u.idle()} u.build(Barracks,Right,2) u.moveToUnit(Enemy,Strongest) u.attack(Weakest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;For_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Worker,Right,5) for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Train;Worker;EnemyDir;4;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.train(Worker,EnemyDir,4)} for(Unit u){u.attack(Weakest)}} if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;Attack;MostHealthy;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){if(u.is(Worker)) then {u.attack(MostHealthy)} else { e}}} for(Unit u){u.train(Worker,EnemyDir,8)} if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.attack(Strongest)}} for(Unit u){u.train(Worker,EnemyDir,8)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;15;S;C;Harvest;5;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Right,15) u.harvest(5) u.attack(Closest)}} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Up;25;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;4;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Up,5)}} u.train(Light,Left,8) for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Heavy,Up,25)}} if(HasLessNumberOfUnits(Base,4)) then {e} else { u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Left;1;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;4;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,5)} u.train(Light,Left,8) for(Unit u){u.harvest(9) u.attack(Closest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Left,1)}} if(HasLessNumberOfUnits(Base,4)) then {e} else { u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;4;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;4;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,5)} u.train(Light,Left,8) for(Unit u){u.harvest(2) u.attack(Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,4)}} if(HasLessNumberOfUnits(Base,4)) then {e} else { u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;5;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;5;S;For_S;S;S_S;S;C;Harvest;15;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;4;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.build(Barracks,Up,5)} u.idle() u.train(Heavy,Left,5)} for(Unit u){u.harvest(15) u.attack(Farthest)} if(HasLessNumberOfUnits(Base,4)) then {e} else { u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;10;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;25;S;Empty;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,10) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway()}} if(HasLessNumberOfUnits(Heavy,25)) then {e} else { u.moveToUnit(Ally,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Up;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;25;S;Empty;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Worker,Up,20)} if(HasLessNumberOfUnits(Heavy,25)) then {e} else { u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;5;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(3)} u.train(Worker,Up,5) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.attack(Strongest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Harvest;1;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,9) u.harvest(1) u.attack(Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;4;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;5;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy	for(Unit u){if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.train(Light,Up,4)} for(Unit u){for(Unit u){u.build(Barracks,Up,6) u.harvest(5)}} for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;15;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;5;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy	for(Unit u){if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.train(Light,Up,15)} for(Unit u){u.build(Barracks,Up,6) u.harvest(5)} for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;C;Harvest;5;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest	for(Unit u){if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.train(Ranged,Down,50)} for(Unit u){u.build(Barracks,Up,6) u.harvest(5)} for(Unit u){u.moveToUnit(Ally,Strongest) u.attack(Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;20;S;C;Train;Light;Right;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;15;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.isBuilder()) then {e} else { u.idle() u.train(Worker,Up,20) u.train(Light,Right,20) if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)}} u.attack(Strongest)}} for(Unit u){u.build(Barracks,Down,15)} for(Unit u){u.harvest(5)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Left;4;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;5;S;Empty;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Left,4)} u.harvest(5)} for(Unit u){u.idle()} for(Unit u){u.attack(Strongest)} for(Unit u){for(Unit u){u.train(Light,Right,5) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,5)} else { e} if(OpponentHasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Weakest)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;4;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Right;4;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Train;Ranged;Down;1;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.build(Barracks,Left,4)} u.harvest(5)} for(Unit u){u.idle()} for(Unit u){u.attack(Strongest)} for(Unit u){u.train(Light,Right,4) if(u.canHarvest()) then {for(Unit u){u.train(Ranged,Down,1)} u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;For_S;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Up,3)} for(Unit u){for(Unit u){u.build(Barracks,Down,4)}} for(Unit u){if(u.canAttack()) then {u.harvest(5) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;20;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveAway	for(Unit u){u.train(Light,Up,3)} for(Unit u){u.idle() u.build(Barracks,Down,20)} for(Unit u){if(u.canAttack()) then {u.harvest(5) for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.moveAway()}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;6;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;25;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.moveAway() u.harvest(6)} for(Unit u){u.idle() u.train(Ranged,Down,25)} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)}} else { e}}}} for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,LessHealthy)}} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)} if(HasNumberOfWorkersHarvesting(9)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;25;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Right,5)} for(Unit u){u.harvest(6)} for(Unit u){u.idle() u.train(Ranged,Down,25)} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)}} else { e}}}} for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,LessHealthy)}} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)} if(HasNumberOfWorkersHarvesting(9)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Light;Right;7;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;MoveToUnit;Enemy;Weakest;S;Empty	for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Light,Right,7)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} if(HaveQtdUnitsAttacking(4)) then {u.moveToUnit(Enemy,Weakest)} else { e}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,10) for(Unit u){u.train(Heavy,Right,6)} u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Train;Heavy;Up;7;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Left;4;S;C;Train;Light;EnemyDir;3;S;For_S;S;C;Train;Ranged;Left;5	for(Unit u){if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { u.attack(Strongest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,7) u.train(Heavy,Up,7) u.harvest(4) u.moveAway() u.idle() u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy) u.moveToUnit(Ally,Strongest)} u.train(Worker,Left,4) u.train(Light,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;2;S;C;Idle;S;C;Train;Worker;Left;4;S;C;Train;Light;EnemyDir;3;S;For_S;S;C;Train;Ranged;Left;5	for(Unit u){if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { u.attack(Strongest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,7) u.harvest(2) u.idle()} u.train(Worker,Left,4) u.train(Light,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;2;S;C;Idle;S;C;Train;Worker;Left;4;S;C;Train;Light;EnemyDir;3;S;For_S;S;C;Train;Ranged;Left;5	for(Unit u){if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Strongest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,7) u.harvest(2) u.idle()} u.train(Worker,Left,4) u.train(Light,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Train;Worker;Left;4;S;C;Train;Light;EnemyDir;3;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Ranged;Left;5	for(Unit u){if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Strongest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} u.train(Worker,Left,4) u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;1;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Train;Ranged;Left;4;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;Left;5	for(Unit u){if(HasNumberOfUnits(Light,1)) then {u.moveToUnit(Ally,Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} u.train(Ranged,Left,4) u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;C;Train;Ranged;Right;4;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;4;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;EnemyDir;7	for(Unit u){if(u.canHarvest()) then {u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Closest)} for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} u.train(Ranged,Right,4) u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)}} for(Unit u){if(u.is(Base)) then {u.train(Worker,EnemyDir,7)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;10;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;C;Train;Worker;Down;4;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;4;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;EnemyDir;7	for(Unit u){u.train(Heavy,Up,10) if(u.canHarvest()) then {u.attack(Strongest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Closest)} for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} for(Unit u){u.train(Worker,Down,4)} u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)}} for(Unit u){if(u.is(Base)) then {u.train(Worker,EnemyDir,7)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;C;Train;Worker;Down;4;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Heavy,Up,10) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Closest)} for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} for(Unit u){u.train(Worker,Down,4)} u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;C;Train;Worker;Down;4;S;C;Train;Light;EnemyDir;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Heavy,Left,10) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Closest)} for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} for(Unit u){u.train(Worker,Down,4)} u.train(Light,EnemyDir,3) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Heavy,Left,10) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(LessHealthy)} for(Unit u){u.build(Barracks,Down,7) u.harvest(1) u.idle()} for(Unit u){u.train(Worker,Down,4)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;10;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Harvest;15;S;For_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Left,10) u.attack(Strongest) for(Unit u){u.build(Barracks,Down,7) u.harvest(15)} for(Unit u){u.train(Worker,Down,4)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;20;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Heavy;Up;7;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Up,20) for(Unit u){u.harvest(5) u.build(Barracks,Right,6) u.attack(Strongest) u.train(Heavy,Up,7) for(Unit u){u.idle()}} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;For_S;S;C;Train;Light;Left;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Left,100)}} for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Left,8) u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Worker;EnemyDir;10;S;If_B_then_S_else_S;B;is_Type;Light;S;C;Attack;LessHealthy;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Up;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Worker,EnemyDir,10) if(u.is(Light)) then {u.attack(LessHealthy)} else { u.attack(Farthest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Ally,MostHealthy) u.train(Light,Up,50) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;is_Type;Light;S;C;Attack;LessHealthy;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Ally,Strongest) if(u.is(Light)) then {u.attack(LessHealthy)} else { u.attack(Farthest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,MostHealthy) u.train(Light,Down,50) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Ally,Strongest) u.attack(Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,MostHealthy) u.train(Light,Down,50) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Light;Up;3;S;C;Train;Ranged;EnemyDir;4	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.moveAway() u.moveToUnit(Ally,Closest) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Light,Up,3)} else { u.train(Ranged,EnemyDir,4)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15) u.moveToUnit(Ally,Strongest)} for(Unit u){u.harvest(50) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15)} for(Unit u){u.harvest(50) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15)} for(Unit u){u.harvest(50) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;2;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.attack(Strongest)} if(HasNumberOfUnits(Base,2)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;50;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.harvest(7)} u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,50)} for(Unit u){for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Strongest)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Closest) if(u.HasUnitWithinDistanceFromOpponent(4)) then {if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Closest)}} u.train(Worker,EnemyDir,50)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Train;Heavy;Left;20;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.is(Ranged)) then {u.idle()} for(Unit u){u.build(Barracks,Down,10) u.train(Heavy,Left,20)} for(Unit u){u.harvest(5)}} for(Unit u){u.train(Ranged,EnemyDir,6)} for(Unit u){for(Unit u){u.train(Light,Right,6) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle()}} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Train;Heavy;Left;20;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;MoveAway;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;100;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,10) u.train(Heavy,Left,20)} for(Unit u){u.harvest(5)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.moveAway()}} for(Unit u){for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Farthest) u.train(Light,Left,100) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;C;Train;Heavy;Left;20;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;Left;100;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,10) u.train(Heavy,Left,20)} for(Unit u){u.harvest(5)}} for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Farthest) u.train(Light,Left,100) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Left;100;S;For_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,10)} for(Unit u){u.harvest(5)}} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Light,Left,100) for(Unit u){u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Down;25;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Light;Left;100;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,10)} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.train(Worker,Down,25)} for(Unit u){u.harvest(7)} for(Unit u){u.train(Light,Left,100) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Left;100;S;For_S;S;C;Attack;Farthest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,Down,10)} for(Unit u){u.harvest(4)} u.moveAway() u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,Left,100) for(Unit u){u.attack(Farthest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Left;100	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,Down,10)} for(Unit u){u.harvest(4)} u.moveAway() u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,Left,100)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Left;100	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Ally,Closest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,Down,10)} for(Unit u){u.harvest(20)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,Left,100)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Left;100	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,Down,10)} for(Unit u){u.harvest(20)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,Left,100)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Down;100	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.build(Barracks,Down,10)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,Down,100)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;100;S;S_S;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Closest;S;C;Train;Heavy;Left;1;S;S_S;S;C;Train;Light;Up;25;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Left,100)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.attack(Closest)} else { u.train(Heavy,Left,1)} u.train(Light,Up,25) for(Unit u){u.harvest(5)}}} if(HaveQtdUnitsAttacking(15)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Up;9;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) for(Unit u){u.train(Light,Up,9)} for(Unit u){u.build(Barracks,EnemyDir,20)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.build(Barracks,EnemyDir,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) for(Unit u){u.train(Light,EnemyDir,25)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.build(Barracks,EnemyDir,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) for(Unit u){u.train(Light,EnemyDir,25)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) u.harvest(10) for(Unit u){u.train(Light,EnemyDir,25)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(MostHealthy) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,EnemyDir,20)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Down,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) u.harvest(10) for(Unit u){u.train(Light,EnemyDir,25)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(Closest) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,EnemyDir,20)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Down,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(6) for(Unit u){u.train(Light,EnemyDir,25)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.attack(Closest) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,EnemyDir,20)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Down,20)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;20;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)}} else { e} for(Unit u){u.build(Barracks,EnemyDir,20)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} else { u.train(Worker,Down,20)} for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;20;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)}} else { e} for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy)}} else { u.train(Worker,Down,20)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;20;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,25)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)}} else { e} for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,20)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)}} else { e} for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)}} else { e} u.train(Heavy,Up,4) for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;Train;Light;Up;50;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Farthest)} else { e} u.train(Heavy,Up,4) for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.attack(Farthest)} u.train(Light,Up,50) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;For_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Up;50;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Farthest)} else { e} u.train(Heavy,Up,4) for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.build(Barracks,Up,25)} for(Unit u){u.harvest(100) u.moveToUnit(Ally,LessHealthy)} u.train(Light,Up,50) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Up;50;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Farthest)} else { e} u.train(Heavy,Up,4) for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.build(Barracks,Up,25)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)} u.train(Light,Up,50) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;Train;Worker;Left;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Train;Ranged;Down;7;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Ally,Farthest)} else { e} u.train(Heavy,Up,4) for(Unit u){u.build(Barracks,EnemyDir,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.train(Worker,Left,6)} for(Unit u){u.build(Barracks,Up,25)} u.train(Ranged,Down,7) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Train;Ranged;Down;7;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.attack(Farthest)} else { e} u.train(Heavy,Up,4) u.attack(Weakest) u.train(Worker,Left,5) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,Up,25)} u.train(Ranged,Down,7) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} u.train(Heavy,Up,4) u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway()} u.train(Heavy,Right,6) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} u.train(Heavy,Up,4) u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway()} u.train(Heavy,Right,6) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;10;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Down;100;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,10)} for(Unit u){for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.train(Worker,Down,100) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.attack(Strongest) u.train(Worker,Right,2)} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Up;15	if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){if(u.canHarvest()) then {u.moveAway() u.attack(MostHealthy) for(Unit u){u.attack(MostHealthy)}} else { for(Unit u){u.train(Worker,Up,15)}}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Up;15	if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} for(Unit u){if(u.canHarvest()) then {u.idle() u.moveAway() u.attack(MostHealthy)} else { for(Unit u){u.train(Worker,Up,15)}}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;7;S;C;Train;Worker;Up;15	if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} for(Unit u){if(u.canHarvest()) then {u.idle() u.attack(MostHealthy)} else { for(Unit u){for(Unit u){for(Unit u){u.harvest(7)}} u.train(Worker,Up,15)}}}
S;For_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;10	for(Unit u){for(Unit u){u.attack(Strongest) u.train(Worker,Right,10)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;50;S;For_S;S;C;Harvest;3	for(Unit u){u.attack(Weakest) u.train(Worker,Left,50) for(Unit u){u.harvest(3)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Up;8;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;6;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){if(HasNumberOfWorkersHarvesting(15)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Up,8)} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.idle()} for(Unit u){u.attack(Closest)} for(Unit u){for(Unit u){u.train(Light,Down,6)} if(u.canAttack()) then {e} else { for(Unit u){u.train(Worker,Left,25)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Left,100) for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;S_S;S;For_S;S;S_S;S;C;Build;Base;Right;9;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;100;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Left,7)} for(Unit u){u.build(Base,Right,9) for(Unit u){u.idle()} u.harvest(7) u.train(Worker,Down,100) u.moveToUnit(Enemy,Strongest) u.harvest(20)} if(HasNumberOfWorkersHarvesting(10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(9) u.attack(LessHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy)} if(HasNumberOfWorkersHarvesting(6)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;5;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;20;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;9;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.idle()} if(OpponentHasNumberOfUnits(Barracks,5)) then {u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(20)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.train(Worker,Down,9)}} if(OpponentHasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.attack(LessHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,Left,25)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.attack(LessHealthy)}}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,EnemyDir,50)}}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle	for(Unit u){u.moveToUnit(Ally,Weakest) if(u.HasUnitInOpponentRange()) then {e} else { u.attack(Closest)} for(Unit u){u.train(Worker,Left,25) u.harvest(2) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.idle()}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;15;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,2) for(Unit u){u.harvest(4)}} for(Unit u){for(Unit u){u.train(Worker,Right,15)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;8;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.attack(LessHealthy)} u.train(Light,Up,8) for(Unit u){u.train(Worker,EnemyDir,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Light;Up;8	for(Unit u){u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.attack(LessHealthy)} u.train(Light,Up,8)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.moveAway()} for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){for(Unit u){u.idle()}} u.harvest(50) u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.idle()} u.harvest(50)} for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.idle()} u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,10)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.idle()} u.harvest(50)} for(Unit u){u.attack(Closest) u.train(Heavy,EnemyDir,10)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;50;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.idle()} u.harvest(50)} for(Unit u){u.attack(MostHealthy) u.train(Heavy,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Right;50;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;100;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;5;S;Empty;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(2) u.build(Barracks,Right,50)} for(Unit u){u.harvest(9) u.attack(LessHealthy)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,100) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,5)} else { e}} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;50	for(Unit u){u.build(Barracks,Right,5) u.attack(Strongest)} for(Unit u){u.moveToUnit(Ally,Weakest) u.train(Worker,Right,50)}
S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Right;50	for(Unit u){u.attack(Closest)} for(Unit u){u.train(Worker,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;0;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Light,0)) then {u.attack(LessHealthy)} else { u.moveToUnit(Ally,Weakest)}} u.train(Worker,Right,25) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { e}} if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) u.harvest(50) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,25) u.moveToUnit(Ally,Weakest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;7;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,20)} for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Worker,7)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Up;8;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;7;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Base,Up,8)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,20)} for(Unit u){u.harvest(3)} for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Base,7)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.canAttack()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;C;Train;Light;Right;9;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.train(Light,Right,9)} for(Unit u){for(Unit u){u.idle() u.harvest(8) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveAway()}}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Train;Light;Right;8;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;If_B_then_S;B;HasLessNumberOfUnits;Light;0;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.train(Light,Right,8)} u.harvest(2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Strongest)} if(u.isBuilder()) then {if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} if(HasLessNumberOfUnits(Light,0)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy)}} else { e} u.train(Worker,Down,10) u.harvest(4) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Down,10) u.train(Worker,EnemyDir,3) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Worker;Up;8;S;S_S;S;C;Idle;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,8) u.idle() u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Right,9) for(Unit u){u.idle()} u.harvest(1) u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;LessHealthy;S;C;Train;Ranged;EnemyDir;50;S;C;Build;Barracks;Right;2;S;C;Harvest;2	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(LessHealthy)} u.train(Ranged,EnemyDir,50) u.build(Barracks,Right,2) u.harvest(2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;LessHealthy;S;C;Train;Ranged;EnemyDir;50;S;C;Build;Barracks;Right;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(LessHealthy)} u.train(Ranged,EnemyDir,50) u.build(Barracks,Right,2) u.harvest(2) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;9;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Left,9)} for(Unit u){u.idle()} u.build(Barracks,Right,2) u.harvest(2) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;8;S;C;Train;Ranged;EnemyDir;50;S;C;Build;Barracks;Right;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle() for(Unit u){u.harvest(8)}} u.train(Ranged,EnemyDir,50) u.build(Barracks,Right,2) u.harvest(2) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;C;Train;Light;EnemyDir;6;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()} u.train(Light,EnemyDir,6) u.build(Barracks,EnemyDir,2) u.harvest(2) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;8;S;C;Train;Ranged;EnemyDir;50;S;C;Build;Barracks;Right;2;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Worker;Up;15;S;C;Harvest;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveAway;S;C;Harvest;10;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle() for(Unit u){u.harvest(8)}} u.train(Ranged,EnemyDir,50) u.build(Barracks,Right,2) if(u.canAttack()) then {e} else { u.train(Worker,Up,15)} u.harvest(2) if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveAway()} else { u.harvest(10)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;8;S;C;Train;Light;Right;20;S;S_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(6) u.build(Barracks,Down,2) u.train(Heavy,EnemyDir,7) for(Unit u){u.idle()} u.train(Light,Down,8) u.train(Light,Right,20) u.train(Worker,EnemyDir,7) u.harvest(100) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Light;Right;9	for(Unit u){u.train(Light,Left,2) for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.harvest(1) u.attack(Closest)} u.train(Heavy,EnemyDir,100) u.train(Light,Right,9)}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;Closest;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Light;Right;9	for(Unit u){for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.harvest(1) u.attack(Closest)} u.train(Heavy,EnemyDir,100) u.train(Light,Right,9)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;50;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle() u.train(Light,Right,50)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.attack(Weakest)}} for(Unit u){u.build(Barracks,Right,7)} for(Unit u){u.harvest(1)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;50;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Harvest;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle() u.train(Light,Right,50)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.build(Barracks,Right,7)} for(Unit u){u.harvest(1)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;C;Train;Worker;Left;3;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)}} for(Unit u){u.build(Barracks,EnemyDir,10) for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} u.train(Worker,Left,3) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} u.train(Worker,Left,3) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} u.train(Worker,Left,3) u.attack(Strongest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) u.attack(Strongest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} if(u.is(Base)) then {u.moveToUnit(Ally,Farthest)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} u.build(Barracks,EnemyDir,10) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.harvest(3)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} u.train(Worker,Left,3) u.attack(Strongest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Ranged;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Left;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Ranged,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} u.train(Worker,Left,3) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,50)} if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) u.attack(Strongest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,50)} if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;C;Train;Worker;Left;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,50)} if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.attack(Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.train(Worker,Left,3) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;2;S;C;Train;Worker;Left;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.attack(Closest) u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(2)}}}} u.train(Worker,Left,3) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)}}}}} u.train(Worker,Left,3) u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Worker;Left;100;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Worker,Left,100) u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)}}}}} u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Worker;Left;100;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Worker,Left,100) u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)}}}}} u.attack(Farthest) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;Farthest;S;C;Train;Ranged;Down;8;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)}}}}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} u.train(Worker,Left,3) u.attack(Farthest) u.train(Ranged,Down,8)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;6	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.is(Base)) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.harvest(1)} u.train(Worker,Right,3) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;50;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,50) if(u.canAttack()) then {u.attack(MostHealthy) u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,EnemyDir,10) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;20	for(Unit u){u.idle() u.harvest(2) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,20)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;6;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,Up,6) u.train(Worker,Down,15)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){u.attack(Weakest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;15;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;100;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,15) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} for(Unit u){u.attack(Weakest)} if(HasNumberOfUnits(Barracks,100)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.train(Worker,Left,9)}
S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Attack;Weakest	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(5)}}}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,100)}} for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Worker;Right;100;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;20	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway() for(Unit u){u.train(Worker,Right,100)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Closest) u.harvest(20)}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Train;Worker;Right;100;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;20	for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e}}}} u.moveAway() for(Unit u){u.train(Worker,Right,100)} u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) u.harvest(20)}}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;100;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Farthest) if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,100)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Worker;Right;100;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Right,100)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Ranged;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Light;Up;2	for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {for(Unit u){u.train(Ranged,Down,6)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}} for(Unit u){u.train(Worker,Left,9) u.train(Light,Up,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Light;Up;2	for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}} for(Unit u){u.train(Worker,Left,9) u.train(Light,Up,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Attack;Strongest;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Light;Up;2	for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.attack(Strongest) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}} for(Unit u){u.train(Worker,Left,9) u.train(Light,Up,2)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Light;Up;2	for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.attack(LessHealthy) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}} for(Unit u){u.train(Worker,Left,9) u.train(Light,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Left,7)} u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} u.attack(LessHealthy) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Left,7)} u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Left,7)} u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,7)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Worker,EnemyDir,7)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Harvest;2;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,4) for(Unit u){u.harvest(2)} u.attack(Closest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Left;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;8;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.idle() u.build(Barracks,Left,15) u.moveToUnit(Enemy,Weakest) u.train(Light,Down,8) u.train(Worker,EnemyDir,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Down;15;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;3;S;C;Train;Worker;EnemyDir;10;S;C;Attack;Weakest	for(Unit u){u.build(Base,Down,15) for(Unit u){u.idle()} if(u.isBuilder()) then {u.harvest(3)} else { u.train(Worker,EnemyDir,10)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;8;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;CanHarvest;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Right,8) if(HasLessNumberOfUnits(Ranged,8)) then {e} else { u.moveToUnit(Enemy,Farthest)} for(Unit u){u.harvest(1) if(u.canHarvest()) then {u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;C;Build;Barracks;Left;10;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Train;Heavy;Right;15;S;C;Attack;MostHealthy	for(Unit u){u.train(Light,Down,5) u.build(Barracks,Left,10) u.idle() u.harvest(7) u.train(Heavy,Right,15) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;7;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Up;2;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Ranged,Right,7) u.harvest(4) u.train(Worker,EnemyDir,7) u.build(Barracks,Up,2) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;20;S;C;Build;Barracks;Down;20;S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Left;4	for(Unit u){u.train(Ranged,Left,20) u.build(Barracks,Down,20)} for(Unit u){u.harvest(100) u.attack(Closest) for(Unit u){u.train(Worker,Left,4)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;2;S;S_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Down;8	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,2) u.train(Worker,Right,3) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Down,1)}} u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Down,8)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;2;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Down;8	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,2) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Down,1)}} u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Down,8)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;2;S;For_S;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Right;50;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest) u.train(Worker,Up,2) for(Unit u){u.harvest(1)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest) u.train(Heavy,Right,50) for(Unit u){u.build(Barracks,Down,1)}} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;9;S;C;MoveAway	for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.idle()} u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,9) u.moveAway()}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Left;25;S;For_S;S;C;Idle;S;C;Train;Light;Up;9	for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} u.train(Worker,EnemyDir,9) u.attack(MostHealthy) u.moveToUnit(Enemy,Farthest) u.train(Worker,Left,25) for(Unit u){u.idle()} u.train(Light,Up,9)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Train;Light;Left;25;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.harvest(1)} u.idle() u.train(Worker,EnemyDir,2) u.train(Light,Left,25) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}} u.build(Barracks,EnemyDir,8) u.moveToUnit(Ally,Closest) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;5;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Train;Light;Up;8;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Up,6) u.idle()} for(Unit u){if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Up,5) u.build(Barracks,EnemyDir,10) u.train(Light,Up,8)} for(Unit u){u.harvest(3) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Idle;S;C;Harvest;25;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Left;15;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Right,3) for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.harvest(25)} for(Unit u){u.train(Ranged,Up,7)} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Left,15)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;3;S;S_S;S;For_S;S;C;Train;Heavy;Up;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	for(Unit u){u.build(Barracks,Right,3) for(Unit u){u.train(Heavy,Up,7)} if(u.canHarvest()) then {for(Unit u){u.idle() u.harvest(5) u.moveToUnit(Enemy,LessHealthy) u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} else { for(Unit u){u.moveToUnit(Ally,Weakest)}}} for(Unit u){u.train(Worker,Right,2) u.build(Barracks,EnemyDir,50) u.attack(LessHealthy)} for(Unit u){u.train(Light,EnemyDir,4) if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;9;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Light,Down,2)} u.build(Barracks,Left,4) u.train(Worker,Right,4) u.idle() u.harvest(9) u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;20;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;4;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;15	for(Unit u){u.build(Barracks,Left,8) if(OpponentHasNumberOfUnits(Ranged,20)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Right,4) u.idle() u.harvest(9) u.attack(LessHealthy) u.train(Heavy,Right,15)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Build;Base;Left;50;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Light;Up;8;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Up,6) u.idle()} for(Unit u){u.train(Worker,Up,4) u.build(Base,Left,50) u.build(Barracks,EnemyDir,50) u.train(Light,Up,8)} for(Unit u){u.harvest(3) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Build;Base;Left;50;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy	for(Unit u){u.train(Heavy,Up,6) u.idle()} for(Unit u){u.train(Worker,Up,4) u.build(Base,Left,50) u.build(Barracks,EnemyDir,50)} for(Unit u){u.harvest(3) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Build;Base;Left;50;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Up,6) u.idle()} for(Unit u){u.train(Worker,Up,4) u.build(Base,Left,50) u.build(Barracks,EnemyDir,50)} for(Unit u){u.harvest(3) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Left;9;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Harvest;1;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Down;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;25;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Build;Barracks;Down;10;S;For_S;S;C;Harvest;100	for(Unit u){if(u.isBuilder()) then {e} else { u.train(Heavy,Left,9)} u.idle() if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(1) u.attack(Strongest)} for(Unit u){u.train(Heavy,Down,3)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.build(Barracks,Down,10)} for(Unit u){u.harvest(100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,8) u.train(Worker,Right,5) u.build(Barracks,Down,1)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(4)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Right,8) u.train(Worker,Right,5) u.build(Barracks,Down,1)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(4)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Down;25;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Barracks;Up;2;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.harvest(4) u.moveAway() u.train(Ranged,Down,25) u.train(Worker,EnemyDir,7) u.build(Barracks,Up,2) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,8) u.train(Worker,Right,5) u.build(Barracks,Down,1)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(4)} u.moveToUnit(Enemy,Farthest) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,8) u.train(Worker,Right,5) u.build(Barracks,Down,1)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.harvest(4)} u.moveToUnit(Enemy,Closest) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Right,5) u.build(Barracks,Down,1) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(10)} u.moveToUnit(Enemy,Closest) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Right,5) u.build(Barracks,Down,1) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(10)} u.moveToUnit(Enemy,MostHealthy) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Right,5) u.build(Barracks,Down,1) u.harvest(10) for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(10) for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Right;1;S;C;Harvest;10;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Right,1) u.harvest(10) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { u.moveAway()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){if(HasNumberOfUnits(Heavy,4)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(10) for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){if(HasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(10)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.harvest(1) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Worker,Right,10)}} for(Unit u){u.train(Ranged,Right,5)} u.idle() u.moveAway() if(u.is(Base)) then {u.moveToUnit(Ally,MostHealthy)} u.harvest(10) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){if(HasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(10)} if(u.HasUnitInOpponentRange()) then {u.idle()} else { e} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;10;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway	for(Unit u){if(HasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Closest)} u.idle() u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(10)} u.moveToUnit(Enemy,MostHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;3;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;4;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;100;S;C;MoveAway	for(Unit u){if(HasNumberOfUnits(Base,3)) then {u.moveToUnit(Enemy,Closest)} u.harvest(4) u.idle() u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1)} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(100)} u.moveAway()}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;100;S;C;MoveAway	for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1)} if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(100)} u.moveAway()}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.build(Barracks,EnemyDir,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.idle() u.build(Barracks,EnemyDir,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Build;Barracks;Down;1;S;C;Harvest;1;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.build(Barracks,EnemyDir,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.train(Worker,Down,5) u.build(Barracks,Down,1) u.harvest(1) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25) u.moveAway()} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.build(Barracks,EnemyDir,4) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.harvest(1) u.build(Barracks,Down,1) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;15;S;C;Train;Worker;Down;25;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.harvest(1) u.build(Barracks,Down,1) u.moveToUnit(Enemy,MostHealthy) u.harvest(15) u.train(Worker,Down,25)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;25	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.harvest(1) u.build(Barracks,Down,1) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,25)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;5	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Up,8) u.train(Ranged,EnemyDir,7) u.harvest(1) u.build(Barracks,Down,1) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,5)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Up;9	for(Unit u){u.build(Barracks,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Worker,4)) then {u.idle() u.harvest(6)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.idle() u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Up,9)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Light;Right;100;S;Empty;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Down;2	for(Unit u){u.build(Barracks,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {u.train(Light,Right,100)} else { e} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Worker,4)) then {u.idle() u.harvest(6)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Down,2)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Light;Right;100;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;3;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Down;2	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {u.train(Light,Right,100)} else { u.harvest(1)} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Heavy,3)) then {u.idle() u.harvest(6)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Down,2)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Light;Right;100;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;3;S;S_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {u.train(Light,Right,100)} else { u.harvest(1)} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Heavy,3)) then {u.idle() u.harvest(1)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;3;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Heavy,3)) then {u.harvest(1)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;3;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Up,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Heavy,3)) then {u.harvest(1)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;3;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Up,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Heavy,3)) then {u.harvest(1)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Up,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;8;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(8)}} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Harvest;1;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} else { u.harvest(1)} u.harvest(7) for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.idle()} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) u.idle() u.harvest(7) for(Unit u){u.train(Heavy,Down,4)} for(Unit u){u.idle()} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Train;Light;Right;100;S;Empty;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Right;7;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;4;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;1;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;MoveAway;S;C;Train;Light;Up;9	for(Unit u){u.build(Barracks,EnemyDir,6) u.moveToUnit(Enemy,Closest) u.idle() if(u.HasUnitInOpponentRange()) then {u.train(Light,Right,100)} else { e} u.harvest(7) for(Unit u){u.build(Base,EnemyDir,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Right,7)}} for(Unit u){if(HasNumberOfUnits(Worker,4)) then {u.idle() u.harvest(6)}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Light,EnemyDir,1)} u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.moveAway() u.train(Light,Up,9)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,EnemyDir,100)} u.harvest(7) for(Unit u){u.idle()} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,EnemyDir,100)} u.idle() u.harvest(7) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,EnemyDir,100)} u.idle() u.harvest(7) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,15) u.moveToUnit(Enemy,Closest) u.moveAway() u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Closest;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,EnemyDir,100)} u.idle() u.harvest(7) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} u.train(Worker,EnemyDir,9) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Strongest)} if(u.canAttack()) then {u.attack(Closest)} else { e} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;For_S;S;C;Train;Ranged;Right;10;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,EnemyDir,100)} u.idle() u.harvest(7) u.attack(Weakest) for(Unit u){if(u.is(Barracks)) then {e} else { for(Unit u){u.train(Ranged,Right,10)}}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.idle() u.harvest(7) u.attack(Weakest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { if(u.HasUnitInOpponentRange()) then {u.idle()}}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.idle() u.harvest(7) u.attack(Weakest) u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;6;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Down;15;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.idle() u.harvest(7) u.attack(Weakest) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest) if(u.canAttack()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,6) u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { u.train(Worker,Down,15)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.harvest(7) u.moveToUnit(Ally,Closest) u.attack(Weakest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { if(u.HasUnitInOpponentRange()) then {u.idle()}}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Down;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.harvest(7) u.moveToUnit(Ally,Closest) u.idle() u.attack(Weakest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { if(u.HasUnitInOpponentRange()) then {u.idle()}}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Down,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.harvest(7) u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { if(u.HasUnitThatKillsInOneAttack()) then {u.idle()}}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} u.harvest(7) u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} u.train(Worker,EnemyDir,9) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(7) u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,MostHealthy) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(7) u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,MostHealthy) if(HasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;2;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(7) u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.train(Ranged,EnemyDir,4)}} else { e}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,2) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.idle() u.harvest(4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,2) u.moveToUnit(Enemy,Closest) u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;2;S;S_S;S;C;Train;Ranged;Down;2;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.idle() u.harvest(4) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,2) u.train(Ranged,Down,2) u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;2;S;S_S;S;C;Train;Ranged;Down;2;S;C;MoveAway;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,2) u.train(Ranged,Down,2) u.moveAway() if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Up,20) if(HasNumberOfWorkersHarvesting(7)) then {u.attack(Closest)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Weakest;S;C;MoveAway;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.harvest(25)}} u.idle() u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Up,20) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Weakest)}} u.moveAway() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} else { u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) u.idle() u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Up,20) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Weakest)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.idle() u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Up,20) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Weakest)}} u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Light;Up;2;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.idle() u.build(Barracks,EnemyDir,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,8)} u.harvest(25) u.attack(Closest) for(Unit u){u.idle()} u.train(Light,Up,2) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} u.attack(Closest) for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} u.attack(Closest) for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}} for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,Left,6) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(Weakest)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveAway()} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;100;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100) if(u.HasUnitInOpponentRange()) then {u.attack(Closest)}} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Build;Barracks;EnemyDir;10;S;C;Attack;Weakest;S;C;Train;Worker;Right;25	for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.build(Barracks,EnemyDir,10) u.attack(Weakest) u.train(Worker,Right,25)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;25	for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,25)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Right;8;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;C;Build;Base;Up;7;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Right,8)} for(Unit u){u.moveAway() u.moveToUnit(Ally,MostHealthy) u.build(Base,Up,7) for(Unit u){u.harvest(6)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8)} u.build(Barracks,EnemyDir,10) for(Unit u){u.idle()} u.train(Ranged,EnemyDir,1) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Right;3;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,Right,8) for(Unit u){u.idle()} u.attack(LessHealthy) u.train(Heavy,Up,6) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,3)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,8) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Worker;Up;20;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;25	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest) for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Up,20)} if(u.canHarvest()) then {u.moveToUnit(Ally,Closest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(25)}}}}
S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Left,20) u.build(Barracks,Down,20) u.harvest(3) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Build;Barracks;Down;3;S;S_S;S;C;Harvest;10;S;C;Attack;Farthest;S;C;Train;Light;EnemyDir;10	for(Unit u){u.idle() u.train(Worker,EnemyDir,50) u.build(Barracks,Down,3) u.harvest(10) u.attack(Farthest) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Left;15;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Harvest;9;S;C;Train;Ranged;Up;25	for(Unit u){if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Ally,Closest) u.attack(Weakest) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.build(Barracks,Left,50) u.harvest(9)}} u.train(Ranged,Up,25)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;C;Train;Ranged;Left;2	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Left,4)} u.harvest(6) u.attack(Weakest) u.train(Ranged,Left,2)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;10;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;7;S;S_S;S;C;Train;Worker;Down;9;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;C;Attack;MostHealthy;S;C;Build;Barracks;Right;100;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()} for(Unit u){u.build(Base,Down,10) u.harvest(4) u.train(Ranged,Left,7) u.train(Worker,Down,9) u.train(Heavy,Left,8)} for(Unit u){if(HaveQtdUnitsAttacking(2)) then {e} else { u.attack(MostHealthy)} u.build(Barracks,Right,100) u.moveToUnit(Ally,Farthest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Up;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;10;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Ranged;Left;7;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;9;S;For_S;S;S_S;S;C;Build;Barracks;Right;100;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Heavy,Up,50)}} for(Unit u){u.build(Base,Down,10) u.harvest(4) u.train(Ranged,Left,7) u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,9)} for(Unit u){u.build(Barracks,Right,100) u.moveToUnit(Ally,Farthest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Down;8;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;15;S;For_S;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(1) u.idle() for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Heavy,Up,3)}} for(Unit u){for(Unit u){u.attack(Closest) u.train(Heavy,Down,8)} u.moveToUnit(Ally,Closest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Ranged,Left,15)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;15;S;For_S;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(1) u.idle() for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Heavy,Up,3)}} for(Unit u){for(Unit u){u.attack(Closest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Ranged,Left,15)}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;C;Harvest;5;S;C;Attack;Weakest;S;For_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Worker;Up;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Left,4) u.harvest(5) u.attack(Weakest) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.train(Worker,Up,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;6;S;For_S;S;C;Idle;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Left,4) u.harvest(3) u.attack(Weakest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,Farthest) u.train(Light,Right,6) for(Unit u){u.idle()} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;Empty;S;C;Train;Light;Left;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;4;S;For_S;S;C;Idle;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(OpponentHasNumberOfUnits(Heavy,3)) then {e} else { u.train(Light,Left,100)} u.build(Barracks,Left,4) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,5)} if(u.canHarvest()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(4)}}} for(Unit u){u.idle()} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.build(Barracks,Left,4) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,5)} if(u.canHarvest()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(4) u.attack(Closest)} for(Unit u){u.idle()}}} for(Unit u){u.idle()} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;Empty;S;C;Train;Light;Left;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(OpponentHasNumberOfUnits(Heavy,3)) then {e} else { u.train(Light,Left,100)} u.build(Barracks,Left,4) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Heavy,EnemyDir,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,5)} if(u.canHarvest()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(4) u.moveToUnit(Enemy,MostHealthy)}}} for(Unit u){u.idle()} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;Empty;S;C;Train;Light;Left;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Train;Light;Right;6;S;For_S;S;C;Idle;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() if(OpponentHasNumberOfUnits(Heavy,3)) then {e} else { u.train(Light,Left,100)} u.build(Barracks,Left,4) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,1)} if(u.canHarvest()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(4) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.idle()}}} u.train(Light,Right,6) for(Unit u){u.idle()} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;C;Harvest;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Down;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,4) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) if(HaveQtdUnitsAttacking(1)) then {e} else { u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,5)} if(u.canHarvest()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(4) u.attack(Closest)}}} for(Unit u){u.idle()} u.train(Worker,Left,8) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Harvest;25;S;For_S;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.idle() u.train(Ranged,Left,1) u.harvest(25) for(Unit u){u.train(Heavy,Right,9)}} for(Unit u){for(Unit u){u.train(Light,Right,20)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;20;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;Idle;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;Harvest;100;S;S_S;S;C;Train;Ranged;Left;9;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Weakest	for(Unit u){if(u.is(Heavy)) then {u.attack(LessHealthy)} u.build(Barracks,Left,4) u.harvest(5) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasNumberOfUnits(Base,20)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.idle()} u.moveAway() if(HasNumberOfWorkersHarvesting(5)) then {u.harvest(100)} u.train(Ranged,Left,9) u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,8) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Harvest;6;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(4)} for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Right,6) u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Left,8)} for(Unit u){u.train(Ranged,Left,2) u.build(Barracks,EnemyDir,10)} for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} else { for(Unit u){u.harvest(6)}} u.train(Light,EnemyDir,20)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,EnemyDir,8) u.attack(Weakest) u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;C;Attack;Weakest;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;5	for(Unit u){u.train(Worker,Left,10) if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){u.attack(Weakest)}} u.build(Barracks,EnemyDir,2) u.train(Light,Down,9) u.harvest(5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;10;S;C;Train;Ranged;Down;1;S;C;Idle;S;C;Train;Ranged;Down;10;S;S_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Right,10) u.train(Ranged,Down,1) u.idle() u.train(Ranged,Down,10) u.build(Barracks,Left,2) u.harvest(5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;C;Train;Ranged;Down;1;S;C;Idle;S;C;Train;Ranged;Down;10;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,EnemyDir,10) u.train(Ranged,Down,1) u.idle() u.train(Ranged,Down,10) u.build(Barracks,EnemyDir,2) u.harvest(5) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Right;7;S;C;Harvest;3;S;C;Train;Heavy;Left;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;2;S;Empty;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Right,6) for(Unit u){u.idle()} u.train(Light,Right,7) u.harvest(3) u.train(Heavy,Left,8) if(HasLessNumberOfUnits(Base,2)) then {e} else { u.moveToUnit(Ally,Weakest)}} for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){for(Unit u){u.train(Light,EnemyDir,20)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;10;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;For_S;S;C;Idle;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;S_S;S;For_S;S;C;Train;Light;Right;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;MoveAway;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;MostHealthy;S;S_S;S;C;Build;Barracks;Right;25;S;C;Train;Light;Down;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;MostHealthy	for(Unit u){u.build(Base,Down,10) u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,9) for(Unit u){u.idle()} u.train(Heavy,Left,8)} if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HaveQtdUnitsAttacking(2)) then {for(Unit u){u.train(Light,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.build(Barracks,Right,7) u.moveToUnit(Ally,Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway() u.harvest(20)}}}} else { u.moveToUnit(Ally,Strongest) u.attack(MostHealthy)} u.build(Barracks,Right,25) u.train(Light,Down,9) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;15;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;20;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;Idle;S;C;MoveAway;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;S_S;S;C;Harvest;7;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;10;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest	for(Unit u){if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,EnemyDir,15)} u.train(Ranged,EnemyDir,100) u.build(Barracks,Left,4) u.harvest(5) for(Unit u){u.train(Heavy,Down,20)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasNumberOfUnits(Base,20)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.idle()} u.moveAway() if(HasNumberOfWorkersHarvesting(5)) then {u.harvest(7) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.harvest(10)}} u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Train;Heavy;Down;4;S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Harvest;3;S;S_S;S;C;Train;Light;Left;1;S;C;Idle;S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,8) u.train(Heavy,Down,4)} for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Right,4) u.harvest(3) u.train(Light,Left,1) u.idle()} for(Unit u){for(Unit u){u.attack(Closest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Harvest;3;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;Train;Light;Left;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Base;2;S;C;Build;Base;Down;9;S;Empty;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Right,4) u.harvest(3) u.train(Light,EnemyDir,5) u.train(Light,Left,8) if(HasLessNumberOfUnits(Base,2)) then {u.build(Base,Down,9)} else { e}} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.idle() u.build(Barracks,EnemyDir,10)} for(Unit u){for(Unit u){u.train(Light,Right,20)} for(Unit u){u.attack(Closest)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;10;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;1;S;C;Attack;LessHealthy;S;C;Build;Barracks;Right;100;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle()} for(Unit u){u.build(Base,Down,10) u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,EnemyDir,5) u.train(Heavy,Left,8)} if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){if(HasNumberOfUnits(Heavy,1)) then {u.attack(LessHealthy)} u.build(Barracks,Right,100) u.attack(MostHealthy) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Right;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Strongest)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Right;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Strongest) u.attack(Strongest)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Right;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} for(Unit u){u.train(Light,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Strongest) u.attack(Strongest)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;25;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(25)} else { u.attack(Farthest)}} for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;25;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(25)} else { u.attack(Farthest)}} for(Unit u){u.train(Ranged,Down,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;EnemyDir;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) u.harvest(25)} for(Unit u){u.train(Ranged,Down,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Farthest) u.train(Ranged,EnemyDir,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;25;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;C;Attack;Closest;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;Left;25;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(25)} else { u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.moveAway()}}}} for(Unit u){u.train(Ranged,Down,1) u.train(Worker,Down,6) u.attack(Closest) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.moveToUnit(Ally,Weakest)}} else { e} u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Weakest) u.train(Ranged,Left,25) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;5	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.attack(Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.attack(Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveAway;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.moveAway()} else { u.attack(Closest)} u.train(Light,Up,1) u.attack(Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveAway;S;C;Attack;Closest;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {u.moveAway()} else { u.attack(Closest)} u.attack(MostHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,2) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Light;Down;50;S;C;Harvest;7;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,100)}} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.train(Light,Down,50) u.harvest(7)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,100)}} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(1) u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,5) for(Unit u){u.train(Heavy,Up,100)}} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Attack;Farthest;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.train(Worker,Left,2) u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,5) for(Unit u){u.train(Heavy,Up,100)}} for(Unit u){if(u.isBuilder()) then {u.attack(Farthest)} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Ranged;Right;100;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Right,9)} for(Unit u){if(u.canHarvest()) then {u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.attack(Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.train(Ranged,Right,100) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Right,9)} for(Unit u){if(u.canHarvest()) then {u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.attack(Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Up;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.harvest(15) u.train(Worker,Down,6) u.train(Heavy,Right,9)} for(Unit u){if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Up,1) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest;S;C;Train;Light;Left;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.harvest(15) u.train(Worker,Down,6) u.train(Heavy,Right,9)} for(Unit u){if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { u.attack(Closest)} u.train(Light,Left,1) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Train;Light;Left;1;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(4) for(Unit u){u.train(Heavy,Left,1)} u.train(Ranged,Left,1) u.harvest(15) u.train(Worker,Down,6) u.train(Heavy,Right,9) u.attack(LessHealthy)} for(Unit u){if(u.canHarvest()) then {if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)}} else { e} u.train(Light,Left,1) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;6;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){for(Unit u){u.harvest(10)} u.train(Worker,Down,6) u.train(Heavy,Right,9) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Ranged,Up,6)} if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(4)) then {for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Ally,Strongest)}}} u.moveToUnit(Ally,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(10)} u.train(Worker,Down,6) u.train(Heavy,Right,9)} for(Unit u){for(Unit u){u.train(Ranged,Up,6)} u.moveToUnit(Ally,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;C;Train;Heavy;Up;3;S;C;Train;Heavy;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(10)} u.train(Worker,Down,6) u.train(Heavy,Up,3) u.train(Heavy,Right,9)} for(Unit u){for(Unit u){u.train(Ranged,Up,6)} u.moveToUnit(Ally,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;6;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Up;3;S;C;Train;Heavy;Right;9;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Ranged,Down,6) u.attack(Farthest)}} for(Unit u){if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Worker,Down,6) u.moveAway() u.train(Heavy,Up,3) u.train(Heavy,Right,9) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Ranged,Up,6)} u.moveToUnit(Ally,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;6;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Worker;Down;6;S;C;MoveAway;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Ranged,Down,6) u.attack(Farthest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Heavy,Up,9) u.train(Worker,Down,6) u.moveAway() u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Ranged,Up,6)} u.moveToUnit(Ally,Farthest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Worker;Down;6;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Heavy,Up,9) u.train(Worker,Down,6) u.moveAway() u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;6;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Worker;Down;6;S;C;MoveAway;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Ranged,Down,6) u.attack(Farthest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Heavy,Up,9) u.train(Worker,Down,6) u.moveAway() u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Heavy;Up;9;S;C;Train;Worker;Up;6	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Heavy,Up,9) u.train(Worker,Up,6)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;C;Train;Ranged;Down;6;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Up;6;S;For_S;S;C;Train;Ranged;EnemyDir;20	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.train(Ranged,Down,6) u.attack(Farthest)}} for(Unit u){u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(10)} u.train(Worker,Up,6) for(Unit u){u.train(Ranged,EnemyDir,20)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;Up;50;S;For_S;S;C;MoveToUnit;Ally;Farthest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Heavy,Up,50)}}} for(Unit u){u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;Idle;S;C;Train;Ranged;Left;10;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(LessHealthy)}} u.build(Barracks,Left,20) u.harvest(1) u.attack(LessHealthy) for(Unit u){u.train(Worker,Left,5) u.idle() u.train(Ranged,Left,10)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Train;Ranged;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Down,3) u.train(Ranged,Right,9) u.train(Worker,Left,50) u.harvest(2) u.build(Barracks,Up,2) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;8	for(Unit u){u.train(Worker,Down,3) u.harvest(2) u.build(Barracks,Up,2) u.attack(LessHealthy) u.train(Heavy,Left,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;8	for(Unit u){u.idle() u.train(Worker,Down,3) u.harvest(2) u.build(Barracks,Up,2) u.attack(LessHealthy) u.train(Heavy,Left,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;Left;8	for(Unit u){u.idle() u.train(Worker,Down,3) u.harvest(2) u.build(Barracks,Up,2) u.attack(MostHealthy) u.train(Heavy,Left,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Train;Worker;Down;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;3	for(Unit u){u.idle() u.train(Worker,Down,3) u.harvest(2) u.build(Barracks,Up,2) u.attack(MostHealthy) u.train(Heavy,Left,8) u.train(Worker,Down,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;8;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;Train;Ranged;Right;5;S;Empty;S;C;Train;Worker;Down;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;3	for(Unit u){u.idle() u.train(Worker,Down,3) u.harvest(2) u.build(Barracks,Up,2) u.attack(Farthest) u.train(Heavy,Left,8) if(HasNumberOfWorkersHarvesting(2)) then {u.train(Ranged,Right,5)} else { e} u.train(Worker,Down,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(3)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;S_S;S;C;Idle;S;C;Harvest;3;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;20;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,1) u.train(Worker,Right,4) u.idle() u.harvest(3) u.train(Light,EnemyDir,5) u.train(Heavy,Left,8)} if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){for(Unit u){u.train(Light,Right,20)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;C;Attack;MostHealthy;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(7)) then {u.attack(MostHealthy)}} u.harvest(7) u.attack(LessHealthy) u.train(Heavy,Left,25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;2;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;Left;25;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,2)}} u.harvest(7) u.moveToUnit(Enemy,Weakest) u.moveAway() u.attack(MostHealthy) u.train(Heavy,Left,25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;100;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,100)}} u.harvest(7) u.moveToUnit(Enemy,Weakest) u.moveAway() u.attack(MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} else { e} u.train(Light,Left,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveAway()}} else { e} u.train(Light,Left,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Right;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) u.train(Heavy,Right,4) if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveAway()}} else { e} u.train(Light,Left,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;C;Train;Heavy;Right;4;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} u.train(Heavy,Right,4) u.train(Light,Left,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;C;Train;Heavy;Right;4;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(3) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} u.train(Heavy,Right,4) u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;S_S;S;C;Train;Heavy;Right;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(5) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} u.train(Heavy,Right,4) if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveAway()}} else { e} u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;S_S;S;C;Train;Heavy;Right;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;5;S;For_S;S;C;MoveAway;S;Empty;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(5) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} u.train(Heavy,Right,4) if(OpponentHasNumberOfUnits(Light,5)) then {for(Unit u){u.moveAway()}} else { e} u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Down;20;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;2;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(5) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Down,20)}} u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,EnemyDir,2)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;25;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(5) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.train(Ranged,Right,8) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Up,25)} for(Unit u){u.train(Worker,Right,4)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;50;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;Right;8;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;Train;Light;Up;5;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,Down,5) u.harvest(5) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Light,50)) then {u.moveToUnit(Ally,Closest)} u.train(Ranged,Right,8) u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,Down,20)} u.train(Light,Up,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Worker,Right,4)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Harvest;1;S;C;Train;Heavy;Up;20;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;6;S;For_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(1) u.train(Heavy,Up,20) for(Unit u){u.train(Light,Right,6)} for(Unit u){u.idle()} u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Train;Light;Right;8;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(4) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.train(Light,Right,8)}} else { u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;Down;6;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} for(Unit u){u.harvest(8) u.attack(Strongest) u.train(Ranged,Left,1) u.train(Worker,Down,6) u.train(Heavy,Left,8)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) u.idle()} for(Unit u){u.harvest(8) u.attack(Strongest) u.train(Ranged,Left,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Left,8)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Train;Heavy;Right;9;S;C;Train;Light;EnemyDir;1;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) u.attack(Strongest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Right,9) u.train(Light,EnemyDir,1)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;Train;Heavy;Right;9;S;C;Train;Light;EnemyDir;1;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Right,9) u.train(Light,EnemyDir,1)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Ally;Closest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) u.attack(MostHealthy) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Left,8)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Up;25;S;For_S;S;C;MoveToUnit;Ally;Closest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(LessHealthy)}} u.attack(MostHealthy) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,LessHealthy) u.train(Light,Up,25)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,6) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(LessHealthy)}} u.attack(MostHealthy) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,Closest)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;7	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,6) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(LessHealthy)}} u.attack(Weakest) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,7)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Up;25;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;C;Train;Worker;Down;7	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,6) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.attack(Strongest)}} u.attack(Weakest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy) u.train(Light,Up,25) if(u.canHarvest()) then {for(Unit u){u.idle()}} u.train(Worker,Down,7)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;7;S;For_S;S;C;Train;Ranged;Down;4	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,6) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Weakest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,7)} for(Unit u){u.train(Ranged,Down,4)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Left;8;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;C;Train;Worker;Down;7;S;For_S;S;C;Train;Ranged;Down;4	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,EnemyDir,6) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Weakest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy) u.train(Heavy,Left,8) if(u.canHarvest()) then {for(Unit u){u.idle()}} u.train(Worker,Down,7)} for(Unit u){u.train(Ranged,Down,4)}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Weakest	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.build(Barracks,EnemyDir,6) u.train(Light,Left,4) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Weakest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Ally,LessHealthy) if(u.canHarvest()) then {for(Unit u){u.idle()}}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Weakest)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Strongest;S;C;Attack;Weakest;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Train;Ranged;Down;4;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Up;6	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.build(Barracks,EnemyDir,6) u.train(Light,Left,4) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Strongest)}} u.attack(Weakest) u.train(Worker,Left,5)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Weakest)} else { e} u.train(Ranged,Down,4) if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.train(Heavy,Up,6)}}
S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Train;Ranged;Down;4;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Up;6	if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.build(Barracks,EnemyDir,6) u.train(Light,Left,4) if(u.isBuilder()) then {e} else { u.idle()}} for(Unit u){u.harvest(8) if(OpponentHasNumberOfUnits(Base,6)) then {u.moveToUnit(Enemy,Farthest)} u.attack(Weakest) u.train(Worker,Left,5)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Weakest)} else { e} u.train(Ranged,Down,4) if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;7;S;For_S;S;C;Idle;S;C;Train;Heavy;Down;50;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,1) u.harvest(7) for(Unit u){u.idle()} u.train(Heavy,Down,50) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Harvest;4;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Up;20;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) u.harvest(4) u.attack(Farthest) for(Unit u){u.train(Worker,Left,6)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Up,20) for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Up;20;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(4) u.attack(Farthest) for(Unit u){u.train(Worker,Left,6)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Up,20) for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(4) u.attack(Farthest) for(Unit u){u.train(Worker,Left,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Up,20) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(4) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Up,20) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Ranged;Up;20;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(4) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Ranged,Up,20) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(4) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Right,5) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,10) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7) u.idle()} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(20) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Closest)}} else { u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Right,5) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,10) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} u.harvest(20) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()}} u.train(Ranged,Right,10) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){u.train(Heavy,Left,7)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;LessHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(LessHealthy)} u.harvest(20) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()}} if(OpponentHasNumberOfUnits(Worker,7)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Right,10) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} for(Unit u){u.train(Heavy,Left,7)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;25;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Attack;LessHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Ranged;Right;10;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,25) if(HaveQtdUnitsAttacking(5)) then {u.attack(LessHealthy)} u.harvest(20) u.attack(Weakest) for(Unit u){u.train(Worker,Left,4) for(Unit u){u.idle()}} if(OpponentHasNumberOfUnits(Worker,7)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Ranged,Right,10) for(Unit u){if(HaveQtdUnitsAttacking(8)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} for(Unit u){u.train(Heavy,Left,7)} u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;25;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;C;Train;Worker;Up;4;S;For_S;S;C;Harvest;2	for(Unit u){u.build(Barracks,Left,1) u.idle() u.train(Heavy,Left,25)} for(Unit u){u.attack(Closest) u.train(Ranged,EnemyDir,10) u.train(Worker,Up,4) for(Unit u){u.harvest(2)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) u.attack(Strongest) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Left,8)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;8;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) if(u.canAttack()) then {u.idle()} else { e}} for(Unit u){u.harvest(8) u.attack(LessHealthy) u.train(Ranged,EnemyDir,1) u.train(Worker,EnemyDir,6) u.train(Heavy,Left,8)} for(Unit u){u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,EnemyDir,3) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} for(Unit u){u.idle()} u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) u.attack(Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Up,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) u.attack(Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Up,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} u.train(Worker,Up,6) u.attack(Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Up,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} u.train(Worker,Up,6) u.attack(Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;6;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Right,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.train(Worker,Up,6) u.attack(Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Right,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Right,9) u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Heavy,Right,9) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Heavy,EnemyDir,25)}} else { e} u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Barracks;10;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Heavy,EnemyDir,25)}} else { e} u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Farthest)} if(OpponentHasNumberOfUnits(Barracks,10)) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Heavy,EnemyDir,25)}} else { e} u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Heavy,EnemyDir,25)}} else { e} u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}} else { e} for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.attack(MostHealthy) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;25;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) u.idle() for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}} else { e} for(Unit u){u.idle()} if(HasLessNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Farthest) u.harvest(25) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest;S;C;Train;Heavy;Right;5;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) u.idle() for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(5) u.attack(Farthest)} u.train(Heavy,Right,5)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Right;5;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(5) u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.train(Heavy,Right,5)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Ranged;Right;6;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,Right,6)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Base;EnemyDir;10;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Base,EnemyDir,10)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) u.idle() for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;25;S;For_S;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Left,25)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;C;Build;Base;Left;8;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Base,Left,8)} for(Unit u){u.train(Worker,Right,4) u.idle() u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(LessHealthy)}} for(Unit u){for(Unit u){u.train(Worker,Down,3)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;100	for(Unit u){u.harvest(1) u.attack(Closest) u.train(Worker,EnemyDir,100)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Build;Barracks;Right;15;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Ranged,Right,2) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) u.build(Barracks,Right,15) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Ranged,Right,2) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Left;10;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Up;100	for(Unit u){u.idle() u.train(Worker,Left,10) u.train(Heavy,Up,7) u.harvest(7) u.attack(LessHealthy) for(Unit u){u.build(Barracks,Up,100)}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;6;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Light,Left,6) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Base;EnemyDir;15;S;C;Harvest;7;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {if(OpponentHasNumberOfUnits(Barracks,1)) then {u.idle() u.build(Base,EnemyDir,15) u.harvest(7) for(Unit u){u.build(Barracks,EnemyDir,1)}} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)} u.harvest(7)} u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;EnemyDir;20	for(Unit u){u.train(Worker,EnemyDir,8)} for(Unit u){u.harvest(9)} for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,20)}}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Left;10;S;For_S;S;C;Build;Barracks;Up;100	for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,10) for(Unit u){u.build(Barracks,Up,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(5) u.train(Worker,Up,7) u.moveToUnit(Enemy,Strongest) u.moveAway() u.harvest(20)}
S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.attack(MostHealthy)} for(Unit u){u.train(Worker,EnemyDir,9)}
S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Right;10	for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Right,10)}
S;For_S;S;S_S;S;C;Train;Worker;Up;50;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;4;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;Closest	for(Unit u){u.train(Worker,Up,50) if(HasNumberOfUnits(Heavy,4)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { for(Unit u){u.idle()}} for(Unit u){u.harvest(1) u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;20;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Heavy,Left,20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Train;Heavy;Down;50;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;For_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;C;MoveAway;S;C;Train;Light;Right;9	for(Unit u){u.harvest(50) u.idle() u.train(Worker,Left,9) u.train(Heavy,Down,50) u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest)} else { e} for(Unit u){u.build(Barracks,Down,10)} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)}} else { u.moveAway()}}} u.train(Light,Right,9)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Train;Heavy;Down;50;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Down;10;S;C;Train;Light;Right;9	for(Unit u){u.harvest(50) u.idle() u.train(Worker,Left,9) u.train(Heavy,Down,50) u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest)} else { e} for(Unit u){u.build(Barracks,Down,10)} u.train(Light,Right,9)}
S;For_S;S;S_S;S;C;Train;Worker;Down;100;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Down,100) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;100;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;C;Train;Worker;Left;2	for(Unit u){u.train(Ranged,Down,100) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(1) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)}} u.train(Worker,Left,2)}
S;S_S;S;For_S;S;C;Train;Heavy;Left;15;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;1;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;LessHealthy	for(Unit u){u.train(Heavy,Left,15)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(1) if(OpponentHasNumberOfUnits(Barracks,1)) then {u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Weakest)} u.attack(Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1) u.attack(LessHealthy)}}}}
S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Weakest	for(Unit u){u.harvest(3) u.train(Worker,Up,9) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(3) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} else { u.train(Worker,Right,20) u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;25	for(Unit u){u.harvest(5) u.idle() u.attack(LessHealthy) u.train(Worker,Up,25)}
S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;8;S;For_S;S;C;Train;Worker;EnemyDir;15;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;Harvest;2;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Base,Down,8) for(Unit u){u.train(Worker,EnemyDir,15)} if(u.is(Worker)) then {u.harvest(2) for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Build;Base;Down;100;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;C;Harvest;5;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Down,7) u.build(Base,Down,100) if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Worker,EnemyDir,10) if(u.HasUnitInOpponentRange()) then {u.attack(Closest)}} u.harvest(5) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;C;Build;Barracks;Left;2;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(1) u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Ranged,Down,50)} for(Unit u){u.build(Barracks,Left,2)} u.train(Worker,Left,5)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;0;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Base;EnemyDir;100	for(Unit u){u.train(Worker,Left,3) u.build(Barracks,Down,25) u.train(Light,EnemyDir,25) u.harvest(10) u.moveAway() u.moveToUnit(Ally,MostHealthy) if(HaveQtdUnitsAttacking(0)) then {u.attack(LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.build(Base,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;25	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Ranged,Right,2) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;25	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Ranged,Right,2) u.idle() u.moveToUnit(Ally,MostHealthy) if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.train(Ranged,Right,2) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;4;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.harvest(4) u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) u.moveToUnit(Enemy,MostHealthy) u.moveAway() if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(OpponentHasNumberOfUnits(Ranged,4)) then {u.attack(MostHealthy)}} else { e} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Harvest;7;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Up;100	for(Unit u){u.idle() u.train(Light,Down,3) u.train(Heavy,Up,7) u.harvest(7) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Up,100)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveAway;S;Empty;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.train(Ranged,Right,7) u.train(Worker,Left,7) u.harvest(1) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.moveToUnit(Ally,Closest)} else { u.moveAway()} if(u.isBuilder()) then {u.moveAway()} else { e} u.build(Barracks,Right,20) u.attack(Closest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;C;Train;Worker;Left;7;S;S_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Ally;Closest;S;C;MoveAway;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() u.train(Ranged,Right,7) u.train(Worker,Left,7) u.harvest(1) if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.harvest(25) u.moveToUnit(Ally,Closest)} else { u.moveAway()} u.build(Barracks,Right,20) u.attack(Closest) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;2;S;C;Build;Base;EnemyDir;100;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} u.idle() if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,2) u.build(Base,EnemyDir,100) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;4;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} for(Unit u){u.build(Base,Down,4)} u.idle() u.build(Barracks,EnemyDir,2) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,25) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;4;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.train(Worker,Down,5)} for(Unit u){u.build(Base,Down,4)} u.idle() for(Unit u){u.train(Light,Up,100)} u.build(Barracks,EnemyDir,2) if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Closest) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(4)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Down;3;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Harvest;25;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Build;Barracks;Up;100;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;2;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.train(Heavy,Down,3) u.train(Heavy,Up,7) u.harvest(25) u.attack(Weakest) for(Unit u){for(Unit u){u.train(Heavy,Left,2)} u.build(Barracks,Up,100) if(OpponentHasNumberOfUnits(Ranged,2)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;7;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;Empty	for(Unit u){u.train(Heavy,Up,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,2) u.harvest(7) if(u.canAttack()) then {for(Unit u){if(u.canAttack()) then {u.attack(Closest)}}} else { for(Unit u){u.harvest(15)}}} else { e}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;7;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Up,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,2) u.harvest(7) if(u.canAttack()) then {for(Unit u){if(u.canAttack()) then {u.attack(Closest)}}} else { u.train(Ranged,EnemyDir,1) for(Unit u){u.moveToUnit(Enemy,Farthest)}}} else { if(HasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;C;Train;Heavy;Up;25;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Harvest;7;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Left;15;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Up,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,2) u.harvest(7) if(u.canAttack()) then {for(Unit u){if(u.canAttack()) then {u.attack(Closest)}}} else { u.train(Light,Left,15) for(Unit u){u.moveToUnit(Enemy,Farthest)}}} else { if(HasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,1) if(u.canHarvest()) then {u.harvest(25) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Heavy,Left,4) u.idle() u.attack(Closest)}}}
S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;4;S;C;Attack;Closest;S;C;Train;Ranged;Left;7	for(Unit u){u.build(Barracks,Up,1) if(u.isBuilder()) then {u.harvest(7) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle() u.train(Heavy,Left,4) u.attack(Closest)}} u.train(Ranged,Left,7)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;4;S;C;Attack;LessHealthy;S;C;Train;Ranged;Left;7	for(Unit u){u.build(Barracks,Up,1) if(u.isBuilder()) then {u.harvest(7) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle() u.train(Heavy,Left,4) u.attack(LessHealthy)}} u.train(Ranged,Left,7)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;20;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;4;S;C;Attack;LessHealthy;S;C;Train;Ranged;Left;7	for(Unit u){u.build(Barracks,Up,20) if(u.isBuilder()) then {u.harvest(7) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle() u.train(Heavy,Left,4) u.attack(LessHealthy)}} u.train(Ranged,Left,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;For_S;S;C;Train;Heavy;Up;100;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Build;Barracks;Up;2	for(Unit u){u.harvest(50) for(Unit u){u.train(Heavy,Up,100)} u.idle() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Up,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.harvest(2) u.moveToUnit(Enemy,Closest) u.attack(MostHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;2;S;C;Harvest;7;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.harvest(2) u.harvest(7) u.attack(MostHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;2;S;C;Harvest;7;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.harvest(2) u.harvest(7) u.attack(Strongest) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;3;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;50;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Right,3) u.build(Barracks,Up,1) u.harvest(50) u.attack(Strongest) for(Unit u){u.train(Worker,EnemyDir,5)} u.train(Ranged,Down,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;3;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;50;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Light;Left;2;S;S_S;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() u.train(Heavy,Right,3) u.build(Barracks,Up,1) u.harvest(50) u.attack(Strongest) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Light,Left,2)} u.train(Ranged,Down,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Right;3;S;S_S;S;C;Build;Barracks;Up;1;S;C;Harvest;50;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Light;Left;2;S;C;Train;Ranged;Up;10	for(Unit u){u.idle() u.train(Heavy,Right,3) u.build(Barracks,Up,1) u.harvest(50) u.attack(LessHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Light,Left,2)} u.train(Ranged,Up,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;1;S;S_S;S;C;Harvest;50;S;For_S;S;C;Train;Heavy;EnemyDir;25;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.build(Barracks,Up,1) u.harvest(50) for(Unit u){u.train(Heavy,EnemyDir,25)} u.attack(LessHealthy) for(Unit u){u.train(Worker,EnemyDir,5)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle() u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle() u.train(Light,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle() u.train(Light,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.attack(Closest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.idle() u.train(Light,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.attack(Closest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.train(Light,Down,10) for(Unit u){u.train(Heavy,Right,3) u.harvest(2) for(Unit u){u.idle()}} u.attack(Closest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.harvest(20) for(Unit u){u.train(Heavy,Right,3) u.harvest(2) for(Unit u){u.idle()}} u.attack(Closest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Harvest;2;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.harvest(20) for(Unit u){u.train(Heavy,Right,3) u.harvest(2) for(Unit u){u.idle()}} u.attack(Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;20;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Light;Up;9;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){u.idle() u.harvest(20) for(Unit u){u.train(Heavy,Right,3) u.harvest(2) for(Unit u){u.train(Light,Up,9) u.idle()}} u.attack(Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;Empty;S;For_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;C;Train;Light;Up;9;S;C;Idle;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;6	for(Unit u){if(u.isBuilder()) then {u.idle()} else { e} for(Unit u){u.harvest(2) for(Unit u){u.train(Heavy,Up,9) u.train(Light,Up,9) u.idle()}} u.attack(Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(9) u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,3) u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,3) u.train(Ranged,Down,10) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;1;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,3) u.train(Ranged,Down,10) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} if(HasLessNumberOfUnits(Ranged,1)) then {u.moveAway()} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;1;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) u.train(Ranged,Down,10) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} if(HasLessNumberOfUnits(Ranged,1)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Ranged;Up;1;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Ranged,Up,1) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;8;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Ranged,Down,8) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;C;Train;Ranged;Down;8;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { e} u.train(Ranged,Down,8) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Ranged;Up;1;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Ranged,Up,1) u.moveToUnit(Ally,Closest) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Harvest;20;S;For_S;S;C;Build;Barracks;Right;5;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.harvest(20)}} else { for(Unit u){u.build(Barracks,Right,5)}} u.train(Ranged,Up,1) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Harvest;20;S;Empty;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.harvest(20)}} else { e} u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;20;S;Empty;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(20)}}} else { e} u.train(Ranged,Up,1) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;20;S;Empty;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(20)}}} else { e} u.train(Ranged,Up,1) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;0;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Train;Ranged;Up;1;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,Strongest) u.train(Light,Up,4) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Enemy,Strongest)}}}} else { e} u.train(Ranged,Up,1) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Left;4;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Light;Right;15;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,LessHealthy) u.train(Light,Left,4) u.moveAway() for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Light,Right,15) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;4;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;For_S;S;C;Harvest;5;S;C;Train;Light;Right;15;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,4) u.moveAway() for(Unit u){u.train(Heavy,EnemyDir,6) for(Unit u){for(Unit u){u.harvest(5)}}} u.train(Light,Right,15) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;4;S;C;MoveAway;S;S_S;S;C;Train;Light;Right;15;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,4) u.moveAway() u.train(Light,Right,15) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;15;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Worker,EnemyDir,2)} u.idle()} for(Unit u){u.harvest(15) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,4) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,15) u.moveToUnit(Ally,Closest)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Attack;LessHealthy;S;C;Train;Ranged;Right;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,EnemyDir,8) u.attack(LessHealthy) u.train(Ranged,Right,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Attack;MostHealthy;S;C;Train;Ranged;Right;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,EnemyDir,8) u.attack(MostHealthy) u.train(Ranged,Right,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;For_S;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(9) u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;For_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,8) u.harvest(9) u.train(Ranged,Down,10) for(Unit u){for(Unit u){u.harvest(1)}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Train;Heavy;EnemyDir;8;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.train(Heavy,EnemyDir,8) u.harvest(9) u.train(Ranged,Down,10) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,6)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;If_B_then_S;B;CanHarvest;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.harvest(9) u.train(Ranged,Down,10) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {if(u.canHarvest()) then {u.attack(Closest)}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,100)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.harvest(9) u.train(Ranged,Down,10) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Closest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,100)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.harvest(9) u.train(Ranged,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {if(u.canHarvest()) then {u.moveAway()}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,100)} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Train;Heavy;EnemyDir;8;S;C;Harvest;9;S;C;Train;Ranged;Down;10;S;If_B_then_S_else_S;B;is_Type;Barracks;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.train(Heavy,EnemyDir,8) u.harvest(9) u.train(Ranged,Down,10) if(u.is(Barracks)) then {e} else { u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Strongest)}} u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.harvest(9) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(1)} if(u.is(Heavy)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,100)} u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(25) u.attack(Strongest) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(1)} if(u.is(Heavy)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,EnemyDir,100)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(50)) then {for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;C;Train;Worker;EnemyDir;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.harvest(9) if(HasNumberOfWorkersHarvesting(9)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,100)} u.train(Worker,EnemyDir,3) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.harvest(9) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.train(Worker,EnemyDir,3) u.moveToUnit(Ally,Weakest) u.attack(Weakest) for(Unit u){u.build(Barracks,Right,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;20;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.harvest(9) u.moveToUnit(Enemy,LessHealthy) if(HasNumberOfWorkersHarvesting(1)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,20)} for(Unit u){u.idle()} for(Unit u){if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}}} u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,3) u.moveToUnit(Ally,Weakest) u.attack(Weakest) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Attack;Closest;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,8) u.attack(Closest) u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Attack;Closest;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,8) u.attack(Closest) u.train(Ranged,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.idle()} for(Unit u){u.attack(Closest) u.train(Ranged,Down,10) for(Unit u){u.train(Heavy,Left,8) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.idle()} for(Unit u){u.attack(Weakest) u.train(Ranged,Down,10) for(Unit u){u.train(Heavy,Left,8) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Left,3) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Ranged;Down;10;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.idle()} for(Unit u){u.attack(Strongest) u.train(Ranged,Down,10) for(Unit u){u.train(Heavy,Left,8) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Left,3) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Build;Barracks;Up;3	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Heavy,Left,8) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Left,3) for(Unit u){u.build(Barracks,Up,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;25;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Build;Barracks;Up;3	for(Unit u){u.idle()} for(Unit u){u.attack(Weakest) for(Unit u){u.train(Heavy,Left,25) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Left,3) for(Unit u){u.build(Barracks,Up,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Attack;LessHealthy;S;C;Train;Ranged;Right;15;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) u.attack(LessHealthy) u.train(Ranged,Right,15) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;10;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.train(Light,Up,10) u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,3) u.attack(LessHealthy) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;9;S;Empty;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;2	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.train(Heavy,EnemyDir,8) if(u.canAttack()) then {u.build(Barracks,Left,9)} else { e} for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,2)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Up;8;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Left;9;S;Empty;S;C;Train;Light;Down;10;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;EnemyDir;2	for(Unit u){u.idle()} for(Unit u){u.harvest(5) u.train(Heavy,Up,8) if(u.canAttack()) then {u.build(Barracks,Left,9)} else { e} u.train(Light,Down,10) for(Unit u){u.train(Light,Right,3) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,EnemyDir,2)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;For_S;S;C;Train;Light;Down;15;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.train(Light,Down,15)}} for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(25)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;For_S;S;For_S;S;C;Train;Light;Down;15;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveAway() for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.train(Light,Down,15)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,Right,6)}} if(HaveQtdUnitsAttacking(25)) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;For_S;S;C;Train;Light;Left;15;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Up;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.train(Light,Left,15)}} u.moveAway() for(Unit u){u.build(Barracks,Up,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;C;Build;Barracks;Up;6	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,EnemyDir,6)} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.train(Light,Left,15)}} for(Unit u){u.build(Barracks,Up,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Train;Ranged;Right;15;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;1;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Up;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) u.train(Ranged,Right,15) for(Unit u){u.train(Light,EnemyDir,2) u.harvest(2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,EnemyDir,6)} if(HasLessNumberOfUnits(Ranged,1)) then {if(u.canAttack()) then {for(Unit u){u.attack(Closest)}}} u.attack(Weakest) for(Unit u){u.build(Barracks,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Light;Right;25;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){u.attack(Closest) for(Unit u){u.train(Light,Right,25) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Light;Right;25;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;3	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.attack(Closest) for(Unit u){u.train(Light,Right,25) u.harvest(2)} u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,3)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()}} for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;2;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()}} u.train(Ranged,EnemyDir,2) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;1;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Ranged;EnemyDir;2;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.attack(MostHealthy) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()}} if(HasLessNumberOfUnits(Ranged,1)) then {u.moveToUnit(Ally,Farthest)} u.train(Ranged,EnemyDir,2) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Train;Ranged;EnemyDir;50;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;0;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,EnemyDir,50) u.idle()} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Enemy,Strongest)}}}} else { e} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(5)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Ranged,EnemyDir,50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.build(Barracks,Up,2)} u.harvest(5) u.moveToUnit(Enemy,Farthest)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;50;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Heavy,Down,50)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Light,Left,100) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.build(Barracks,Up,2)} u.harvest(5) u.moveToUnit(Enemy,Weakest) u.moveAway()}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Down;20	for(Unit u){u.attack(Weakest) u.train(Worker,Down,20)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;9;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Worker,Up,9) if(u.canHarvest()) then {for(Unit u){u.attack(MostHealthy)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)}} else { e} for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;100;S;C;Harvest;1;S;S_S;S;C;Build;Base;Up;2;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Worker,Up,100) u.harvest(1) u.build(Base,Up,2) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;C;Idle;S;C;Harvest;3;S;For_S;S;S_S;S;C;Build;Base;Down;3;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.train(Worker,Up,4) u.idle() u.harvest(3)} for(Unit u){u.build(Base,Down,3) u.attack(MostHealthy) u.train(Worker,EnemyDir,20)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;9;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Down;20;S;C;Train;Worker;Up;10	for(Unit u){u.build(Barracks,EnemyDir,10)} for(Unit u){u.train(Light,Right,9) for(Unit u){u.harvest(9) u.attack(Weakest)} u.train(Heavy,Down,20) u.train(Worker,Up,10)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;20;S;S_S;S;C;Harvest;10;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;C;MoveAway;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;Attack;Farthest;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.build(Barracks,Right,20) u.harvest(10) for(Unit u){u.train(Heavy,EnemyDir,5)} u.moveAway() if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} u.attack(Farthest) u.train(Light,Down,50)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Harvest;15;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;C;Train;Worker;Down;3;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Light,EnemyDir,6) u.harvest(15) for(Unit u){u.build(Barracks,Up,3)} u.train(Worker,Down,3) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Harvest;15;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Down;3;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Light,EnemyDir,6) u.harvest(15) for(Unit u){u.build(Barracks,Up,9)} u.train(Worker,Down,3) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;10;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Harvest;5;S;Empty;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Right;20;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;2;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Farthest;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Up,10) if(u.isBuilder()) then {u.idle()} if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5)}} else { e} for(Unit u){u.idle()} u.train(Ranged,Down,20) u.harvest(6) for(Unit u){u.train(Heavy,Right,20)} if(HasNumberOfUnits(Ranged,2)) then {for(Unit u){if(u.canAttack()) then {u.attack(Farthest)} else { e}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Base;Up;25;S;C;Train;Worker;Left;50;S;C;Harvest;10;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.idle()} u.build(Base,Up,25) u.train(Worker,Left,50) u.harvest(10) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Harvest;15;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;For_S;S;C;Train;Ranged;Down;2;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Light,EnemyDir,6) u.harvest(15) for(Unit u){u.build(Barracks,Up,9)} u.train(Worker,Down,3) for(Unit u){for(Unit u){u.train(Ranged,Down,2)}} u.attack(Strongest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Harvest;15;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Attack;Weakest;S;For_S;S;For_S;S;C;Train;Ranged;Down;2	for(Unit u){u.idle() u.train(Light,EnemyDir,6) u.harvest(15) for(Unit u){u.build(Barracks,Up,9)} u.train(Worker,Down,3) u.attack(Weakest) for(Unit u){for(Unit u){u.train(Ranged,Down,2)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Ranged;Right;10;S;C;Build;Barracks;Up;6;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Light;Left;5;S;S_S;S;C;Train;Heavy;Right;2;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveAway;S;Empty;S;Empty	for(Unit u){u.idle() for(Unit u){if(u.canAttack()) then {u.idle()} else { e} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Ranged,Right,10)}}}} u.build(Barracks,Up,6)} for(Unit u){u.harvest(10) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Light,Left,5)} u.train(Heavy,Right,2) if(u.HasUnitThatKillsInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveAway()} else { e}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;S_S;S;C;Harvest;15;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Down;3;S;For_S;S;C;Idle	for(Unit u){u.idle() u.train(Light,EnemyDir,6) u.harvest(15) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Up,9)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Down,3) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;C;Train;Light;Right;8;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Left;9;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;3	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,6) u.train(Light,Right,8)} for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(2) u.build(Barracks,Left,9)}}} for(Unit u){u.moveToUnit(Ally,MostHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Worker,Down,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;S_S;S;C;Train;Light;Left;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Light;Right;8;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.harvest(5) u.idle() if(u.canHarvest()) then {u.moveAway()} u.train(Light,Left,6) for(Unit u){u.build(Barracks,Up,9)} u.attack(MostHealthy)} for(Unit u){u.train(Light,Right,8) u.train(Worker,EnemyDir,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveAway;S;S_S;S;C;Train;Light;Left;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Light;Right;8;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.harvest(5) u.idle() if(u.canHarvest()) then {u.moveAway()} u.train(Light,Left,6) for(Unit u){u.build(Barracks,Up,9)} u.attack(Weakest)} for(Unit u){u.train(Light,Right,8) u.train(Worker,EnemyDir,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;9;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Right;1;S;Empty;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;50	for(Unit u){u.idle() u.train(Light,EnemyDir,9) if(u.isBuilder()) then {u.build(Barracks,Right,1)} else { e} u.harvest(1) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Up,50)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;1;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,6) u.train(Worker,Down,15) u.train(Worker,Right,100) u.harvest(4) u.idle() for(Unit u){u.build(Barracks,Left,1)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;1;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,6) u.train(Worker,Down,15) for(Unit u){u.harvest(1)} u.train(Worker,Right,100) u.harvest(4) u.idle() for(Unit u){u.build(Barracks,Left,1)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Train;Ranged;Left;20;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Left;1;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,15) for(Unit u){u.harvest(1)} for(Unit u){u.train(Ranged,Left,20)} u.idle() u.harvest(4) for(Unit u){u.build(Barracks,Left,1)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;1;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,6) u.train(Worker,Down,15) u.harvest(4) u.idle() for(Unit u){u.build(Barracks,Left,1)} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;C;Idle;S;S_S;S;C;Train;Worker;Right;100;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){u.train(Heavy,Up,6) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) u.idle() u.train(Worker,Right,100) u.attack(Closest) for(Unit u){u.build(Barracks,Left,1)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Down;1;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Heavy,Down,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Down,1)} u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Down;1;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Heavy,Down,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Down,1)} u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.train(Heavy,Down,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Worker,Down,5) u.train(Heavy,Down,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Down,1)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.train(Heavy,Down,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,5) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Ally,Farthest)} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Light;Right;5;S;If_B_then_S;B;is_Type;Base;S;For_S;S;C;Harvest;5;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.train(Heavy,Down,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Right,5) if(u.is(Base)) then {for(Unit u){u.harvest(5)}} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;C;Train;Light;Right;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Heavy,Right,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) for(Unit u){u.train(Ranged,Left,5) u.train(Light,Right,2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(3)} u.train(Worker,Down,15) for(Unit u){if(u.isBuilder()) then {u.idle()} u.train(Heavy,Left,5)} u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Left;5;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(3)} u.train(Worker,Down,15) for(Unit u){if(u.isBuilder()) then {u.idle()} u.train(Heavy,Left,5) u.harvest(6)} u.moveToUnit(Ally,Strongest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Left,1)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Heavy;Right;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;5;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Ranged;Up;25;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Idle	for(Unit u){u.train(Heavy,Right,6) u.attack(Closest) for(Unit u){u.harvest(3)} u.train(Worker,Down,8) u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.isBuilder()) then {u.idle()} u.train(Heavy,Right,5) u.harvest(6)} u.moveToUnit(Ally,Strongest) u.train(Ranged,Up,25) for(Unit u){u.build(Barracks,Left,1) u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Ranged;Right;10	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(3)} u.train(Worker,Down,15) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Ranged,Right,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;C;Train;Ranged;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) for(Unit u){u.train(Ranged,Down,8)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,MostHealthy) if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;Down;25;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Heavy,Down,6) u.attack(Closest) for(Unit u){u.harvest(4)} u.train(Worker,Down,6) for(Unit u){u.train(Light,Right,2)} u.moveToUnit(Enemy,Weakest) u.train(Ranged,Down,25) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Right;3;S;For_S;S;C;Train;Light;Right;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Ranged;Up;1;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,Down,6) for(Unit u){u.harvest(4)} u.train(Worker,Down,15) for(Unit u){u.idle()} u.train(Light,Right,3) for(Unit u){u.train(Light,Right,2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Ranged,Up,1)} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveToUnit(Ally,Weakest)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;50;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;EnemyDir;8;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,50) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,Farthest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,EnemyDir,8)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;50;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Ranged;EnemyDir;8;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} if(HasNumberOfUnits(Light,2)) then {u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,9)} u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,50) for(Unit u){u.idle() u.build(Barracks,Down,1)} u.moveToUnit(Ally,Farthest) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Ranged,EnemyDir,8)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;3;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Heavy;Up;6;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;8;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;MoveAway;S;C;Train;Ranged;Up;10;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest	for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(3) u.harvest(6) for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Weakest)}} u.train(Heavy,Up,6) u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle()} u.build(Barracks,Left,8) u.train(Light,EnemyDir,5) u.moveAway() u.train(Ranged,Up,10) u.moveToUnit(Ally,Strongest) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Heavy;EnemyDir;1;S;S_S;S;S_S;S;C;Harvest;50;S;If_B_then_S_else_S;B;is_Type;Ranged;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Down;15;S;Empty;S;C;Train;Ranged;Right;25	for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Heavy,EnemyDir,1) u.harvest(50) if(u.is(Ranged)) then {u.idle() for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.harvest(4) u.train(Worker,Down,15)}} else { e} u.train(Ranged,Right,25)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Light;Right;8;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;3;S;C;Harvest;2;S;C;Build;Barracks;Left;9;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasNumberOfUnits;Ranged;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;3	for(Unit u){for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.train(Heavy,EnemyDir,6) u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,10) u.train(Light,Right,8)} for(Unit u){for(Unit u){u.train(Ranged,Up,3) u.harvest(2) u.build(Barracks,Left,9)} for(Unit u){u.attack(MostHealthy)}} if(HasNumberOfUnits(Ranged,2)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,MostHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Worker,Down,3)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Worker,Down,7) u.train(Heavy,Down,6) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.attack(Weakest) u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Light;Right;8;S;For_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Left;9;S;C;MoveAway;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;3	for(Unit u){for(Unit u){u.idle()} u.harvest(8) if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.train(Heavy,EnemyDir,6) u.moveToUnit(Ally,Weakest) u.train(Worker,EnemyDir,10) u.train(Light,Right,8)} for(Unit u){for(Unit u){u.harvest(2) u.build(Barracks,Left,9)}} u.moveAway()} for(Unit u){u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} u.train(Worker,Down,3)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.train(Light,Right,5) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Right,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) u.train(Ranged,Down,100) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Down;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Right,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) u.train(Ranged,Down,100) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5) u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Idle;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Left,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()}} for(Unit u){u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Right;25;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Right,25) for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Right,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;C;Train;Worker;Down;25;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,7) u.attack(LessHealthy) for(Unit u){u.idle()} if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Right,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;3;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;C;Train;Light;Right;9;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,7) if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,EnemyDir,3) u.harvest(4)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,1)} for(Unit u){u.train(Light,Right,9)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,7) for(Unit u){u.train(Light,Left,9)} if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(4)} u.train(Ranged,Left,1) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,1)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,8) for(Unit u){u.train(Light,Left,9)} if(HasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Down,1)} u.train(Worker,Down,25) u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Build;Base;Left;5;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Left;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Build;Barracks;Left;1;S;C;Train;Light;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.harvest(3)} u.train(Worker,Down,15) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.build(Base,Left,5)}} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,5)} u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,Left,1) u.train(Light,EnemyDir,4)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;CanAttack;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;3;S;Empty;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Light;EnemyDir;6;S;S_S;S;C;Train;Light;Down;7;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Worker,Left,10) if(u.canAttack()) then {if(OpponentHasNumberOfUnits(Worker,3)) then {e} else { u.attack(Closest) u.moveToUnit(Enemy,Farthest)}} u.harvest(7) u.train(Light,EnemyDir,6) u.train(Light,Down,7) u.attack(Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;C;Train;Light;Down;8;S;S_S;S;C;Train;Worker;Right;8;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)}} for(Unit u){u.train(Light,Down,8)} u.train(Worker,Right,8) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;C;Train;Light;Down;8;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;For_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)}} for(Unit u){u.train(Light,Down,8)} u.train(Worker,Right,8) for(Unit u){u.train(Worker,Left,15)} for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;C;Train;Light;Down;8;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;For_S;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)}} for(Unit u){u.train(Light,Down,8)} u.train(Worker,Right,8) for(Unit u){u.train(Worker,Right,15)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Light;Down;8;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)} u.attack(Closest)} for(Unit u){u.train(Light,Down,8)} u.train(Worker,Right,8) if(HasLessNumberOfUnits(Barracks,9)) then {e} else { u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)} u.attack(Closest)} for(Unit u){u.train(Heavy,Up,20)} u.train(Worker,Right,8) if(HasLessNumberOfUnits(Barracks,9)) then {e} else { u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(6) for(Unit u){u.harvest(1) u.build(Barracks,Down,1)} u.attack(Closest)} for(Unit u){u.train(Heavy,Up,20)} u.train(Worker,Right,8) if(HasLessNumberOfUnits(Barracks,9)) then {e} else { u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;Down;1;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(6) for(Unit u){for(Unit u){u.train(Heavy,Right,6)}} for(Unit u){u.harvest(1) u.build(Barracks,Down,1)} u.attack(Closest)} for(Unit u){u.train(Heavy,Up,20)} u.train(Ranged,EnemyDir,1) u.train(Worker,Right,8) if(HasLessNumberOfUnits(Barracks,9)) then {e} else { u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Worker;Down;8;S;For_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;20;S;C;Train;Ranged;EnemyDir;1;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;9;S;Empty;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(6) u.train(Worker,Down,8) for(Unit u){for(Unit u){u.train(Heavy,Right,6)}} for(Unit u){u.harvest(1) u.build(Barracks,EnemyDir,1)} u.attack(Closest)} for(Unit u){u.train(Heavy,Up,20)} u.train(Ranged,EnemyDir,1) if(HasLessNumberOfUnits(Barracks,9)) then {e} else { u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Left;20;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Down,15) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Left,20)} u.harvest(4) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;C;Train;Ranged;Down;6;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Ranged;Left;20;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Down,4) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(50)) then {u.train(Ranged,Down,6)} else { u.moveToUnit(Enemy,Weakest)}} for(Unit u){u.train(Ranged,Left,20)} u.idle() u.harvest(4) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;6;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;3;S;For_S;S;S_S;S;C;Train;Ranged;Up;3;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,6) if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)} u.idle() u.harvest(4) u.moveToUnit(Enemy,Closest) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Light,Up,3)}} for(Unit u){u.train(Ranged,Up,3) for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;7;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;4;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Down,5) u.train(Light,Down,7)} u.train(Worker,Right,100) u.harvest(4) u.idle() for(Unit u){u.build(Barracks,Left,1)} u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;Harvest;4;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Down,5) u.train(Light,Down,7)} for(Unit u){u.idle()} u.train(Worker,Right,100) u.harvest(4) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;25;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;Up;10;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,25) for(Unit u){u.train(Heavy,Down,5) u.train(Light,Down,7)} for(Unit u){u.idle()} u.harvest(4) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) u.build(Barracks,Up,10) u.attack(Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;7;S;For_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,5) u.train(Light,Down,7)} for(Unit u){u.idle()} if(u.canAttack()) then {for(Unit u){u.harvest(4) u.attack(Strongest)}} u.train(Worker,Right,100) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Train;Light;Down;7;S;For_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,5) u.train(Light,Down,7)} for(Unit u){u.idle()} if(u.canAttack()) then {for(Unit u){u.harvest(4) u.attack(Strongest)}} u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;5;S;For_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.train(Light,Up,15) for(Unit u){u.train(Heavy,Down,5)} for(Unit u){u.idle()} if(u.canAttack()) then {for(Unit u){u.harvest(4) u.attack(Strongest)}} u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;5;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Harvest;7;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.train(Light,Up,15) u.harvest(9) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,Down,5)} u.train(Worker,Left,4) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(7)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)}} u.attack(MostHealthy) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;5;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;IsBuilder;S;C;Attack;Farthest	for(Unit u){u.train(Light,Up,15) u.harvest(9) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,5)} for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(7) u.attack(MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.isBuilder()) then {u.attack(Farthest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;Down;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;5;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;IsBuilder;S;C;Attack;Farthest	for(Unit u){u.train(Light,Up,15) for(Unit u){u.idle()} for(Unit u){u.train(Worker,Down,8)} for(Unit u){u.train(Heavy,Down,5)} for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(7) u.attack(MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.isBuilder()) then {u.attack(Farthest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;8;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Down,8)} u.train(Worker,Right,7) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.harvest(7) u.attack(MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;8;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Attack;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Down,8)} u.train(Worker,Right,7) u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(7) u.attack(MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;8;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;For_S;S;C;Train;Heavy;Down;5;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;6;S;C;MoveToUnit;Ally;Closest;S;Empty	for(Unit u){u.train(Light,Up,15) u.harvest(9) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Down,8)} u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,5)} u.moveToUnit(Ally,Closest) u.attack(Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Heavy,6)) then {u.moveToUnit(Ally,Closest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Right;15;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(3) u.train(Heavy,Right,15)} u.train(Light,Left,8) u.train(Worker,Down,15) u.moveToUnit(Ally,Weakest) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,1) u.harvest(6)} if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;For_S;S;For_S;S;C;Build;Barracks;Down;3;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;25;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;2;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Farthest;S;Empty	for(Unit u){u.train(Worker,Down,7) u.attack(Closest) for(Unit u){u.train(Light,EnemyDir,5) u.harvest(4)} u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)}} if(u.isBuilder()) then {for(Unit u){u.train(Heavy,EnemyDir,7)}} for(Unit u){u.build(Barracks,Down,1)} for(Unit u){for(Unit u){u.build(Barracks,Down,3)}} if(u.canHarvest()) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {if(OpponentHasNumberOfUnits(Worker,2)) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Ally,Farthest)}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Up;5	for(Unit u){u.build(Barracks,Down,4) u.attack(LessHealthy) for(Unit u){u.train(Heavy,Up,5)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;S_S;S;C;Build;Barracks;Down;9;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;Strongest;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Idle	for(Unit u){u.train(Heavy,Down,5) u.build(Barracks,Down,9) if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(Strongest)} u.harvest(10) u.moveAway() u.moveToUnit(Enemy,Farthest) for(Unit u){u.idle()}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;6;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;For_S;S;C;Attack;Strongest;S;C;Train;Heavy;Left;2;S;For_S;S;C;Train;Light;EnemyDir;10	for(Unit u){u.build(Barracks,Up,6) if(u.canAttack()) then {u.idle()} else { u.moveToUnit(Ally,MostHealthy)}} for(Unit u){for(Unit u){for(Unit u){if(u.canAttack()) then {u.harvest(3)}}} for(Unit u){u.attack(Strongest)} u.train(Heavy,Left,2)} for(Unit u){u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;S_S;S;C;Train;Heavy;Right;1;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;20;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.idle() u.harvest(20) u.train(Heavy,Right,1) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,20) u.attack(Weakest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Down;6;S;C;Harvest;20;S;C;Train;Light;Up;20;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Down,6)} u.harvest(20) u.train(Light,Up,20) u.attack(Weakest)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Down;6;S;C;Harvest;20;S;C;Train;Light;Up;20;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Left,1)} for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Down,6)} u.harvest(20) u.train(Light,Up,20) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;1;S;C;Build;Barracks;EnemyDir;2;S;C;Idle;S;C;Train;Heavy;Down;8	for(Unit u){u.harvest(8) u.attack(MostHealthy) for(Unit u){for(Unit u){u.build(Barracks,Left,1)} u.build(Barracks,EnemyDir,2) u.idle() u.train(Heavy,Down,8)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;C;Harvest;25;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveAway;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Ranged,Down,20) u.harvest(25) for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Ally,Weakest) u.moveAway() u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Down;20;S;C;Harvest;25;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.train(Ranged,Down,20) u.harvest(25) for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Train;Heavy;Left;25;S;S_S;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Right,2) u.train(Heavy,Left,25) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;4;S;For_S;S;C;Attack;Weakest;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,5)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.train(Worker,Right,4)} for(Unit u){u.attack(Weakest)}} u.harvest(15) u.moveToUnit(Ally,Weakest) if(u.isBuilder()) then {e} else { u.attack(Closest)} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;4;S;C;MoveAway;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,5)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,4)} u.moveAway()} u.harvest(100) u.moveToUnit(Ally,Weakest) u.attack(LessHealthy) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;4;S;C;MoveAway;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,5)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,4)} u.moveAway()} u.harvest(100) u.moveToUnit(Ally,Weakest) u.attack(Farthest) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;4;S;C;MoveAway;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,5)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,4)} u.moveAway()} u.harvest(100) u.moveToUnit(Enemy,Strongest) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.moveAway() u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Build;Barracks;Left;8;S;C;Train;Light;Down;20;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(6) u.build(Barracks,Left,8) u.train(Light,Down,20) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;9;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Ranged,EnemyDir,9)} u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} u.build(Barracks,Left,7) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.harvest(50) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,25)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,EnemyDir,8) u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Ranged;EnemyDir;8;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,EnemyDir,8) u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;C;Harvest;50;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.harvest(50) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;Harvest;7;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} for(Unit u){u.harvest(7)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;100;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.harvest(100) u.train(Worker,Right,25)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.harvest(100) u.attack(Closest) u.train(Worker,Right,25)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Right;1;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Right,1)} if(u.isBuilder()) then {u.attack(MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,100) if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Train;Worker;Up;20;S;C;Idle;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;is_Type;Light;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Left;15;S;Empty;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;10;S;C;MoveToUnit;Ally;Closest;S;Empty;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;7;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,Up,20) u.idle()} if(u.isBuilder()) then {if(u.is(Light)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Left,15)} else { e} if(HasNumberOfUnits(Base,10)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.canAttack()) then {u.moveToUnit(Enemy,MostHealthy)}} else { u.harvest(7)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;MostHealthy;S;C;Train;Worker;Right;4	for(Unit u){if(u.canAttack()) then {u.attack(MostHealthy)} else { u.train(Worker,Right,4)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;10;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Ranged;Right;9;S;For_S;S;C;Build;Barracks;Down;3	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.isBuilder()) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.attack(Closest) for(Unit u){u.harvest(10)}}}}} if(u.canHarvest()) then {e} else { u.attack(Weakest)}} for(Unit u){u.train(Ranged,Right,9)} for(Unit u){u.build(Barracks,Down,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;Attack;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;Build;Barracks;EnemyDir;20	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,15)} u.attack(Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Down;3;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(OpponentHasNumberOfUnits(Heavy,8)) then {u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Down,3) for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;9;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){for(Unit u){u.harvest(5)} u.train(Worker,Up,9) for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { for(Unit u){u.train(Worker,Up,100)}}}}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Train;Light;Down;9;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(100) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,3)} u.train(Light,Down,9) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Build;Barracks;Up;2;S;C;Harvest;100;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Light;EnemyDir;20	for(Unit u){if(u.canAttack()) then {u.build(Barracks,Up,2) u.harvest(100)} if(u.isBuilder()) then {for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest) u.train(Light,EnemyDir,20)}}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,10) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;C;Harvest;1;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.build(Barracks,EnemyDir,20) u.harvest(1) u.attack(Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.moveToUnit(Enemy,Farthest) u.train(Light,Up,2) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;S_S;S;C;Train;Light;Down;10;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.idle() u.train(Light,Down,10) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Left,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Ranged;Right;8;S;S_S;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.harvest(2) for(Unit u){u.train(Ranged,Right,8)} u.moveAway() u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,100)} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.moveToUnit(Enemy,Farthest) u.train(Light,Up,2) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,100)} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Ally,Weakest)} u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;C;Harvest;25;S;C;Train;Worker;Up;4;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.harvest(25)}} u.train(Worker,Up,4) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;C;Harvest;25;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;4;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.harvest(25)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,4) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Farthest)} u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(Weakest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveToUnit(Ally,Farthest)} u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(Weakest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;1;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;25;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,Up,1) u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,25) if(u.isBuilder()) then {e} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;25;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,25) u.attack(Weakest) if(u.isBuilder()) then {e} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;25;S;S_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Up;20;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,25) u.attack(Weakest) if(u.isBuilder()) then {e} else { for(Unit u){for(Unit u){u.train(Ranged,Up,20)} u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Up;1;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Ranged;Down;3;S;C;Train;Worker;Up;25;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Ranged,Up,1) u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} for(Unit u){u.attack(Strongest) for(Unit u){u.train(Ranged,Down,3)}} u.train(Worker,Up,25) if(u.isBuilder()) then {e} else { for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Down;20;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;C;Train;Heavy;Down;3;S;For_S;S;C;Idle	for(Unit u){u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Down,20)} u.build(Barracks,EnemyDir,2) u.harvest(1) u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) u.train(Heavy,Down,3) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Down;9;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Harvest;1;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;For_S;S;C;Idle	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Down,9)} u.build(Barracks,EnemyDir,2) u.harvest(1) u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.canAttack()) then {u.attack(Weakest)} u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Left;6;S;C;Attack;Strongest;S;C;Train;Worker;Down;100;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() for(Unit u){u.harvest(3)} u.train(Worker,Left,6) u.attack(Strongest) u.train(Worker,Down,100) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;100;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Left;25;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3	for(Unit u){u.attack(Strongest) if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Worker,EnemyDir,100)}} else { e} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Base,Left,25)} for(Unit u){u.idle()} for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;100;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;100;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,100) if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest) u.attack(Strongest) for(Unit u){u.train(Worker,EnemyDir,100)}} else { e} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){u.idle()} for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;100;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;50;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,100) if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest) for(Unit u){u.train(Heavy,EnemyDir,8)}} else { e} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,EnemyDir,50)} for(Unit u){u.idle()} for(Unit u){u.harvest(3)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Strongest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;S_S;S;C;Train;Ranged;Right;7;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Strongest)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Ranged,Right,7) u.build(Barracks,EnemyDir,100)} u.harvest(7) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.attack(Strongest)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.build(Barracks,EnemyDir,100)} u.harvest(7) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Ranged;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Attack;Strongest;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4) u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.harvest(7) u.attack(Strongest)} else { u.build(Barracks,EnemyDir,100)} u.harvest(7) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Ranged;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Worker;Up;9;S;C;Attack;Strongest;S;Empty;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Left;2	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4) u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.build(Barracks,EnemyDir,50) u.train(Worker,Up,9) u.attack(Strongest)} else { e} u.harvest(7) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Left,2)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;S_S;S;C;Harvest;7;S;For_S;S;C;Train;Heavy;EnemyDir;7	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Weakest)}} for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.harvest(7) for(Unit u){u.train(Heavy,EnemyDir,7)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} u.attack(Weakest)}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Up;2;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;S_S;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Up;100	for(Unit u){u.moveToUnit(Enemy,Closest) u.train(Worker,Up,2) if(u.is(Worker)) then {u.moveToUnit(Ally,Closest)} if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,LessHealthy)}} else { e} for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.train(Worker,Up,100)}}
S;For_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;C;Harvest;8;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.is(Worker)) then {u.attack(Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){if(u.canHarvest()) then {u.harvest(8) for(Unit u){u.idle()}} else { u.train(Worker,EnemyDir,7)}} for(Unit u){u.attack(LessHealthy)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;5;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;1	for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Up;9	for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Up,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;Closest;S;C;Train;Worker;Up;10	for(Unit u){for(Unit u){u.harvest(1)} u.attack(Closest) u.train(Worker,Up,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Worker;Down;20;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(4)} u.train(Worker,Down,20) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy)} else { e} for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Down;5;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;10;S;For_S;S;C;Build;Barracks;Left;100	for(Unit u){for(Unit u){u.build(Base,Down,5) u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(Weakest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} u.train(Ranged,Left,10) for(Unit u){u.build(Barracks,Left,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Base;Down;5;S;C;Idle;S;C;Train;Heavy;EnemyDir;100;S;For_S;S;C;Build;Barracks;Up;1;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;15;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Left;10	for(Unit u){for(Unit u){u.build(Base,Down,5) u.idle() u.train(Heavy,EnemyDir,100) for(Unit u){u.build(Barracks,Up,1)}} for(Unit u){u.harvest(3)} u.train(Worker,Up,15) u.attack(Weakest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} u.train(Ranged,Left,10)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Ranged;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4) u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.harvest(7) u.attack(Strongest)} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.harvest(100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Ranged;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;7;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4) u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle() u.build(Barracks,EnemyDir,50) u.harvest(7) u.attack(Strongest)} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.harvest(100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Idle;S;C;MoveAway;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;7;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.idle()} u.moveAway() u.build(Barracks,EnemyDir,50) u.harvest(7) u.attack(Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.moveAway()} for(Unit u){u.idle()} u.attack(Strongest)} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;Train;Ranged;Up;4;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Harvest;7;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4) u.moveAway()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.moveAway()} for(Unit u){u.idle()} u.build(Barracks,EnemyDir,50) u.harvest(7) u.attack(Strongest)} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.harvest(100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;S_S;S;For_S;S;C;MoveAway;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.canHarvest()) then {for(Unit u){u.idle()}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.moveAway()} u.build(Barracks,EnemyDir,50) u.attack(Strongest)} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.canHarvest()) then {for(Unit u){u.idle()}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {for(Unit u){u.attack(Closest)}} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.harvest(100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway;S;S_S;S;C;Train;Heavy;Right;100;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.harvest(6)} for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} if(u.canHarvest()) then {for(Unit u){u.idle()}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.moveToUnit(Enemy,Farthest) u.moveAway()} else { u.train(Heavy,Right,100) u.build(Barracks,EnemyDir,7)} u.harvest(100) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Idle;S;C;Build;Base;Up;7;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;6	for(Unit u){u.train(Worker,EnemyDir,9) u.idle() u.build(Base,Up,7) u.moveToUnit(Enemy,LessHealthy) u.harvest(6)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;9;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,9)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;5;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;Harvest;2;S;C;Idle;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Worker,Up,5)} if(u.isBuilder()) then {u.harvest(2) u.idle()} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;5;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;25;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Up,5)} if(u.isBuilder()) then {u.harvest(2) for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Worker,Right,25)}} else { e}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;C;Idle;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Strongest;S;Empty	for(Unit u){u.train(Worker,Right,20) u.idle() u.harvest(4) u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Strongest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;Train;Light;EnemyDir;6;S;C;Idle;S;C;Train;Worker;Left;8;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.build(Barracks,Left,6) u.train(Light,EnemyDir,6) u.idle() u.train(Worker,Left,8) u.harvest(3) u.attack(Weakest) u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;5;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;For_S;S;C;Build;Barracks;Up;2;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){u.harvest(10) u.train(Worker,Right,5) u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;5;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){u.harvest(10) u.train(Worker,Right,5) u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Farthest)} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;3;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Farthest)} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.build(Base,Down,3) u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Left,8)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveAway;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;3;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {e} else { u.moveAway()} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.build(Base,Down,3) u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Left,8)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Down;4;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Down;3;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;3;S;C;Train;Light;Up;4	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {e} else { u.train(Heavy,Down,4)} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.build(Base,Down,3) u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.attack(Farthest) for(Unit u){if(OpponentHasNumberOfUnits(Barracks,3)) then {u.train(Light,Up,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;LessHealthy;S;C;Train;Heavy;Down;4;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {u.attack(LessHealthy)} else { u.train(Heavy,Down,4)} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;C;Train;Heavy;Down;4;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy)} else { u.train(Heavy,Down,4)} u.train(Worker,EnemyDir,9) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;LessHealthy;S;Empty;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.idle()} u.harvest(100) if(u.isBuilder()) then {u.attack(LessHealthy)} else { e} u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;C;Attack;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.idle()} u.harvest(100) u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.train(Light,Down,5) u.attack(Weakest)}} else { e} u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;100;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.idle()} u.harvest(100) u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} u.moveToUnit(Enemy,Farthest) for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;100;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.idle()} u.harvest(100) u.attack(MostHealthy) u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Barracks;S;C;Train;Ranged;Right;6;S;Empty;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Right,50)} for(Unit u){u.idle() if(u.is(Barracks)) then {u.train(Ranged,Right,6)} else { e}} u.attack(MostHealthy) u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(6) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Farthest)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;50;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;7;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;2;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.train(Heavy,Right,50)} for(Unit u){u.idle() u.train(Ranged,Right,7)} u.harvest(100) u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy) u.train(Worker,EnemyDir,4) if(u.HasUnitWithinDistanceFromOpponent(3)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} else { e} for(Unit u){u.build(Barracks,Up,2)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Farthest)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Heavy;Left;6	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,4)} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) u.attack(LessHealthy) u.train(Light,Up,2) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,100) u.train(Heavy,Left,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.harvest(3)} u.train(Worker,Up,4) for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,100) u.train(Heavy,Left,6) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.attack(LessHealthy) for(Unit u){u.harvest(3)} u.train(Worker,Up,4) for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,6) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(3)} u.train(Worker,Up,4) for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.train(Ranged,EnemyDir,15)} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.attack(LessHealthy) for(Unit u){u.harvest(20)} u.train(Worker,Up,4) for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.train(Ranged,EnemyDir,15)} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(20)} u.train(Worker,Up,4) for(Unit u){u.train(Light,EnemyDir,2)} for(Unit u){u.train(Ranged,EnemyDir,15)} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Up;4;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;4;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(20)} u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.idle() u.train(Light,Up,4)} for(Unit u){u.train(Ranged,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy) for(Unit u){u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Up;4;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;4;S;For_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(20)} u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.idle() u.train(Light,Up,4)} for(Unit u){u.train(Ranged,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Up;4;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Up;4;S;For_S;S;C;Train;Ranged;EnemyDir;15	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.attack(LessHealthy) for(Unit u){u.harvest(20)} u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} for(Unit u){u.idle() u.train(Light,Up,4)} for(Unit u){u.train(Ranged,EnemyDir,15)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;Harvest;4;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;C;Build;Barracks;Left;25;S;C;Attack;Closest	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.harvest(4)} u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25) u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;25;S;C;Harvest;15	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(LessHealthy)} else { u.train(Worker,Up,25)} u.harvest(15)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25) u.harvest(4) u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;Attack;MostHealthy;S;C;Build;Barracks;Right;7;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;10;S;For_S;S;C;Harvest;8	for(Unit u){if(u.is(Heavy)) then {u.attack(MostHealthy)} u.build(Barracks,Right,7) for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.harvest(8)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;Harvest;4;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.harvest(4)} u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25) u.harvest(4) u.attack(Closest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;Harvest;4;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;C;Train;Worker;Right;2;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;8;S;C;Attack;Closest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.harvest(4)} u.train(Heavy,EnemyDir,7) u.build(Barracks,Left,25) u.train(Worker,Right,2) if(u.canHarvest()) then {u.attack(Farthest) for(Unit u){u.harvest(8)}} u.attack(Closest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;Harvest;4;S;C;Train;Heavy;Right;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Train;Worker;Right;2;S;For_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;8;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.harvest(4)} u.train(Heavy,Right,3) u.build(Barracks,Left,25) u.train(Worker,Right,2) for(Unit u){u.train(Worker,Up,4)} if(u.canHarvest()) then {u.attack(Farthest) for(Unit u){u.harvest(8)}} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;C;Harvest;4;S;C;Train;Heavy;Right;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Train;Worker;Right;2;S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;C;Train;Ranged;Left;20;S;If_B_then_S;B;CanHarvest;S;C;Attack;Farthest;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Barracks,1)) then {u.harvest(4)} u.train(Heavy,Right,3) u.build(Barracks,Left,25) u.train(Worker,Right,2) for(Unit u){u.train(Worker,Up,4)} u.train(Ranged,Left,20) if(u.canHarvest()) then {u.attack(Farthest)} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;C;Build;Base;Up;6;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.harvest(9) u.build(Base,Up,6) for(Unit u){if(u.isBuilder()) then {u.harvest(2)} u.attack(Strongest)} u.moveToUnit(Enemy,Strongest) u.train(Worker,EnemyDir,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;EnemyDir;20;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,Weakest) u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.train(Worker,Up,2) for(Unit u){u.moveToUnit(Enemy,Farthest) u.train(Worker,EnemyDir,20)} for(Unit u){u.moveToUnit(Ally,Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Base;Down;15;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;7;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.build(Base,Down,15) u.harvest(3) u.moveToUnit(Enemy,Weakest) if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.attack(Closest) if(HasLessNumberOfUnits(Worker,7)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;50;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;6;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;15	for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.build(Barracks,EnemyDir,10)} else { u.harvest(50)} u.idle() u.train(Heavy,Left,6) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.harvest(15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;50;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;6;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.build(Barracks,EnemyDir,10)} else { u.harvest(50)} u.idle() u.train(Heavy,Left,6) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;6;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() u.train(Heavy,Left,6) u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Harvest;20	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Train;Ranged;Left;15;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.train(Ranged,Left,15)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Train;Ranged;Left;15;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.train(Ranged,Left,15)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;C;Harvest;8;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;9	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.build(Barracks,EnemyDir,25) for(Unit u){u.harvest(8)} for(Unit u){for(Unit u){u.train(Worker,Right,4)}}}} u.attack(MostHealthy) u.train(Ranged,Left,9)}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Train;Ranged;Up;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){u.moveAway() for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4)}} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,50) u.attack(Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){for(Unit u){u.attack(Closest)}}}}
S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;3	for(Unit u){u.attack(Closest) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Worker;EnemyDir;10;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Down,5) u.train(Worker,EnemyDir,10) u.harvest(3) u.build(Barracks,Down,15) u.idle() u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;C;Attack;Weakest;S;C;Harvest;50	for(Unit u){u.train(Worker,Left,25) if(HasNumberOfWorkersHarvesting(4)) then {u.attack(Weakest)} else { u.harvest(50)}}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Train;Worker;Down;4;S;C;Train;Ranged;Down;1;S;S_S;S;C;Build;Barracks;Left;100;S;C;Harvest;8;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,10) u.train(Light,EnemyDir,8) u.train(Worker,Down,4) u.train(Ranged,Down,1) u.build(Barracks,Left,100) u.harvest(8) u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Train;Worker;Down;4;S;C;Train;Heavy;Right;7;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,10) u.train(Light,EnemyDir,8) u.train(Worker,Down,4) u.train(Heavy,Right,7) u.harvest(1) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Train;Worker;Down;4;S;C;Train;Heavy;Right;7;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,10) u.train(Light,EnemyDir,8) u.train(Worker,Down,4) u.train(Heavy,Right,7) u.harvest(1) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;20;S;C;Harvest;6;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,3) u.idle() for(Unit u){u.train(Light,Left,20)} u.harvest(6) u.train(Worker,Left,4) u.attack(Strongest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Down;2;S;C;Train;Worker;Right;7;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;5;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Heavy;Up;20;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){u.idle()} u.harvest(3) u.train(Worker,Left,5) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) u.train(Ranged,Down,2) u.train(Worker,Right,7) if(HasLessNumberOfUnits(Ranged,5)) then {if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy)} else { e}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Heavy,Up,20)} if(u.HasUnitThatKillsInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,LessHealthy)}}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Ranged;Right;6;S;C;Train;Worker;Right;7;S;C;Harvest;7;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;5;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Heavy;Up;20;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;1;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){for(Unit u){u.harvest(1)} for(Unit u){u.idle()} u.train(Worker,Left,5) u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Right,6) u.train(Worker,Right,7) u.harvest(7) for(Unit u){u.harvest(6)} if(HasLessNumberOfUnits(Ranged,5)) then {if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy)} else { u.moveAway()}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Heavy,Up,20)} u.build(Barracks,EnemyDir,20) if(u.HasUnitThatKillsInOneAttack()) then {if(OpponentHasNumberOfUnits(Worker,1)) then {u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,LessHealthy)}}}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;4;S;S_S;S;C;Build;Barracks;Left;100;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,50) u.train(Light,EnemyDir,9) u.train(Ranged,Up,8) u.train(Worker,Down,4) u.build(Barracks,Left,100) u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;7;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;6;S;For_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Ranged;Down;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.harvest(20)} u.attack(Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.idle()}} u.train(Worker,Left,5) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,7) if(HaveQtdUnitsAttacking(6)) then {for(Unit u){u.harvest(4) u.moveToUnit(Enemy,Weakest)}} else { e} for(Unit u){u.train(Heavy,EnemyDir,20)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,EnemyDir,6)}} u.train(Ranged,Down,7) if(u.HasUnitThatKillsInOneAttack()) then {if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}} u.train(Worker,EnemyDir,15) u.moveToUnit(Enemy,Closest) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;15;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;8	for(Unit u){if(HasNumberOfUnits(Barracks,15)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(LessHealthy)} u.train(Worker,Left,8)}
S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;4;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;7;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;5;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;For_S;S;C;Train;Ranged;Down;10;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.harvest(20)} u.attack(Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.idle()}} u.train(Worker,Left,5) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,7) if(HasLessNumberOfUnits(Ranged,5)) then {if(u.isBuilder()) then {e} else { for(Unit u){u.train(Ranged,Down,10)}}} else { for(Unit u){for(Unit u){u.attack(LessHealthy)}}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,EnemyDir,6)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;8;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;C;Build;Barracks;Left;100;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,50) u.train(Light,EnemyDir,8) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,Left,100) u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;50;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;9;S;C;Attack;Closest;S;C;Idle;S;C;Attack;Weakest	for(Unit u){u.build(Base,EnemyDir,50) u.train(Light,Up,4) u.train(Ranged,Up,8) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(9)} else { u.attack(Closest)} u.idle() u.attack(Weakest)}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Right;25;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveAway	for(Unit u){u.build(Base,Up,10) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) u.train(Worker,Right,5) u.train(Ranged,Right,25) u.harvest(1) u.build(Barracks,EnemyDir,100) u.harvest(8) for(Unit u){u.idle()} u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveAway()}}}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Right;25;S;C;Train;Worker;Up;7;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;8;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,5)} u.train(Ranged,Right,25) u.train(Worker,Up,7) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(8) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Right;25;S;C;Train;Worker;Up;7;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,5)} u.train(Ranged,Right,25) u.train(Worker,Up,7) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Right;25;S;C;Train;Worker;Up;7;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,5)} u.train(Ranged,Right,25) u.train(Worker,Up,7) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Right;5;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Down;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Right,5)} u.train(Worker,Up,10) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;7;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Down;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;10	for(Unit u){u.build(Base,Up,10) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Right,7) u.train(Worker,Right,5) u.train(Worker,Up,10) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(10)}}}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Down;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;10	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Light,Right,3) u.train(Worker,Right,5) u.train(Heavy,Down,50) u.train(Worker,Up,10) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(10)}}}
S;For_S;S;S_S;S;C;Build;Base;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,10) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,LessHealthy)}} u.train(Light,Right,3) u.train(Worker,Right,5) u.train(Heavy,Down,50) u.train(Worker,Up,10) u.train(Ranged,Right,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Light;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Harvest;1;S;C;Attack;Farthest	for(Unit u){u.train(Light,Up,7) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Right,5) u.train(Heavy,Down,50) u.train(Worker,Up,10) u.train(Ranged,Right,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(1) u.attack(Farthest)}}}
S;For_S;S;S_S;S;C;Train;Light;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,7) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Right,5) u.train(Heavy,Down,50) u.train(Worker,Up,10) u.train(Ranged,Right,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.harvest(7) u.moveToUnit(Ally,Strongest)} u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;C;Train;Light;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Heavy;Down;50;S;C;Train;Worker;Up;10;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,7) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Right,5) u.train(Heavy,Down,50) u.train(Worker,Up,10) u.train(Ranged,Right,1) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy)} u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;C;Train;Light;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Down;50;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,7) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(15)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}} u.train(Worker,Right,5) u.train(Ranged,Down,50) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,8) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;C;Train;Light;Up;7;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Left;50;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,7) u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}} u.train(Heavy,Down,25) u.train(Worker,Right,5) u.train(Ranged,Left,50) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(8) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,8) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Left;50;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(8)) then {if(OpponentHasNumberOfUnits(Base,2)) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,LessHealthy)}}} u.train(Light,Right,3) u.train(Heavy,Down,25) u.train(Worker,Right,5) u.train(Ranged,Left,50) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(8) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.harvest(7) u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,8) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;1;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Farthest;S;C;Train;Light;Down;10	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Left,1) u.harvest(9) u.moveToUnit(Enemy,Strongest) u.attack(Farthest) u.train(Light,Down,10)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Up;50;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Train;Ranged;Left;1	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.moveToUnit(Ally,Strongest) for(Unit u){for(Unit u){u.harvest(15)}} for(Unit u){u.attack(Closest) u.train(Heavy,Up,50) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.train(Ranged,Left,1)}}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;C;Train;Ranged;Up;6;S;For_S;S;S_S;S;C;Train;Heavy;Up;50;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Train;Ranged;Left;1	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.moveToUnit(Ally,Strongest) for(Unit u){for(Unit u){u.harvest(20)}} for(Unit u){u.attack(Closest)} if(HaveQtdUnitsAttacking(2)) then {e} else { u.train(Ranged,Up,6)} for(Unit u){u.train(Heavy,Up,50) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.train(Ranged,Left,1)}}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;50;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;Train;Ranged;Left;20	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.moveToUnit(Ally,Strongest) for(Unit u){for(Unit u){for(Unit u){u.harvest(20)}}} for(Unit u){u.attack(Closest)} if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)} else { e} for(Unit u){for(Unit u){u.train(Heavy,Left,50) for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.train(Ranged,Left,20)}}}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;For_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;C;Train;Ranged;Up;6;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;For_S;S;C;Train;Heavy;Left;50	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} u.moveToUnit(Ally,Strongest) for(Unit u){for(Unit u){for(Unit u){u.harvest(20)}}} for(Unit u){u.attack(Closest)} if(HaveQtdUnitsAttacking(2)) then {e} else { u.train(Ranged,Up,6)} if(u.is(Heavy)) then {u.moveToUnit(Ally,LessHealthy)} else { e} for(Unit u){for(Unit u){u.train(Heavy,Left,50)}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;C;Train;Ranged;Up;6	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)} if(HaveQtdUnitsAttacking(2)) then {e} else { u.train(Ranged,Up,6)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;2;S;Empty;S;C;Train;Ranged;Up;6;S;For_S;S;For_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)} if(HaveQtdUnitsAttacking(2)) then {e} else { u.train(Ranged,Up,6)} for(Unit u){for(Unit u){u.train(Heavy,Left,50)}} for(Unit u){u.train(Worker,Right,3)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)} u.train(Ranged,EnemyDir,20) for(Unit u){u.train(Worker,Right,3)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Light;Up;10;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)} u.train(Light,Up,10) for(Unit u){u.train(Worker,Right,3)}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Light;Up;10;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;For_S;S;C;Train;Heavy;Down;6;S;For_S;S;C;Train;Worker;Right;3	for(Unit u){for(Unit u){u.build(Barracks,Right,2)} for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(Closest) u.moveToUnit(Ally,Strongest)} u.train(Light,Up,10) if(u.is(Heavy)) then {e} else { for(Unit u){u.train(Heavy,Down,6)}} for(Unit u){u.train(Worker,Right,3)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Harvest;7;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;25	for(Unit u){u.train(Ranged,Up,8) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,Left,100) u.harvest(7) u.idle() u.attack(Strongest) if(u.canAttack()) then {if(u.canHarvest()) then {for(Unit u){u.harvest(25)}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Worker;Up;4;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;C;Attack;MostHealthy;S;C;Train;Ranged;Up;15	for(Unit u){u.build(Barracks,Up,100) u.train(Worker,Up,4) u.harvest(10) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,6)} u.attack(MostHealthy) u.train(Ranged,Up,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Worker;Up;4;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;Empty;S;C;Idle;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;6;S;C;Train;Ranged;Left;50	for(Unit u){u.build(Barracks,Up,100) u.train(Worker,Up,4) u.harvest(10) u.attack(Closest) for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {e} else { u.idle()} u.idle()} for(Unit u){u.train(Heavy,Up,6)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;Harvest;10;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Heavy;Up;5;S;C;Train;Ranged;Left;50	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)}} u.harvest(10) u.attack(Strongest) for(Unit u){u.train(Heavy,Up,5)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;Empty;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;50	for(Unit u){u.build(Barracks,Up,100) u.train(Worker,Right,4) for(Unit u){u.idle()} u.harvest(10) for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {e} else { if(HaveQtdUnitsAttacking(6)) then {u.moveAway()}}} for(Unit u){u.train(Heavy,Up,6)} u.attack(MostHealthy) u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Worker;Right;4;S;S_S;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveAway;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;6;S;C;Train;Ranged;Left;50	for(Unit u){u.build(Barracks,Up,100) u.train(Worker,Right,4) u.harvest(20) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.moveAway()} u.idle()} for(Unit u){u.train(Heavy,Up,6)} u.train(Ranged,Left,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Idle;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;C;Train;Ranged;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Right,4) u.idle() u.harvest(10) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { u.idle()}} for(Unit u){u.train(Heavy,Up,6)} u.train(Ranged,Down,6) if(u.isBuilder()) then {for(Unit u){u.harvest(4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;C;Idle;S;C;Harvest;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Train;Ranged;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Right,4) u.idle() u.harvest(10) u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { if(u.is(Light)) then {e} else { u.idle()} u.idle()}} for(Unit u){u.train(Light,Down,2)} u.train(Ranged,Down,6) if(u.isBuilder()) then {for(Unit u){u.harvest(4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Worker;Right;4;S;C;Harvest;10;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Train;Ranged;Down;6;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;4	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Right,4) u.harvest(10) u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.attack(Farthest)} else { if(u.is(Light)) then {e} else { u.idle()} u.idle()}} for(Unit u){u.train(Light,Down,2)} u.train(Ranged,Down,6) if(u.isBuilder()) then {for(Unit u){u.harvest(4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Worker;Right;4;S;C;Harvest;10;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Idle;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;C;Train;Ranged;Down;6	for(Unit u){u.build(Barracks,Up,2) u.train(Worker,Right,4) u.harvest(10) u.attack(LessHealthy) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.attack(Farthest)} else { if(u.is(Light)) then {e} else { u.idle()} u.idle()}} for(Unit u){u.train(Light,Down,2)} u.train(Ranged,Down,6)}
S;For_S;S;S_S;S;C;Build;Base;EnemyDir;50;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;Empty;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){u.build(Base,EnemyDir,50) u.train(Light,Up,4) u.train(Ranged,Up,8) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) u.harvest(7) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { e} if(u.is(Worker)) then {e} else { u.moveToUnit(Enemy,Closest)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;Empty;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Up,8) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) u.harvest(7) if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { e} if(u.is(Worker)) then {e} else { u.moveToUnit(Enemy,Closest)} u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){u.train(Light,EnemyDir,25) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) u.harvest(7) u.idle() u.attack(MostHealthy)}
S;For_S;S;S_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;10;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Light,EnemyDir,25) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) u.harvest(10) u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;EnemyDir;25;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;2;S;C;Harvest;10;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Light,EnemyDir,25) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Down,6)} u.build(Barracks,EnemyDir,100) u.harvest(2) u.harvest(10) u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;2;S;C;Harvest;20;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Light,Right,25) u.train(Worker,Down,4) for(Unit u){u.train(Heavy,Down,6)} u.build(Barracks,EnemyDir,100) u.harvest(2) u.harvest(20) u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;2;S;C;Harvest;20;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest	for(Unit u){u.train(Light,Right,25) u.train(Worker,Up,4) for(Unit u){u.train(Heavy,Down,6)} u.build(Barracks,EnemyDir,100) u.harvest(2) u.harvest(20) u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)} u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Harvest;9;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest	for(Unit u){u.train(Light,Right,25) u.train(Worker,Up,4) u.idle() for(Unit u){for(Unit u){u.train(Heavy,Down,6)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.harvest(9)} u.build(Barracks,EnemyDir,100) u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Ranged;Left;6;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,4) u.idle() u.train(Ranged,Down,1) for(Unit u){for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) u.harvest(100) u.train(Ranged,Left,6) u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;Idle;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Heavy)) then {u.idle()} else { u.harvest(1)} u.train(Worker,Up,4) u.idle() u.train(Ranged,Down,1) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) u.harvest(9) u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Left;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(1) u.train(Worker,Up,4) u.idle() for(Unit u){u.train(Light,Left,9)} u.build(Barracks,EnemyDir,100) u.harvest(9) u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Heavy)) then {e} else { u.harvest(1)} u.train(Worker,Up,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) u.harvest(9) u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;4;S;Empty;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Heavy)) then {e} else { u.harvest(1)} u.train(Worker,Up,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){if(HasNumberOfWorkersHarvesting(4)) then {e} else { u.idle()}} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.is(Heavy)) then {e} else { u.harvest(1)} u.train(Worker,Up,4) u.idle() for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;1;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.is(Heavy)) then {e} else { u.harvest(1)} u.idle() u.train(Worker,Down,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Down,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.idle()} else { e} u.idle() u.train(Worker,Down,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { e} u.train(Worker,Down,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;C;Harvest;5;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Down,4) for(Unit u){u.train(Light,Left,9) for(Unit u){u.train(Heavy,Down,6)}} u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(5) u.attack(Closest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;100;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;8;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Down,4) u.train(Ranged,Right,1) for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,6)}} u.train(Ranged,Down,100) u.build(Barracks,EnemyDir,100) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.harvest(8) u.moveAway() u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,MostHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;6;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;4;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;100;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Down,4) u.train(Ranged,Right,1) for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,6)}} if(HasNumberOfWorkersHarvesting(4)) then {u.moveAway()} u.train(Ranged,Down,100) u.build(Barracks,EnemyDir,100) u.harvest(4) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.moveAway() u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,MostHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Up;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;C;Idle;S;Empty;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveAway;S;Empty;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Up,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6)} u.build(Barracks,EnemyDir,100) u.harvest(7) if(HasNumberOfWorkersHarvesting(5)) then {u.idle()} else { e} if(HaveQtdUnitsAttacking(1)) then {u.moveAway()} else { e} if(u.is(Worker)) then {e} else { u.moveToUnit(Enemy,Closest)} u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveAway;S;Empty;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) if(HaveQtdUnitsAttacking(3)) then {u.moveAway()} else { e} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)} if(u.is(Base)) then {e} else { u.moveAway()} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)} if(u.is(Base)) then {e} else { u.moveAway()} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.idle() u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Light;Up;4;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,Left,1) u.train(Light,Up,4) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;2;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Left;10;S;S_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;S_S;S;C;Harvest;15;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;10	for(Unit u){u.train(Ranged,Down,2) u.train(Worker,EnemyDir,2) u.build(Barracks,Left,10) u.train(Light,Down,20) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.harvest(15) u.attack(LessHealthy) u.train(Worker,Right,10)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Down,6) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Ranged,Left,1) u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) for(Unit u){u.idle()}} u.build(Barracks,EnemyDir,100) u.harvest(7) u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Left,1) u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.harvest(7) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.idle()}}} u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;C;Harvest;4;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,2) u.train(Ranged,Left,1) u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) u.harvest(4) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;C;Train;Ranged;Left;8;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;5;S;For_S;S;C;Attack;Farthest;S;Empty;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Light,Up,4) u.train(Ranged,Left,8) u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()}} else { for(Unit u){u.attack(Strongest)}}} u.build(Barracks,EnemyDir,100) u.harvest(7) if(HasNumberOfWorkersHarvesting(5)) then {for(Unit u){u.attack(Farthest)}} else { e} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;C;Train;Heavy;Left;7;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.build(Base,EnemyDir,10) u.train(Worker,Down,4) u.train(Heavy,Left,7) u.harvest(1) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.idle() u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,9) u.build(Base,EnemyDir,10) u.train(Heavy,Left,7) u.harvest(1) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.attack(Strongest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Ranged;Right;2;S;C;Train;Worker;Right;7;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Down;15;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Heavy;Right;15;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveAway()} for(Unit u){u.train(Heavy,Down,8)} u.harvest(4) u.train(Worker,Down,5) u.train(Ranged,Right,2) u.train(Worker,Right,7) u.moveAway() u.train(Ranged,Down,15) u.build(Barracks,EnemyDir,20) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Heavy,Right,15)} u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) u.train(Heavy,Left,7) for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,EnemyDir,100)} u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,EnemyDir,100)} u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;8;S;For_S;S;C;Build;Barracks;Down;20	for(Unit u){u.harvest(20) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle() u.train(Ranged,Up,8)} for(Unit u){u.build(Barracks,Down,20)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;25;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,Right,5) u.train(Ranged,Left,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(25) u.attack(LessHealthy)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,Right,25) u.train(Ranged,Left,9) u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} u.attack(Strongest)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,Right,25) u.train(Ranged,Left,9) u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} u.attack(Strongest)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Train;Light;EnemyDir;4;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Base;7;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle	for(Unit u){u.harvest(2) for(Unit u){u.build(Barracks,Right,15) u.train(Light,EnemyDir,4)} u.attack(Strongest) for(Unit u){u.train(Heavy,Left,2)} if(OpponentHasNumberOfUnits(Base,7)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Down;5;S;C;Harvest;1;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Attack;MostHealthy;S;C;Train;Heavy;Up;5;S;For_S;S;C;Build;Barracks;Left;2	for(Unit u){u.idle() for(Unit u){u.build(Base,Down,5)} u.harvest(1) u.train(Worker,Left,6) u.attack(MostHealthy) u.train(Heavy,Up,5) for(Unit u){u.build(Barracks,Left,2)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.train(Heavy,Left,10) u.build(Barracks,Right,25) u.train(Ranged,Left,9) u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} u.attack(Strongest)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,20) for(Unit u){u.train(Light,EnemyDir,3)} for(Unit u){u.idle()} u.harvest(20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;15;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,EnemyDir,25) u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Heavy,Down,15)} if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;C;Idle;S;C;Harvest;2;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Right,2)} for(Unit u){u.build(Barracks,Left,50)} u.train(Light,Right,3) u.train(Ranged,EnemyDir,50) u.idle() u.harvest(2) u.attack(MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,2)} for(Unit u){u.build(Barracks,Left,50)} u.train(Light,Right,3) u.train(Ranged,EnemyDir,50) u.idle() u.harvest(2) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Heavy;Left;5;S;C;Train;Heavy;EnemyDir;9;S;C;Idle;S;C;Train;Worker;Down;2;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Down;4	for(Unit u){u.build(Barracks,Down,50) u.harvest(9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Heavy,Left,5)} u.train(Heavy,EnemyDir,9) u.idle() u.train(Worker,Down,2) if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Closest)} u.attack(LessHealthy) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Down,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Train;Light;Up;20;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Left,100) u.train(Light,Up,20) u.harvest(10) u.attack(LessHealthy) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;10;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;Build;Barracks;Left;7;S;C;Train;Light;Up;3;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,Up,10) u.idle() for(Unit u){u.idle() u.harvest(3) u.harvest(7)} u.train(Worker,EnemyDir,9) for(Unit u){u.build(Barracks,Left,7)} u.train(Light,Up,3)} for(Unit u){u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Left;5;S;C;Train;Heavy;EnemyDir;9;S;C;Attack;Closest;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Down;4	for(Unit u){u.build(Barracks,Down,50) u.harvest(9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Worker,Left,5)} u.train(Heavy,EnemyDir,9) u.attack(Closest) if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,Closest)} u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Down,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Strongest;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;2;S;Empty;S;C;Train;Light;Up;7;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Strongest)} u.harvest(15) u.attack(Weakest) for(Unit u){if(HasLessNumberOfUnits(Barracks,2)) then {e} else { u.train(Light,Up,7)}} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.train(Worker,Up,4)} u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e}} u.train(Ranged,Down,100) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Strongest;S;C;Harvest;15;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;2;S;Empty;S;C;Train;Light;Up;7;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;For_S;S;C;Train;Worker;Up;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;Train;Ranged;Down;100;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Strongest)} u.harvest(15) u.attack(Closest) for(Unit u){if(HasLessNumberOfUnits(Barracks,2)) then {e} else { u.train(Light,Up,7)}} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,2)} for(Unit u){u.train(Worker,Up,4)} u.moveToUnit(Ally,Strongest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e}} u.train(Ranged,Down,100) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.train(Ranged,Right,5) u.train(Heavy,Left,10) u.idle() u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) u.harvest(7) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Ranged,Right,5) u.train(Heavy,Left,10) u.idle() u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.harvest(7) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;25;S;S_S;S;C;Train;Ranged;EnemyDir;9;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.train(Heavy,Left,10) u.idle() u.build(Barracks,Right,25) u.train(Ranged,EnemyDir,9) u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}}} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Strongest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;4;S;For_S;S;C;Build;Barracks;Left;2	for(Unit u){u.harvest(25) u.attack(Strongest) for(Unit u){u.idle()} u.train(Heavy,Left,4) for(Unit u){u.build(Barracks,Left,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Up;9;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Left;7;S;C;Train;Worker;Up;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(2)} u.build(Barracks,Up,9) u.attack(LessHealthy) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,Left,7)} u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;If_B_then_S_else_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Up;9;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;5	for(Unit u){u.idle() for(Unit u){u.train(Light,Up,5)} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { e} for(Unit u){u.harvest(2)} u.build(Barracks,Up,9) u.attack(LessHealthy) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Light,Left,7)} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Right,5) u.train(Heavy,Left,10) u.idle() u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) u.harvest(9) u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Left;4;S;S_S;S;C;Idle;S;C;Build;Barracks;Down;6;S;C;Harvest;25;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.train(Ranged,Left,4) u.idle() u.build(Barracks,Down,6) u.harvest(25) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Left;4;S;C;Build;Barracks;Down;4;S;C;Train;Light;Left;4;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveAway() for(Unit u){u.harvest(3)} u.train(Ranged,Left,4) u.build(Barracks,Down,4) u.train(Light,Left,4) u.train(Worker,EnemyDir,5) u.idle() u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;Train;Ranged;Left;4;S;S_S;S;C;Train;Light;Down;5;S;C;Build;Barracks;Down;4;S;C;Train;Light;Left;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.moveAway() for(Unit u){u.harvest(3)} u.train(Ranged,Left,4) u.train(Light,Down,5) u.build(Barracks,Down,4) u.train(Light,Left,6) u.harvest(7) u.train(Worker,EnemyDir,5) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;25;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Light,Down,6) u.build(Barracks,EnemyDir,100) u.harvest(25) if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;EnemyDir;9;S;C;Train;Worker;Down;2;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Down;4	for(Unit u){u.build(Barracks,Down,50) u.harvest(9) u.attack(MostHealthy) u.train(Heavy,EnemyDir,9) u.train(Worker,Down,2) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Down,4)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){u.idle()} for(Unit u){u.harvest(1) u.attack(Closest) for(Unit u){u.train(Worker,Down,50)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Right;100;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.idle() u.harvest(2) u.train(Worker,Right,100)} for(Unit u){if(HasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Enemy,Strongest)} else { u.attack(Weakest)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;C;Harvest;7;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Down;2	for(Unit u){u.train(Ranged,Right,5) u.train(Heavy,Left,10) u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.harvest(7) u.idle() u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} u.attack(Closest) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Light,Down,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Right;6;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Left;7;S;C;Train;Worker;Up;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(2)} u.build(Barracks,Right,6) u.attack(Strongest) for(Unit u){u.train(Light,Left,7)} u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Light;Up;20;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down;2	for(Unit u){u.idle() u.build(Barracks,EnemyDir,100) u.train(Light,Up,20) u.harvest(7) u.attack(Weakest) for(Unit u){u.train(Worker,Down,2)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Down,25) u.harvest(20) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} for(Unit u){u.harvest(7)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest) u.train(Light,Right,100)} u.moveToUnit(Enemy,Weakest)} if(OpponentHasNumberOfUnits(Heavy,3)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Left;5;S;C;Train;Heavy;EnemyDir;9;S;C;Train;Light;Right;7;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.harvest(9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() for(Unit u){u.harvest(20)}} else { u.train(Worker,Left,5)} u.train(Heavy,EnemyDir,9) u.train(Light,Right,7) if(u.canHarvest()) then {e} else { u.attack(Closest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Light;Down;6;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;20;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.train(Light,Down,6) u.build(Barracks,EnemyDir,100) u.harvest(4) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,20)} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest)} else { e}}
S;For_S;S;S_S;S;C;Train;Light;EnemyDir;1;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;20;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.train(Light,EnemyDir,1) u.build(Barracks,EnemyDir,100) u.harvest(4) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Right,20)} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;6;S;For_S;S;C;Train;Heavy;Right;20;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(4) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle() u.train(Light,Right,6)} for(Unit u){u.train(Heavy,Right,20)} if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest)} else { e}}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;C;Harvest;7;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;7;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Ranged,Right,5) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.harvest(7) u.idle() u.train(Worker,EnemyDir,7) for(Unit u){u.train(Heavy,Up,4)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;5;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Left;5	for(Unit u){u.train(Ranged,Left,5) u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Heavy,Up,5)}} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Ally,Farthest) u.train(Worker,Left,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;Build;Barracks;Up;9;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Left;7;S;C;Train;Worker;Down;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(4)} u.build(Barracks,Up,9) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,Left,7)} u.train(Worker,Down,5) u.moveToUnit(Enemy,Closest) u.moveAway()}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Harvest;7;S;S_S;S;C;Train;Light;Right;4;S;C;Train;Heavy;Right;5;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,3) u.train(Worker,Down,5) u.harvest(7) u.train(Light,Right,4) u.train(Heavy,Right,5) u.idle() u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;4;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;100;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.idle() u.build(Barracks,Right,4) u.harvest(7) u.attack(Weakest) u.train(Heavy,Down,100) u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Ranged,Right,5) u.train(Heavy,Left,10) u.train(Light,Up,15) u.idle() u.build(Barracks,EnemyDir,25) u.harvest(7) u.moveToUnit(Enemy,Closest) u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} u.attack(MostHealthy) if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Right;4;S;S_S;S;S_S;S;C;Train;Light;Up;15;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Train;Worker;EnemyDir;8;S;S_S;S;For_S;S;C;Train;Heavy;Up;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;3;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Ranged,Right,4) u.train(Light,Up,15) u.idle() u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)} u.harvest(7) u.moveToUnit(Enemy,Closest) u.attack(Weakest) for(Unit u){u.build(Barracks,Up,2)} u.train(Worker,EnemyDir,8) for(Unit u){u.train(Heavy,Up,4)} if(OpponentHasNumberOfUnits(Heavy,3)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;C;Train;Ranged;Left;5;S;S_S;S;C;Train;Light;Left;10;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;For_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;EnemyDir;6;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty	for(Unit u){u.train(Ranged,Left,5) u.train(Light,Left,10) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.harvest(7) u.moveAway() u.attack(Weakest) for(Unit u){u.harvest(2)} u.train(Worker,EnemyDir,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} else { e}}
S;For_S;S;S_S;S;C;Train;Heavy;Left;10;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;50;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.train(Heavy,Left,10) u.build(Barracks,EnemyDir,25) u.train(Ranged,Left,9) u.harvest(7) if(u.canAttack()) then {for(Unit u){u.train(Light,Up,1)} for(Unit u){u.attack(Closest)}} if(OpponentHasNumberOfUnits(Base,50)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Worker,EnemyDir,50)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;7;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;9;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,7)} u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.attack(MostHealthy)} u.train(Worker,Left,9)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.train(Worker,EnemyDir,50)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Heavy;Down;25;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,25) u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.attack(MostHealthy)}} u.train(Heavy,Down,25) u.moveToUnit(Enemy,Farthest) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Down;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,25) u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.attack(MostHealthy)}} if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Light,Down,50)}} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;7;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Down;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,7)} u.harvest(7) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.attack(MostHealthy)}} if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Light,Down,50)}} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest)}}
S;For_S;S;S_S;S;C;Train;Ranged;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;7;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;15;S;C;Idle;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;9;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Down;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Left,6) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,7)} u.harvest(7) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(15)} else { u.idle()}}} for(Unit u){u.attack(MostHealthy)} u.train(Worker,Left,9)} if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Light,Down,50)}} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Train;Light;Up;20;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;6	for(Unit u){u.build(Barracks,Left,100) u.train(Light,Up,20) u.harvest(2) u.attack(LessHealthy) for(Unit u){u.train(Worker,Left,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Train;Light;Up;20;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Left;6	for(Unit u){u.build(Barracks,Left,100) u.train(Light,Up,20) u.harvest(2) u.attack(Weakest) for(Unit u){u.train(Worker,Left,6)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;C;Train;Light;Up;20;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Left;6	for(Unit u){u.idle() u.build(Barracks,Left,100) u.train(Light,Up,20) u.harvest(2) u.attack(Weakest) for(Unit u){u.train(Worker,Left,6)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;Right;9;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;15;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Barracks,Right,9)}} u.idle() u.train(Light,EnemyDir,15)} for(Unit u){for(Unit u){u.attack(Weakest)}} u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;7;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Closest;S;C;Train;Light;Right;50;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(7) if(u.isBuilder()) then {for(Unit u){u.attack(Closest)}}} u.train(Light,Right,50) if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;Train;Light;Down;7;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) u.idle() u.harvest(3) u.train(Light,Down,7) u.train(Heavy,Up,25) u.train(Ranged,EnemyDir,6) if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Light;Down;7;S;C;Harvest;25;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} u.idle() u.harvest(3) u.train(Light,Down,7) u.harvest(25) u.train(Heavy,Up,25) u.train(Ranged,EnemyDir,6) if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;S_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} u.idle() if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}}} u.train(Light,Left,5) u.train(Heavy,Up,25) u.train(Ranged,EnemyDir,6) if(HasLessNumberOfUnits(Light,3)) then {u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;6;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,6)} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.train(Ranged,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Down;6;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) for(Unit u){u.train(Heavy,Down,6)} if(HaveQtdUnitsAttacking(5)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Ranged;EnemyDir;7;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,EnemyDir,4)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) if(HaveQtdUnitsAttacking(5)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.train(Heavy,Up,25) u.train(Ranged,EnemyDir,7) if(u.HasUnitInOpponentRange()) then {e} else { if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Enemy,Closest)} u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Up;25;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.train(Heavy,Up,25) u.train(Ranged,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) for(Unit u){u.train(Heavy,EnemyDir,6)}} for(Unit u){u.idle()} u.train(Light,Left,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6)} for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) u.train(Ranged,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Right;15;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Right,15)}} u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) u.train(Ranged,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.train(Worker,EnemyDir,5) if(u.HasUnitInOpponentRange()) then {if(u.isBuilder()) then {for(Unit u){u.attack(MostHealthy)}}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Right;15;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Left,6) u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Right,15)}} u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.train(Worker,EnemyDir,5) if(u.HasUnitInOpponentRange()) then {if(u.isBuilder()) then {for(Unit u){u.attack(MostHealthy)}}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;15;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;50;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Left,6) u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,15)}} u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) u.harvest(50) if(HasNumberOfWorkersHarvesting(10)) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {if(u.isBuilder()) then {for(Unit u){u.moveAway()}}} u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;15;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Left,6) u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,15)}} u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Worker;Right;15;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Harvest;50;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;For_S;S;C;MoveAway	for(Unit u){for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Down,6) u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Right,15)}} u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Weakest) u.harvest(50) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(7)) then {for(Unit u){u.moveAway()}}}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;For_S;S;C;MoveAway	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Down,6) u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)}} for(Unit u){u.idle()} u.train(Light,Left,8) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(7)) then {for(Unit u){u.moveAway()}}}}}
S;For_S;S;S_S;S;C;Train;Light;Right;15;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;For_S;S;C;MoveAway	for(Unit u){u.train(Light,Right,15) u.idle() for(Unit u){u.train(Heavy,Down,4)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6) u.attack(Weakest)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(7)) then {for(Unit u){u.moveAway()}}}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;MoveAway;S;S_S;S;C;Train;Ranged;Right;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.train(Heavy,Down,6) u.build(Barracks,EnemyDir,25) if(HasNumberOfUnits(Heavy,15)) then {u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(6) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} u.moveAway()} u.train(Ranged,Right,8) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;9;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(LessHealthy) for(Unit u){u.harvest(9)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.train(Ranged,EnemyDir,6) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(Weakest) for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;50;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,50)} if(u.canAttack()) then {u.harvest(7) u.attack(Weakest) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;4;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,4)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(4) u.attack(Weakest) u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(4) u.attack(Weakest) u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;is_Type;Worker;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(4) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {if(u.is(Worker)) then {u.moveAway()}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Left;15;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(4) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Left;15;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Worker;EnemyDir;50;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;EnemyDir;15;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Worker,EnemyDir,50)} for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(LessHealthy) for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(100)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,EnemyDir,15)} for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Light;Left;15;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){if(u.canHarvest()) then {u.harvest(1)} for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;Up;10;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.canHarvest()) then {u.harvest(1)} for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Weakest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} for(Unit u){u.train(Ranged,Up,10)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Farthest)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(MostHealthy) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;Train;Ranged;Right;15;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(MostHealthy) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.train(Ranged,Right,15)}} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.attack(Farthest) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,Closest)} for(Unit u){for(Unit u){u.idle()}} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;C;Train;Ranged;Up;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Up,7) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) if(u.canAttack()) then {u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Down;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) for(Unit u){u.train(Heavy,Down,8)} if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} if(u.canAttack()) then {u.harvest(10) u.attack(Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.idle()} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.train(Ranged,Down,15)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} if(u.canAttack()) then {u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} for(Unit u){u.build(Barracks,Down,1)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;C;Harvest;50;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.harvest(50) if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {u.moveAway() u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Strongest)} for(Unit u){u.train(Light,Down,2)} for(Unit u){u.build(Barracks,Down,1)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,50) if(u.canHarvest()) then {u.harvest(1)} u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Down;8	for(Unit u){u.build(Barracks,Down,50) if(u.canHarvest()) then {u.harvest(1)} u.attack(Closest) for(Unit u){u.train(Heavy,Down,8)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;4;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,50) if(u.canHarvest()) then {u.harvest(1)} if(u.is(Light)) then {u.moveToUnit(Enemy,LessHealthy)} u.idle() for(Unit u){u.train(Heavy,Down,4)} u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Light;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;4;S;C;Harvest;50;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;Up;9	for(Unit u){u.build(Barracks,Down,50) if(u.canHarvest()) then {u.harvest(1)} if(u.is(Light)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,LessHealthy)} u.idle() for(Unit u){u.train(Heavy,Right,4)} u.harvest(50) u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,Up,9)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Light;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;LessHealthy;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;4;S;C;Harvest;50;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.build(Barracks,Down,50) if(u.canHarvest()) then {u.harvest(1)} if(u.is(Light)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,LessHealthy)} if(u.is(Worker)) then {u.moveToUnit(Ally,LessHealthy)} u.idle() for(Unit u){u.train(Heavy,Right,4)} u.harvest(50) u.attack(LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Left,7) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,EnemyDir,9)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Train;Light;Down;25;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;1;S;If_B_then_S;B;is_Type;Light;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;MoveToUnit;Ally;LessHealthy;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Worker;EnemyDir;9	for(Unit u){u.build(Barracks,Down,50) u.train(Light,Down,25) if(u.canHarvest()) then {u.harvest(1)} if(u.is(Light)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.attack(Weakest)}} if(u.is(Worker)) then {u.moveToUnit(Ally,LessHealthy)} u.idle() for(Unit u){u.train(Heavy,Right,4)} u.attack(LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest) for(Unit u){u.idle()}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Worker,EnemyDir,9)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveAway;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Train;Heavy;Right;20;S;C;Idle	for(Unit u){for(Unit u){u.harvest(4)} if(u.isBuilder()) then {e} else { u.idle()} u.build(Barracks,EnemyDir,1) u.train(Worker,Right,7) if(u.HasUnitInOpponentRange()) then {u.moveAway()} u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Right,20) u.idle()}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Worker;Right;7;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.attack(Weakest) u.train(Worker,Right,7) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;50	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Weakest)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Weakest)}} else { u.train(Worker,Right,50)}}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;S_S;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;3	for(Unit u){u.harvest(2) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,10) u.moveToUnit(Ally,LessHealthy) u.moveAway() u.harvest(6) for(Unit u){u.build(Barracks,Up,4) u.idle()} u.attack(Farthest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;3	for(Unit u){u.harvest(4) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,10) u.moveToUnit(Ally,LessHealthy) u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,Up,4) u.idle()} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Up;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;3	for(Unit u){u.harvest(4) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Up,10) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Up,4) u.idle()} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;C;Train;Light;Right;100;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;4;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;3	for(Unit u){u.train(Light,Right,100) u.harvest(100) u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Up,4) u.idle()} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) u.train(Worker,Up,3)}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Train;Ranged;Up;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Up,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} if(u.canAttack()) then {u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;Down;50;S;S_S;S;S_S;S;C;Train;Ranged;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,Left,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Left,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveToUnit(Enemy,Farthest) if(u.canAttack()) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,MostHealthy) u.moveAway() for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(1)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Strongest)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Farthest;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.attack(Farthest)} if(u.canAttack()) then {u.moveAway() u.attack(Closest) for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;1;S;C;MoveAway;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Left,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){if(HasLessNumberOfUnits(Light,1)) then {u.moveAway()}} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveAway;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(HasNumberOfWorkersHarvesting(2)) then {u.moveAway()} u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveAway() u.attack(Weakest) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Base;Up;7;S;C;Attack;Strongest	for(Unit u){u.build(Base,Up,7) u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Down;10;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,10) u.moveToUnit(Enemy,Closest)}
S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;5;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;100;S;S_S;S;C;Train;Worker;EnemyDir;50;S;For_S;S;C;Harvest;1;S;For_S;S;C;Attack;Closest	for(Unit u){if(HasLessNumberOfUnits(Worker,5)) then {u.idle() u.harvest(100) u.train(Worker,EnemyDir,50) for(Unit u){u.harvest(1)}} else { for(Unit u){u.attack(Closest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;MoveAway;S;C;Train;Worker;Down;100;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Up;20	for(Unit u){u.harvest(2) u.moveToUnit(Enemy,Strongest) if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.moveAway()} u.train(Worker,Down,100) if(u.canAttack()) then {u.build(Base,Up,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;C;Train;Light;EnemyDir;100;S;C;Harvest;15	for(Unit u){u.build(Barracks,Left,20) u.idle() u.moveToUnit(Enemy,Closest) u.train(Heavy,EnemyDir,100) u.train(Light,EnemyDir,100) u.harvest(15)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;1;S;S_S;S;C;Build;Barracks;Down;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;6;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Left;20;S;For_S;S;C;MoveAway	for(Unit u){if(OpponentHasNumberOfUnits(Heavy,1)) then {u.build(Barracks,Down,25) u.moveToUnit(Enemy,Closest)} else { u.attack(Closest) for(Unit u){u.harvest(6)}} u.idle() u.train(Light,Left,20) for(Unit u){u.moveAway()}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Light;Up;50;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(15) u.train(Light,Up,50) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;Up;10;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;9;S;C;Train;Worker;Down;8;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.idle() u.moveAway() for(Unit u){u.harvest(6) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.build(Barracks,Up,10)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.harvest(9) u.train(Worker,Down,8) for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,10)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Train;Light;Up;50;S;C;Attack;Closest	for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(15) u.train(Light,Up,50) u.attack(Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Train;Light;Up;50;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.build(Barracks,Left,3)} for(Unit u){u.harvest(100) u.train(Light,Up,50) u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway() u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;100;S;For_S;S;C;Harvest;9;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Down,100) for(Unit u){u.harvest(9)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;Up;10;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;9;S;C;Train;Worker;Down;8;S;For_S;S;For_S;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.idle() u.moveAway() for(Unit u){u.harvest(6)} for(Unit u){u.build(Barracks,Up,10)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.harvest(9) u.train(Worker,Down,8) for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,10)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;Build;Base;Up;25;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveAway	for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,Weakest)} else { e} u.build(Base,Up,25) for(Unit u){u.idle()} u.harvest(20) u.train(Worker,Left,100) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Ranged;Down;10;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(4) for(Unit u){u.build(Barracks,EnemyDir,5)} u.attack(Strongest) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy) u.train(Ranged,Down,10) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;7;S;C;Harvest;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Light;EnemyDir;25;S;C;Train;Worker;Left;5	for(Unit u){for(Unit u){u.build(Barracks,Down,7) u.harvest(8)} for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)} u.train(Light,EnemyDir,25) u.train(Worker,Left,5)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Idle;S;C;Train;Worker;Up;8;S;C;Train;Heavy;Left;7;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(2) u.attack(LessHealthy) for(Unit u){u.train(Light,EnemyDir,4)} for(Unit u){u.build(Barracks,Left,9) u.idle() u.train(Worker,Up,8)} u.train(Heavy,Left,7) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Harvest;5;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Down;9;S;S_S;S;C;Train;Heavy;Right;2;S;C;Train;Ranged;EnemyDir;1	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.harvest(5) u.attack(Closest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest) u.train(Light,Down,9) u.train(Heavy,Right,2) u.train(Ranged,EnemyDir,1)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;For_S;S;C;Train;Heavy;Left;15;S;S_S;S;S_S;S;C;Harvest;8;S;C;Idle;S;S_S;S;C;Train;Light;Up;2;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Right,9) for(Unit u){u.train(Heavy,Left,15)} u.harvest(8) u.idle() u.train(Light,Up,2) u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;50;S;C;Train;Light;Left;6;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveAway	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.moveToUnit(Enemy,MostHealthy) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,LessHealthy)} else { u.train(Heavy,Right,50)} u.train(Light,Left,6) u.harvest(8) u.moveToUnit(Enemy,Closest) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Strongest)} u.moveAway()}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;C;Train;Heavy;Up;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} u.train(Heavy,Up,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Right;1;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Right;50;S;S_S;S;C;Train;Light;Right;6;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Farthest;S;For_S;S;C;Train;Heavy;Left;1	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Right,1)} else { e}} for(Unit u){u.harvest(4) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,LessHealthy)} else { u.train(Heavy,Right,50)} u.train(Light,Right,6) if(u.canAttack()) then {u.moveAway()} u.harvest(8) u.moveToUnit(Enemy,Closest) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Strongest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Farthest)} else { for(Unit u){u.train(Heavy,Left,1)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;C;Train;Light;Right;6;S;If_B_then_S;B;CanAttack;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;25;S;For_S;S;C;Train;Heavy;Up;15;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Harvest;4;S;C;Attack;Farthest	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.train(Light,Right,6) if(u.canAttack()) then {u.moveAway()} u.harvest(8) u.moveToUnit(Enemy,Closest) u.train(Ranged,Down,25) for(Unit u){u.train(Heavy,Up,15)} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(4)} u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;2;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;C;Train;Light;Right;3;S;C;MoveAway;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Ranged,Up,2) u.idle() u.build(Barracks,Right,9) u.harvest(8) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,2) u.train(Light,Right,3) u.moveAway() for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) for(Unit u){u.train(Light,Left,3)} u.harvest(3) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;2;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Ranged,Up,2) u.idle() u.build(Barracks,Right,9) u.harvest(8) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,20)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;EnemyDir;100;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)}}}} else { e} for(Unit u){for(Unit u){u.harvest(20)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.train(Ranged,EnemyDir,100) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;20;S;S_S;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;EnemyDir;100;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)}}}} else { e} for(Unit u){for(Unit u){u.harvest(20)}} for(Unit u){for(Unit u){u.attack(MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} else { e}}} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.train(Ranged,EnemyDir,100) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;5;S;C;Train;Light;Left;25;S;C;Harvest;8;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Up;9;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,Down,2) u.moveToUnit(Enemy,Weakest) u.build(Barracks,Up,50) for(Unit u){u.train(Light,Up,5) u.train(Light,Left,25) u.harvest(8) u.idle()} u.train(Worker,EnemyDir,7) u.attack(LessHealthy) for(Unit u){u.train(Worker,Up,9)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Worker;Right;100;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;C;Train;Light;Down;1;S;C;MoveToUnit;Enemy;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(OpponentHasNumberOfUnits(Light,25)) then {u.moveToUnit(Enemy,Closest)}} u.build(Barracks,EnemyDir,4) for(Unit u){u.attack(Closest)}} else { u.attack(Closest) if(u.isBuilder()) then {e} else { u.train(Worker,Right,100)} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){if(u.canHarvest()) then {e} else { u.attack(LessHealthy)}} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){u.train(Light,Down,1)} u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7)} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;15;S;C;Train;Heavy;Right;8;S;S_S;S;C;Harvest;6;S;C;Build;Barracks;Left;7;S;C;Train;Worker;EnemyDir;10;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Light,EnemyDir,15) u.train(Heavy,Right,8) u.harvest(6) u.build(Barracks,Left,7) u.train(Worker,EnemyDir,10)} for(Unit u){u.attack(Strongest)}
S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;3;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;15;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;25;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;4;S;C;Attack;Farthest;S;C;Train;Ranged;EnemyDir;10	if(OpponentHasNumberOfUnits(Light,3)) then {for(Unit u){u.train(Light,Right,15) u.idle() u.attack(MostHealthy)}} else { for(Unit u){for(Unit u){u.train(Heavy,Down,25)} u.idle() u.build(Barracks,EnemyDir,9) u.harvest(4) u.attack(Farthest) u.train(Ranged,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;25;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;4;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Attack;Weakest;S;Empty	for(Unit u){for(Unit u){u.train(Heavy,Down,25)} u.build(Barracks,EnemyDir,9) u.harvest(4) if(u.isBuilder()) then {for(Unit u){u.attack(Weakest)}} else { e}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;25;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Down,25)} if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.idle() u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;1	for(Unit u){u.idle() u.train(Worker,EnemyDir,2) u.build(Barracks,Down,9)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} if(u.is(Ranged)) then {for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Up,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Left,100)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,1)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;2;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;Left;6;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Left;100	for(Unit u){u.train(Ranged,Up,2) u.idle() u.build(Barracks,Right,9) u.harvest(8) u.train(Heavy,Left,6) u.attack(Closest) u.train(Light,Left,100)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;S_S;S;C;Train;Light;Right;15;S;C;Harvest;25	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.attack(Strongest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.is(Heavy)) then {u.moveToUnit(Enemy,Weakest)}}}} else { e} for(Unit u){u.train(Light,Right,15) u.harvest(25)}}
S;S_S;S;For_S;S;C;Train;Light;Up;15;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.train(Light,Up,15)} for(Unit u){u.build(Barracks,Right,9) u.idle() u.harvest(2) u.moveToUnit(Enemy,Weakest) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;4;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Ranged;Down;9;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;Down;4;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9)} for(Unit u){u.train(Light,Left,4) u.train(Heavy,EnemyDir,7) u.attack(Strongest) u.train(Ranged,Down,9) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.moveToUnit(Enemy,Weakest)} if(u.HasUnitInOpponentRange()) then {u.train(Worker,Down,4)} u.train(Worker,Right,3) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;2;S;Empty;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Up,50) if(u.canHarvest()) then {u.harvest(2)} else { e} for(Unit u){for(Unit u){u.idle()}}} for(Unit u){u.build(Barracks,Up,1)} for(Unit u){u.attack(Closest) u.train(Worker,Right,50)} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;C;Train;Ranged;Down;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9) u.train(Ranged,Down,1)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;EnemyDir;9;S;C;Train;Ranged;Down;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,EnemyDir,9) u.train(Ranged,Down,1)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;EnemyDir;1	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} u.moveToUnit(Ally,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Left,100)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.train(Ranged,EnemyDir,1)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;2;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;8;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;EnemyDir;1	for(Unit u){u.idle() u.train(Worker,EnemyDir,2) u.build(Barracks,Down,9)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Left,100)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfWorkersHarvesting(8)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.train(Ranged,EnemyDir,1)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Train;Heavy;Left;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(2)} u.train(Heavy,Left,8) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveAway()} for(Unit u){for(Unit u){u.harvest(20)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway() u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,1) u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} u.moveAway()}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;EnemyDir;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9)} for(Unit u){u.train(Ranged,Right,7)} for(Unit u){u.harvest(2) u.attack(Strongest) u.moveToUnit(Enemy,Closest) u.train(Light,EnemyDir,6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;2;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Left;4	for(Unit u){u.train(Light,Up,5)} for(Unit u){u.build(Barracks,Left,9) for(Unit u){u.idle()} u.harvest(2) u.train(Ranged,EnemyDir,50) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Left,4)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;C;Train;Heavy;Left;8;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(2)} u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(LessHealthy)} else { e}}} u.train(Heavy,Left,8) for(Unit u){for(Unit u){u.harvest(20)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Closest) u.train(Ranged,EnemyDir,1) u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;C;Train;Ranged;Down;1;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9) u.train(Ranged,Down,1)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy)}} u.train(Heavy,EnemyDir,15) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Train;Heavy;Down;7;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;3;S;C;Train;Ranged;Right;10;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Left;4;S;C;Attack;Farthest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.build(Barracks,Left,100) u.idle() u.harvest(2) u.moveToUnit(Enemy,Farthest) u.harvest(3) u.train(Ranged,Right,10) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Left,4) u.attack(Farthest) if(HasNumberOfWorkersHarvesting(15)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;4;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;20;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;2;S;For_S;S;C;Train;Light;EnemyDir;20;S;C;Train;Ranged;EnemyDir;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,5) if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(4)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)}}} u.train(Heavy,Left,8) for(Unit u){for(Unit u){u.harvest(20)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} if(OpponentHasNumberOfUnits(Worker,2)) then {for(Unit u){u.train(Light,EnemyDir,20)}} u.train(Ranged,EnemyDir,1) u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Right;25;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) for(Unit u){u.train(Ranged,EnemyDir,2)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Idle;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Left;100;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;2;S;C;Train;Ranged;EnemyDir;1;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Right;10	for(Unit u){u.train(Worker,EnemyDir,2) u.idle() u.build(Barracks,Down,9)} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.moveToUnit(Enemy,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Left,100)} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,2) u.train(Ranged,EnemyDir,1) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}} u.train(Light,Right,10)}
S;S_S;S;For_S;S;C;Train;Light;Up;25;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;4	for(Unit u){u.train(Light,Up,25)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,4)} u.harvest(2) u.attack(LessHealthy) u.train(Worker,Down,4)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;4;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Train;Light;Right;25;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;Train;Heavy;Left;8	for(Unit u){u.train(Worker,EnemyDir,5) if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(4)} u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Right,25) for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway()}}} u.train(Heavy,Left,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;2;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Ranged,Up,2) u.idle() u.build(Barracks,Right,9) u.harvest(8) u.moveToUnit(Enemy,Weakest) u.train(Light,Up,2) for(Unit u){u.train(Heavy,Down,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;25;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) u.build(Barracks,Down,9)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,8) for(Unit u){for(Unit u){u.attack(LessHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,25)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;C;Train;Heavy;Left;8;S;S_S;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) u.build(Barracks,Down,9)} for(Unit u){u.idle() u.harvest(5)} for(Unit u){u.train(Heavy,Left,8) for(Unit u){for(Unit u){u.attack(LessHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Strongest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Farthest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) for(Unit u){u.train(Heavy,EnemyDir,20)} u.build(Barracks,Down,9)} for(Unit u){u.idle() u.harvest(5)} for(Unit u){for(Unit u){if(u.isBuilder()) then {u.attack(Farthest)} else { e}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;7;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Farthest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) for(Unit u){u.train(Heavy,EnemyDir,20)} u.build(Barracks,Down,9)} for(Unit u){u.idle() u.harvest(5)} for(Unit u){u.train(Ranged,Down,7) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.isBuilder()) then {u.attack(Farthest)} else { e}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Ranged;Left;7;S;C;Harvest;5;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Farthest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) for(Unit u){u.train(Heavy,EnemyDir,20)} u.build(Barracks,Down,9)} for(Unit u){u.idle() for(Unit u){u.train(Ranged,Left,7)} u.harvest(5)} for(Unit u){if(u.canHarvest()) then {u.attack(MostHealthy)} else { e} for(Unit u){if(u.isBuilder()) then {u.attack(Farthest)} else { e}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;20;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) for(Unit u){u.train(Heavy,EnemyDir,20)} u.build(Barracks,Down,9)} for(Unit u){u.idle() u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Ranged,Left,20)} for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(4) for(Unit u){u.train(Heavy,EnemyDir,20)} u.build(Barracks,Down,9)} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Weakest)} else { u.idle()}} for(Unit u){u.harvest(15)} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;C;Idle;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.harvest(25)} for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){u.idle()}} u.build(Barracks,Down,9)} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.harvest(15)} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;C;Idle;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;For_S;S;C;Train;Ranged;Down;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(3) for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){u.idle()}} u.build(Barracks,Down,9)} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.harvest(15) for(Unit u){u.train(Ranged,Down,5)}} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;C;Idle;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,5) u.harvest(3) for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){u.idle()}} u.build(Barracks,Down,9)} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.train(Ranged,Left,50) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;Empty;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() u.train(Worker,EnemyDir,5) for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { e}}} u.build(Barracks,Down,9)} for(Unit u){if(u.is(Base)) then {u.moveToUnit(Enemy,Weakest)} else { e}} for(Unit u){u.train(Ranged,Left,50) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;Empty;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Ranged;Left;50;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.train(Worker,EnemyDir,5) for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { e}}} u.build(Barracks,Down,9) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Ranged,Left,50) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;4;S;Empty;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.train(Worker,EnemyDir,5) for(Unit u){u.train(Heavy,EnemyDir,20) for(Unit u){if(u.canAttack()) then {u.harvest(4)} else { e}}} u.build(Barracks,Down,9) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Heavy;Right;15;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.train(Worker,EnemyDir,5) u.harvest(3) for(Unit u){u.train(Heavy,Right,15)} u.build(Barracks,Down,9) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;C;Train;Ranged;Right;25;S;S_S;S;For_S;S;C;Train;Heavy;Right;15;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.train(Worker,EnemyDir,5) if(HasNumberOfUnits(Worker,5)) then {u.train(Ranged,Right,25)} for(Unit u){u.train(Heavy,Right,15)} u.build(Barracks,EnemyDir,9) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;5;S;C;Train;Ranged;Right;25;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){for(Unit u){u.harvest(1) u.idle()} u.train(Worker,EnemyDir,5) if(HasNumberOfUnits(Worker,5)) then {u.train(Ranged,Right,25)} for(Unit u){u.train(Heavy,Left,15) for(Unit u){u.harvest(3)}} u.build(Barracks,EnemyDir,9) u.harvest(15) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;4;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Weakest;S;C;Train;Ranged;EnemyDir;8;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Ranged,Down,4) u.idle() u.build(Barracks,Right,9) u.harvest(3) u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Weakest)} u.train(Ranged,EnemyDir,8) for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;4;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;EnemyDir;8;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Ranged,Up,4) u.idle() u.build(Barracks,Right,9) u.harvest(1) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Ranged,EnemyDir,8) for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.harvest(1) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Light,Up,2) for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;50;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;4;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(50)}} u.train(Light,Up,2) for(Unit u){u.idle()} u.train(Light,Left,4) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;4;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) u.train(Light,Up,2) for(Unit u){u.idle()} u.train(Light,Left,4) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Left;4;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) u.train(Light,Up,2) for(Unit u){u.idle()} u.train(Light,Left,4) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;C;Train;Ranged;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.build(Barracks,Right,9) u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) u.train(Ranged,Left,5) u.train(Light,Up,2) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;C;Train;Ranged;Left;5;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.build(Barracks,Right,9) u.harvest(3) u.attack(MostHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.train(Ranged,Left,5) u.train(Light,Up,2) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;9;S;C;Train;Ranged;Left;5;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.train(Ranged,Right,1) u.harvest(3) u.attack(MostHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,9) u.train(Ranged,Left,5) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Attack;Weakest;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.idle() u.build(Barracks,Right,9) u.train(Ranged,Right,1) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.attack(Weakest)} u.harvest(6) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Strongest)} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Harvest;15;S;For_S;S;C;Harvest;2;S;C;Train;Ranged;Left;1;S;S_S;S;S_S;S;C;Train;Light;Up;2;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(15) for(Unit u){u.harvest(2)}}} u.train(Ranged,Left,1) u.train(Light,Up,2) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;8;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;Harvest;15;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Light,Right,8) u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) u.moveToUnit(Enemy,Weakest) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(15) for(Unit u){u.harvest(2)}}} for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;8;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Light,Right,8) u.idle() u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,5) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){u.train(Light,Left,8) u.idle() u.build(Barracks,Right,9) u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.train(Light,Left,8) u.idle() u.build(Barracks,Right,9) u.harvest(50) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) for(Unit u){u.idle()} if(u.canHarvest()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;C;Build;Barracks;Right;9;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.train(Light,Left,8) u.idle() u.build(Barracks,Right,9) for(Unit u){u.idle()} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.idle() for(Unit u){u.idle()} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Down;9	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.idle() for(Unit u){u.idle()} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,9)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Down;9	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.idle() if(u.canHarvest()) then {u.harvest(50)} else { u.attack(MostHealthy)} for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,9)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.idle() if(u.canHarvest()) then {u.harvest(50)} else { u.attack(MostHealthy)} for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Train;Ranged;Up;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.train(Ranged,Up,15) if(u.canHarvest()) then {u.harvest(50)} else { u.moveAway()} for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Train;Ranged;Up;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Left,8) u.train(Ranged,Up,15) if(u.canHarvest()) then {u.harvest(50)} else { u.moveAway()} for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){if(HasNumberOfWorkersHarvesting(5)) then {u.moveAway()}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;Up;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) for(Unit u){u.idle()} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.train(Ranged,Up,8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;Left;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) for(Unit u){u.idle()} u.harvest(3) u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(25)) then {u.moveToUnit(Enemy,Strongest)}} u.train(Ranged,Left,8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.train(Light,EnemyDir,7) u.harvest(5) for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;EnemyDir;5;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.attack(LessHealthy) u.moveToUnit(Ally,LessHealthy) u.train(Worker,EnemyDir,5) if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Strongest)}}}} if(u.HasUnitWithinDistanceFromOpponent(7)) then {for(Unit u){u.attack(MostHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Strongest)}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Strongest)}} u.moveAway() u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(20)) then {u.moveToUnit(Enemy,Strongest)}} u.moveAway() u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.attack(MostHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.attack(Closest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;25;S;C;Harvest;5;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Light,Up,25) u.harvest(5) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Up;25;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Closest) u.train(Light,Up,25) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Up;25;S;For_S;S;C;Idle;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Closest) u.train(Light,Up,25) for(Unit u){u.idle()} u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.idle()} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.attack(Weakest) u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} u.idle()} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Right;20;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Light,Right,20)} u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;25;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.train(Light,Up,25) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;25;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Strongest) u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy)}} u.train(Light,Up,25) u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;25;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Strongest) u.attack(Weakest)} u.moveToUnit(Enemy,MostHealthy)}} u.train(Light,Up,25) u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Weakest;S;C;Attack;Strongest;S;C;Train;Light;Up;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,Strongest) u.attack(Weakest)} u.attack(Strongest)}} u.train(Light,Up,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;Weakest;S;C;Attack;Strongest;S;C;Train;Light;EnemyDir;25;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;100;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(Weakest)} u.attack(Strongest)}} u.train(Light,EnemyDir,25) for(Unit u){u.harvest(3)} if(HasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,LessHealthy)} if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Right,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;Train;Ranged;Left;8;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;25;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)} for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.train(Ranged,Left,8) u.train(Heavy,Down,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;Train;Ranged;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;Train;Heavy;Down;25;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Right;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)} for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.train(Ranged,Left,8) for(Unit u){u.train(Ranged,EnemyDir,6)} u.train(Heavy,Down,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Right,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Farthest;S;C;Train;Worker;Up;5	for(Unit u){u.harvest(2) u.attack(Farthest) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Left;3	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) u.attack(MostHealthy) for(Unit u){if(u.canAttack()) then {u.build(Base,Left,3)}}}
S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Down,5) for(Unit u){for(Unit u){u.attack(LessHealthy)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Down;3;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Down;5	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) u.harvest(25) for(Unit u){if(u.canAttack()) then {u.build(Base,Down,3)}}} for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Light,Down,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;4;S;S_S;S;C;Train;Worker;Right;8;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Heavy;Up;20;S;For_S;S;C;Build;Barracks;Down;4;S;C;Train;Light;Up;9	for(Unit u){u.idle() if(u.canHarvest()) then {u.harvest(4)} u.train(Worker,Right,8) u.attack(LessHealthy) u.train(Heavy,Up,20) for(Unit u){u.build(Barracks,Down,4)} u.train(Light,Up,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;EnemyDir;3;S;Empty;S;For_S;S;C;Build;Barracks;Left;25;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;Closest;S;C;Train;Light;EnemyDir;25;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,EnemyDir,3)} else { e} for(Unit u){u.build(Barracks,Left,25)} u.harvest(25) u.attack(Closest) u.train(Light,EnemyDir,25) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Down;3;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) u.harvest(25) for(Unit u){if(u.canAttack()) then {u.build(Base,Down,3)}} u.attack(Farthest) for(Unit u){u.idle()}} for(Unit u){u.train(Light,Down,5) if(u.is(Worker)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.train(Heavy,Up,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Base;EnemyDir;5;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) for(Unit u){if(u.isBuilder()) then {u.build(Base,EnemyDir,5)}} u.harvest(25) u.attack(MostHealthy) for(Unit u){u.idle()}} for(Unit u){u.train(Light,Down,5) if(u.is(Worker)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.train(Heavy,Up,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Down;15;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;0;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;6;S;S_S;S;C;Train;Worker;Left;25;S;C;Attack;MostHealthy;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.idle() for(Unit u){u.train(Ranged,Down,15)} if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Ally,Farthest)} else { u.harvest(6)} u.train(Worker,Left,25) u.attack(MostHealthy) for(Unit u){u.build(Barracks,Down,4)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;3;S;C;Train;Ranged;Left;50;S;C;Harvest;4;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Right,9) u.build(Barracks,Right,3) u.train(Ranged,Left,50) u.harvest(4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Up;10;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Left;2;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Train;Ranged;Left;4	for(Unit u){for(Unit u){u.build(Base,Up,10)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.attack(MostHealthy) u.train(Worker,Left,2) u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(2) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,6)}} for(Unit u){u.train(Ranged,Left,4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;2;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Ranged;Left;50;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,2) u.attack(LessHealthy) u.train(Ranged,Left,50) for(Unit u){u.build(Barracks,Down,15) u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;C;Build;Barracks;Down;1;S;C;Build;Barracks;EnemyDir;4;S;C;Train;Light;Down;50;S;C;Harvest;9;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,20) u.build(Barracks,Down,1) u.build(Barracks,EnemyDir,4) u.train(Light,Down,50) u.harvest(9) u.attack(Closest)}
S;S_S;S;For_S;S;C;Train;Worker;Up;9;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Right;7;S;S_S;S;C;Harvest;8;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.train(Worker,Up,9)} for(Unit u){u.build(Base,Right,7) u.harvest(8) u.build(Barracks,EnemyDir,6) u.attack(MostHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Light,Left,7)}}
S;S_S;S;For_S;S;C;Train;Ranged;Up;1;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Train;Ranged;Up;3;S;S_S;S;C;Harvest;6;S;C;MoveAway;S;For_S;S;S_S;S;C;Train;Light;Left;15;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Ranged,Up,1)} for(Unit u){u.build(Barracks,EnemyDir,5) u.train(Ranged,Up,3) u.harvest(6) u.moveAway()} for(Unit u){u.train(Light,Left,15) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;9;S;For_S;S;S_S;S;S_S;S;C;Build;Base;Right;7;S;S_S;S;C;Harvest;8;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.train(Worker,Up,9)} for(Unit u){u.build(Base,Right,7) u.harvest(8) u.build(Barracks,EnemyDir,6) u.attack(Closest) for(Unit u){u.train(Light,Left,7)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Right,5) u.harvest(25) u.moveToUnit(Enemy,Weakest) u.idle()} for(Unit u){u.train(Light,Right,5) u.moveToUnit(Enemy,Farthest) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Down;50;S;S_S;S;C;Build;Base;Up;2;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;2;S;C;Build;Barracks;Up;15;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Light,Down,50)} u.build(Base,Up,2) u.idle() u.train(Worker,Right,2) u.build(Barracks,Up,15) u.harvest(6) u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Build;Barracks;Down;100;S;C;Attack;Farthest;S;C;MoveAway;S;C;Train;Worker;Down;4;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Down,100) u.attack(Farthest)} u.moveAway() u.train(Worker,Down,4) for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;50;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Weakest;S;Empty;S;C;MoveAway;S;C;Train;Worker;Down;4;S;C;Harvest;6;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Heavy,Up,50) u.idle() if(u.HasUnitThatKillsInOneAttack()) then {if(u.is(Barracks)) then {for(Unit u){u.attack(Weakest)}} else { e}} u.moveAway() u.train(Worker,Down,4) u.harvest(6) u.attack(Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.build(Barracks,EnemyDir,6) u.train(Heavy,Up,6)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;C;Build;Barracks;Down;50;S;C;Train;Worker;Down;5;S;S_S;S;C;Harvest;25;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;C;Train;Ranged;Right;20	for(Unit u){if(u.canAttack()) then {u.idle()} u.build(Barracks,Down,50) u.train(Worker,Down,5) u.harvest(25) u.attack(LessHealthy) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Light,Right,5) u.train(Ranged,Right,20)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;Idle;S;C;Train;Light;Down;25;S;C;Harvest;15;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,3) for(Unit u){u.train(Heavy,Down,20) u.idle() u.train(Light,Down,25)} u.harvest(15) if(u.canAttack()) then {u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;20;S;S_S;S;C;Idle;S;C;Train;Light;Up;25;S;C;Harvest;20;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,3) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Heavy,Down,20) u.idle() u.train(Light,Up,25)} u.harvest(20) if(u.canAttack()) then {u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;MoveAway;S;C;Train;Worker;Down;4;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.idle() u.build(Barracks,Up,15) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveAway()} u.moveAway() u.train(Worker,Down,4) u.harvest(6) u.moveToUnit(Enemy,Weakest) u.attack(Farthest) for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Ranged,EnemyDir,6)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Weakest;S;Empty;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Left;25;S;C;Train;Worker;Right;4;S;C;Harvest;6;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Heavy;Left;3;S;C;Train;Heavy;Left;8;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Light,Down,8) for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {if(u.is(Barracks)) then {for(Unit u){u.attack(Weakest)}} else { e}} u.moveAway() u.build(Barracks,Left,25) u.train(Worker,Right,4) u.harvest(6) u.attack(Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Left,3)} u.train(Heavy,Left,8) for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Weakest;S;Empty;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;25;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Light,Down,8) u.idle() if(u.HasUnitThatKillsInOneAttack()) then {if(u.is(Barracks)) then {for(Unit u){u.attack(Weakest)}} else { e}} u.moveAway() if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Weakest)} else { u.build(Barracks,EnemyDir,25)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) u.harvest(6) u.moveToUnit(Ally,Farthest) u.attack(Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Left;25;S;C;Train;Worker;Down;4;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Light,Down,8) for(Unit u){u.idle()} u.moveAway() u.build(Barracks,Left,25) u.train(Worker,Down,4) u.attack(Strongest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Light;Down;7;S;C;Train;Light;Up;50;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;For_S;S;C;Train;Ranged;Left;4	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.train(Light,Down,7)} u.train(Light,Up,50) u.attack(Closest) for(Unit u){u.harvest(6) for(Unit u){u.build(Barracks,EnemyDir,6)}} for(Unit u){u.train(Ranged,Left,4)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Heavy;Right;20;S;S_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.build(Barracks,Down,3) u.train(Heavy,Right,20) u.harvest(25) u.moveToUnit(Enemy,Weakest) u.idle()} for(Unit u){u.train(Light,Right,5) for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Heavy;Right;20;S;S_S;S;S_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Right;5;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,Down,3) u.train(Heavy,Right,20) u.harvest(25) u.moveToUnit(Enemy,Weakest) u.idle()} for(Unit u){u.train(Light,Right,5) u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Up;3;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Right;10;S;C;Train;Worker;Right;3;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.build(Base,Up,3)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Right,10) u.train(Worker,Right,3) u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(6) u.idle() for(Unit u){u.build(Barracks,EnemyDir,6)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Barracks;Left;1;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;3;S;C;Harvest;10;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;C;Train;Worker;Right;10	for(Unit u){u.moveAway() if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Barracks,Left,1)}} u.attack(LessHealthy) for(Unit u){u.train(Light,Up,3) u.harvest(10)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { e} u.train(Worker,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Weakest;S;Empty;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;25;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Ranged;Right;6;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Light,Down,8) u.idle() if(u.HasUnitThatKillsInOneAttack()) then {if(u.is(Barracks)) then {for(Unit u){u.attack(Weakest)}} else { e}} u.moveAway() if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Weakest)} else { u.build(Barracks,EnemyDir,25)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) u.harvest(6) u.moveToUnit(Ally,Farthest) u.attack(Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Ranged,Right,6)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;50;S;C;Train;Heavy;Up;15;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(8) u.build(Barracks,EnemyDir,50) u.train(Heavy,Up,15) u.attack(MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} for(Unit u){u.train(Light,Left,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Weakest;S;Empty;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;25;S;C;Train;Worker;Down;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;6;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;20;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Light,Down,8) if(u.HasUnitThatKillsInOneAttack()) then {if(u.is(Barracks)) then {for(Unit u){u.attack(Weakest)}} else { e}} u.moveAway() if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Weakest)} else { u.build(Barracks,EnemyDir,25)} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) u.harvest(6) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Ranged,20)) then {u.moveToUnit(Ally,LessHealthy)} else { e} u.attack(Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,6)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;20;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Harvest;10;S;For_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,Right,20)} for(Unit u){u.train(Worker,Down,5) u.harvest(10)} for(Unit u){u.train(Light,Down,5) for(Unit u){u.idle() u.attack(MostHealthy) u.moveToUnit(Ally,Closest)} u.train(Heavy,Up,20)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;C;Harvest;10;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Heavy;Down;100	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) u.harvest(10)} for(Unit u){u.train(Light,EnemyDir,5) for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Closest)} u.train(Heavy,Down,100)}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;3;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;For_S;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Down;3;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Right,3)} u.build(Barracks,Down,3) u.train(Worker,Down,5) for(Unit u){u.train(Ranged,Down,10)} u.harvest(25) for(Unit u){if(u.canAttack()) then {u.build(Base,Down,3)}} u.attack(Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;100;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;50;S;C;MoveAway;S;C;Train;Worker;Down;4;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Up;9;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.idle() u.build(Barracks,Down,100) u.moveToUnit(Ally,Weakest) u.harvest(50) u.moveAway() u.train(Worker,Down,4) u.attack(Farthest) for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.train(Ranged,Up,9) for(Unit u){u.train(Heavy,Up,6)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;3;S;S_S;S;For_S;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Down;3;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,Down,3) for(Unit u){u.train(Ranged,Down,10)} u.harvest(25) for(Unit u){if(u.canAttack()) then {u.build(Base,Down,3)}} for(Unit u){u.idle()}} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;25;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,25) u.build(Barracks,Left,20) u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;7;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveAway;S;For_S;S;C;Build;Barracks;Up;20;S;C;MoveAway;S;C;Train;Worker;Down;4;S;C;Harvest;6;S;S_S;S;C;Attack;Farthest;S;For_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Ranged;Up;9;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {if(OpponentHasNumberOfUnits(Worker,7)) then {e} else { u.moveToUnit(Ally,Strongest) u.moveAway()} for(Unit u){u.build(Barracks,Up,20)}} u.moveAway() u.train(Worker,Down,4) u.harvest(6) u.attack(Farthest) for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy) u.train(Ranged,Up,9) for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;3;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Train;Worker;Down;4;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Ranged,Left,3) u.train(Light,Down,8) for(Unit u){u.idle()} u.build(Barracks,Down,20) u.train(Worker,Down,4) u.attack(Strongest) for(Unit u){u.harvest(3)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;EnemyDir;25;S;For_S;S;C;Harvest;1	for(Unit u){u.build(Barracks,Left,50) u.attack(Strongest) u.train(Worker,EnemyDir,25) for(Unit u){u.harvest(1)}}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Train;Worker;Right;20;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){u.idle() u.train(Ranged,EnemyDir,15) u.build(Barracks,EnemyDir,10) u.train(Worker,Right,20) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Right;1;S;S_S;S;C;Train;Worker;Down;50;S;C;Train;Light;EnemyDir;20;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(4) u.build(Barracks,Right,1)} u.train(Worker,Down,50) u.train(Light,EnemyDir,20) u.attack(Strongest)}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Harvest;3;S;C;Train;Light;Down;50;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Heavy,Up,9) u.train(Worker,EnemyDir,10) u.harvest(3) u.train(Light,Down,50) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;7;S;Empty;S;S_S;S;C;Build;Barracks;Down;100;S;C;Harvest;50;S;C;MoveAway;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Barracks;Left;25;S;C;Train;Worker;Down;4;S;C;Harvest;6;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {if(OpponentHasNumberOfUnits(Worker,7)) then {e} else { u.build(Barracks,Down,100) u.harvest(50)}} u.moveAway() u.moveToUnit(Enemy,Weakest) u.build(Barracks,Left,25) u.train(Worker,Down,4) u.harvest(6) u.attack(Farthest) for(Unit u){u.idle() u.harvest(3)} for(Unit u){u.train(Heavy,Up,6)}}
S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;4;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Harvest;3;S;C;Train;Light;Down;50;S;C;Attack;LessHealthy	for(Unit u){u.build(Barracks,EnemyDir,4)} for(Unit u){u.train(Heavy,Up,9) u.idle() u.train(Worker,EnemyDir,10) u.harvest(3) u.train(Light,Down,50) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;6;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Ranged,Right,4) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,EnemyDir,7)} u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Right,6) u.harvest(5)} for(Unit u){u.train(Worker,Right,25)} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;9;S;S_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Up;20;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;Train;Ranged;Down;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;5	for(Unit u){for(Unit u){u.build(Base,EnemyDir,9)} u.idle() if(u.canAttack()) then {u.harvest(7)} u.attack(Weakest) for(Unit u){u.harvest(1)} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Up,20) for(Unit u){u.build(Barracks,Down,4)} u.train(Ranged,Down,10) u.moveToUnit(Enemy,Strongest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;C;Train;Light;Right;10;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;8;S;C;Idle;S;S_S;S;C;Build;Base;Up;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Right,10) u.train(Worker,EnemyDir,8) u.idle() u.build(Base,Up,5) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.harvest(5)} u.build(Barracks,EnemyDir,7) u.harvest(50) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Up;7;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;50;S;C;Train;Worker;EnemyDir;15;S;C;Train;Light;Down;4	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Up,7)} else { u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) if(u.is(Ranged)) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Heavy,Right,50) u.train(Worker,EnemyDir,15) u.train(Light,Down,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;50;S;C;Train;Worker;EnemyDir;15;S;C;Train;Light;Down;4	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) if(u.is(Ranged)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Enemy,MostHealthy)} u.train(Heavy,Right,50) u.train(Worker,EnemyDir,15) u.train(Light,Down,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Weakest;S;C;Train;Heavy;Right;50;S;C;Train;Worker;EnemyDir;6;S;C;Train;Light;Down;4	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) u.train(Heavy,Right,50) u.train(Worker,EnemyDir,6) u.train(Light,Down,4)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;10;S;C;Train;Worker;EnemyDir;6	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;10;S;C;Train;Worker;EnemyDir;8	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {if(u.isBuilder()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,8)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Train;Worker;Down;5;S;S_S;S;S_S;S;C;Harvest;25;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;Down;3;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;Train;Light;Up;3	for(Unit u){u.build(Barracks,Down,3) u.train(Worker,Down,5) u.harvest(25) for(Unit u){if(u.canAttack()) then {u.build(Base,Down,3)}} u.attack(Closest) for(Unit u){u.idle()}} for(Unit u){if(u.is(Worker)) then {for(Unit u){u.moveToUnit(Ally,Closest)}} for(Unit u){u.train(Heavy,Left,10)} u.train(Light,Up,3)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.idle() for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {u.attack(MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.moveAway()} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;1;S;C;Attack;Closest;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Right;10;S;C;Train;Heavy;Right;50;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {for(Unit u){if(HasLessNumberOfUnits(Heavy,1)) then {u.attack(Closest)} else { u.attack(Weakest)}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Right,10)} u.train(Heavy,Right,50) u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Build;Barracks;Down;100;S;C;Harvest;50;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Down;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Train;Light;EnemyDir;9;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Down,100) u.harvest(50)} u.moveAway() u.moveToUnit(Enemy,Weakest) u.train(Worker,Down,4) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)} u.attack(Farthest) for(Unit u){u.idle() u.harvest(3)} u.train(Light,EnemyDir,9) for(Unit u){u.train(Heavy,Up,6)}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;15;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Heavy;Down;50;S;C;MoveAway;S;For_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){if(u.canAttack()) then {u.idle()}} u.harvest(15) if(u.is(Ranged)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Down,50) u.moveAway() for(Unit u){u.train(Worker,EnemyDir,2)} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Ranged;Right;20;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){if(u.canAttack()) then {u.idle()}} u.harvest(15) for(Unit u){u.train(Ranged,Right,20)} u.moveAway() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){if(u.canAttack()) then {u.idle()}} u.harvest(15) u.train(Heavy,Down,50) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;Train;Heavy;Right;50;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,25) for(Unit u){if(u.canAttack()) then {u.idle()}} u.harvest(6) u.train(Heavy,Right,50) u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;4;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){for(Unit u){u.train(Ranged,Right,4)} for(Unit u){u.train(Light,Right,1)} if(u.canAttack()) then {u.attack(MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle()}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.moveAway()} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,1)} if(u.canHarvest()) then {u.moveAway()} else { u.moveToUnit(Enemy,Strongest)} if(u.canAttack()) then {u.attack(MostHealthy) for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle() u.train(Ranged,Up,9)}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;9;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,1)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.idle() u.train(Ranged,Up,9)}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Down;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.idle() u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,1)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4)}}} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Down,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;1;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Down;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.idle() u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,1)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Down,10)} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Up;5;S;C;Attack;Closest;S;For_S;S;C;Build;Barracks;Down;7;S;For_S;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(2) u.idle() u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,8)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Up,5)} u.attack(Closest)} else { for(Unit u){u.build(Barracks,Down,7)}} for(Unit u){u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;3;S;S_S;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;20;S;C;Train;Worker;Down;4;S;C;Harvest;6;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Up;6	for(Unit u){u.train(Ranged,Left,3) u.train(Light,Down,8) for(Unit u){u.idle()} u.moveAway() for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,20) u.train(Worker,Down,4) u.harvest(6) u.attack(Strongest) for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Up,6)}}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;8;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Attack;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.build(Barracks,Left,9) u.harvest(100) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Closest) u.train(Light,Down,8)}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.attack(LessHealthy)} else { u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Right;8;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;100;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Down;25;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(2) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.attack(Closest) for(Unit u){u.train(Light,Right,8)} u.moveToUnit(Ally,Farthest) if(u.canHarvest()) then {for(Unit u){u.train(Light,EnemyDir,100)} for(Unit u){u.idle()}} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,25)}} u.train(Worker,EnemyDir,8) if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Light;Right;8;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;100;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Down;25;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.harvest(4) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.attack(Closest) for(Unit u){u.train(Light,Right,8)} if(u.canHarvest()) then {for(Unit u){u.train(Light,EnemyDir,100)} for(Unit u){u.idle()}} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,25)}} u.train(Worker,EnemyDir,8) if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;8;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Down;25;S;C;Train;Worker;EnemyDir;8;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} u.harvest(4) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.attack(LessHealthy) for(Unit u){u.train(Light,Right,8)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,25)}} u.train(Worker,EnemyDir,8) if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;Empty;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;Right;5;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;20;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) if(HasNumberOfWorkersHarvesting(6)) then {e} else { u.attack(LessHealthy)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Right,5) u.harvest(8)}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(20)} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;Empty;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;Right;5;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;20;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) if(HasNumberOfWorkersHarvesting(6)) then {e} else { u.attack(LessHealthy)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.harvest(4) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Right,5) u.harvest(8)}}} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,MostHealthy)} u.attack(Weakest) for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(20)} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Heavy;Down;50;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.attack(Closest)} u.train(Heavy,Down,50)}}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Ally,MostHealthy) if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.attack(Closest)}}} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Ally,MostHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Ally,MostHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Strongest)}} if(u.HasUnitThatKillsInOneAttack()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Farthest)}} u.train(Light,Right,50) for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveAway;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Strongest) u.attack(Weakest) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveAway()}}} if(u.HasUnitThatKillsInOneAttack()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Farthest)}} u.train(Light,Right,50) for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(u.isBuilder()) then {u.moveAway()} else { e}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;50;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;C;Harvest;20;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;5	for(Unit u){for(Unit u){u.harvest(5)} u.moveToUnit(Ally,Strongest) u.attack(Weakest) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveAway()}}} if(u.HasUnitThatKillsInOneAttack()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Farthest)}} u.train(Light,Right,50) for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){u.harvest(20)}}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;0;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Light;Right;1;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;1;S;C;Train;Heavy;Right;50;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;1;S;If_B_then_S_else_S;B;CanAttack;S;C;Harvest;20;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(0)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Right,1)} if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} if(u.canAttack()) then {for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.idle() u.train(Ranged,Up,1)}}} u.train(Heavy,Right,50) for(Unit u){u.build(Barracks,Down,1) if(u.canAttack()) then {u.harvest(20)} else { u.moveToUnit(Ally,Strongest)}} u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;5;S;For_S;S;C;Train;Light;Down;1;S;C;Harvest;25;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Left;8;S;C;Build;Barracks;Down;1	for(Unit u){u.train(Ranged,Down,5) for(Unit u){u.train(Light,Down,1)} u.harvest(25) u.attack(Closest) for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,8) u.build(Barracks,Down,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Heavy;Up;8;S;C;Build;Barracks;Up;1	for(Unit u){u.harvest(20) u.idle() u.attack(Strongest) for(Unit u){u.train(Heavy,Up,8) u.build(Barracks,Up,1)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;7;S;C;Build;Barracks;EnemyDir;1	for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()} u.harvest(20) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.train(Heavy,Down,7) u.build(Barracks,EnemyDir,1)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;1	for(Unit u){if(u.canAttack()) then {for(Unit u){u.idle()} u.harvest(5) for(Unit u){u.train(Heavy,EnemyDir,50)} u.moveToUnit(Ally,Strongest) for(Unit u){u.attack(Weakest)}} for(Unit u){u.idle() u.build(Barracks,EnemyDir,1)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;Empty;S;C;Build;Barracks;Left;100;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Down,20)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { e} u.build(Barracks,Left,100)} for(Unit u){u.harvest(9) u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;Empty;S;S_S;S;C;Build;Barracks;Left;100;S;C;Harvest;6;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;MostHealthy	for(Unit u){u.train(Light,Down,20)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { e} u.build(Barracks,Left,100) u.harvest(6)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}} else { e} u.moveToUnit(Enemy,Closest) u.attack(MostHealthy)}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;Empty;S;C;Build;Barracks;Left;100;S;For_S;S;S_S;S;C;Harvest;9;S;C;Attack;Strongest	for(Unit u){u.train(Light,Down,20)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} else { e} u.build(Barracks,Left,100)} for(Unit u){u.harvest(9) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;20;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.harvest(100) for(Unit u){u.idle() u.build(Barracks,EnemyDir,20)} u.attack(MostHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy	for(Unit u){u.train(Light,Down,20)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(9) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Left;10;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,10) u.train(Worker,Right,3) for(Unit u){u.harvest(6) for(Unit u){u.build(Barracks,EnemyDir,6)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;Left;10;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.isBuilder()) then {for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} else { u.attack(MostHealthy)}}} u.train(Light,Left,10) u.train(Worker,Right,3) for(Unit u){u.harvest(6) for(Unit u){u.build(Barracks,EnemyDir,6)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;15;S;For_S;S;C;MoveAway;S;For_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Light,Up,15)} for(Unit u){u.moveAway()} for(Unit u){u.harvest(6) for(Unit u){u.build(Barracks,EnemyDir,6)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Left;10;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;2;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} u.train(Light,Left,10) u.train(Worker,Right,3) for(Unit u){for(Unit u){u.train(Ranged,Right,2)} u.harvest(6) for(Unit u){u.build(Barracks,EnemyDir,6)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;15;S;For_S;S;C;Train;Ranged;Right;4;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;Build;Barracks;Down;7;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Heavy;Right;50;S;C;Train;Light;Down;4	for(Unit u){u.train(Worker,Left,15) for(Unit u){u.train(Ranged,Right,4)} u.idle() for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {u.build(Barracks,Down,7)} else { u.moveToUnit(Ally,Strongest)} u.attack(Weakest) if(u.is(Ranged)) then {if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,MostHealthy)} u.train(Heavy,Right,50) u.train(Light,Down,4)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;1;S;C;Train;Worker;EnemyDir;9;S;S_S;S;C;Train;Ranged;Right;6;S;S_S;S;C;Harvest;3;S;C;Train;Light;EnemyDir;5;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,6)} u.train(Heavy,Down,1) u.train(Worker,EnemyDir,9) u.train(Ranged,Right,6) u.harvest(3) u.train(Light,EnemyDir,5) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Light;Left;5;S;C;Attack;Weakest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,9) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,Left,5)} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Train;Heavy;Up;100;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Ranged;Right;20;S;For_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,EnemyDir,2) u.train(Heavy,Up,100) u.harvest(8) u.train(Ranged,Right,20) for(Unit u){u.idle()} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Train;Heavy;Right;5;S;S_S;S;S_S;S;C;Train;Worker;Down;2;S;C;Harvest;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,3) u.train(Heavy,Right,5) u.train(Worker,Down,2) u.harvest(10) u.moveToUnit(Enemy,Strongest) u.idle()}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Light;Right;4;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Up;8;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,1) u.train(Light,Right,4) u.harvest(100) u.attack(MostHealthy) u.train(Light,Up,8) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Light;Up;50;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;C;Harvest;8;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;20	for(Unit u){u.train(Light,Up,50) u.harvest(7) u.build(Barracks,Right,1) u.harvest(8) u.attack(Strongest) u.train(Worker,Left,20)}
S;For_S;S;S_S;S;C;Train;Light;Up;50;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Build;Barracks;Right;1;S;S_S;S;C;Harvest;8;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;20	for(Unit u){u.train(Light,Up,50) u.harvest(7) u.build(Barracks,Right,1) u.harvest(8) u.idle() u.attack(Strongest) u.train(Worker,Left,20)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;C;Harvest;4;S;C;Train;Light;Right;3;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveAway;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;100	for(Unit u){u.train(Worker,Down,9) u.harvest(4) u.train(Light,Right,3)} for(Unit u){u.harvest(8) u.moveAway() u.build(Barracks,Left,6) u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Ranged,Left,100)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Left;7	for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,Left,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveAway;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveAway()} u.harvest(7) u.train(Worker,EnemyDir,7) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Up,7)}} u.train(Ranged,EnemyDir,15) u.idle() u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;7;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(7) u.train(Worker,EnemyDir,7) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,EnemyDir,7)}} u.train(Ranged,EnemyDir,15) u.idle() u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;7;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;C;Idle;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(7) u.train(Worker,EnemyDir,7) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,EnemyDir,7)}} u.train(Ranged,EnemyDir,15) u.idle() u.moveAway() u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;9;S;C;Train;Light;Right;3;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;5;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Ranged;Left;100;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Worker,Down,9) u.train(Light,Right,3)} for(Unit u){u.train(Heavy,Right,5) u.harvest(6) u.moveToUnit(Enemy,Farthest) u.build(Barracks,Left,6) u.harvest(7) u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Ranged,Left,100) u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Train;Light;Right;3;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Right;5;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Build;Barracks;Left;7;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;5;S;C;Train;Ranged;Left;100	for(Unit u){u.train(Worker,EnemyDir,9) u.train(Light,Right,3)} for(Unit u){u.idle() u.harvest(7) u.train(Heavy,Right,5) u.moveToUnit(Enemy,Farthest) u.build(Barracks,Left,7) u.attack(LessHealthy) for(Unit u){u.harvest(5)} u.train(Ranged,Left,100)}
S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){u.attack(MostHealthy)} if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Ally,Weakest)} else { e} u.train(Worker,Down,4) u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5)} for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Worker;Up;50;S;C;Attack;Closest	for(Unit u){u.harvest(2) for(Unit u){u.train(Worker,Up,50)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){if(u.canHarvest()) then {u.idle()}}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Down;8;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,8)} u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;20;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Base;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,20) u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfUnits(Base,20)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Right;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){if(u.canHarvest()) then {u.harvest(2)}} for(Unit u){u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Right,7) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;9;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.idle() u.train(Worker,Up,9)}} for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;2;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Barracks,2)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}} else { e} u.train(Worker,Left,20) for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Attack;Farthest;S;C;Train;Worker;Down;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(Farthest)} u.train(Worker,Down,20) for(Unit u){u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;8;S;C;Idle;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,8) u.idle()} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Left;20;S;If_B_then_S;B;HasNumberOfUnits;Worker;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.harvest(50) u.attack(Closest) u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Left,20) if(HasNumberOfUnits(Worker,15)) then {u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Right;100;S;C;MoveAway;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Train;Worker;Down;7;S;C;Harvest;9;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Left;15;S;Empty	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(3)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Right,100)} u.moveAway() u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,7) u.harvest(9) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Left,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Left;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} u.moveAway() for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Left,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} u.moveAway() for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;7;S;For_S;S;C;Harvest;25;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasNumberOfUnits(Light,7)) then {for(Unit u){u.harvest(25)}} u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Closest)}} else { u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;7;S;For_S;S;C;Harvest;25;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;For_S;S;C;Harvest;9;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;20;S;Empty;S;C;Attack;Closest	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){if(HasNumberOfUnits(Light,7)) then {for(Unit u){u.harvest(25)}} u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,20)} else { e} u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;C;Idle;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;C;Harvest;6;S;C;Build;Barracks;Left;100;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,25) u.idle() if(HasNumberOfUnits(Worker,2)) then {u.harvest(6)}} u.build(Barracks,Left,100)} for(Unit u){u.moveToUnit(Enemy,Farthest) u.attack(Strongest)}
S;S_S;S;For_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;C;Idle;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;C;Harvest;6;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Right,25) u.idle() if(HasNumberOfUnits(Worker,2)) then {u.harvest(6)}}} for(Unit u){u.moveToUnit(Enemy,Farthest) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;25;S;C;Idle;S;If_B_then_S;B;HasNumberOfUnits;Worker;2;S;C;Harvest;6;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Down;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Ranged;Up;7	for(Unit u){u.train(Worker,Right,25) u.idle() if(HasNumberOfUnits(Worker,2)) then {u.harvest(6)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Down,1)} u.attack(LessHealthy) u.train(Ranged,Up,7)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;7;S;C;Build;Barracks;Up;2;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(7) u.build(Barracks,Up,2)}} for(Unit u){for(Unit u){u.harvest(9)} u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Up,2)} for(Unit u){u.harvest(20)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;8	for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,8)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;2;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Up;10	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(LessHealthy)}}} u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.harvest(2)} for(Unit u){u.harvest(3)}} for(Unit u){u.attack(Strongest)} u.train(Worker,Left,2) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}} if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Up,10)}}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;2;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Worker;Up;10	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(3)}} for(Unit u){u.attack(Strongest)} u.train(Worker,Left,2) for(Unit u){u.moveToUnit(Enemy,Weakest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Up,10)}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;5;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){for(Unit u){u.harvest(1)}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){for(Unit u){u.idle()}} u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Ranged,Right,5) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Right;5;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;3	for(Unit u){for(Unit u){u.harvest(1)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Ranged,Right,5) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Ally,MostHealthy)} u.train(Light,Right,3)}
S;For_S;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Left;5;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;3	for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,Up,1)}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Ranged,Left,5) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Right,3)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,2) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,2) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,2) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Left;5	for(Unit u){u.idle() u.attack(MostHealthy) for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(100) u.idle()} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Left,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;5	for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle() for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) for(Unit u){u.harvest(100)} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;5	for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle() for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest) u.attack(Farthest) for(Unit u){u.harvest(100)} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Right,5)}
S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(5)} for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,Up,20) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;50;S;If_B_then_S;B;HasNumberOfUnits;Ranged;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4) u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,50)} if(HasNumberOfUnits(Ranged,20)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;Harvest;25;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;50	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,2) u.attack(LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Light,Right,7)} u.harvest(25)}}} for(Unit u){u.attack(Weakest) u.train(Worker,Right,50)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;C;Idle;S;C;Harvest;25;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;50	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,2) u.attack(Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Light,Up,20) u.idle()} u.harvest(25)}}} for(Unit u){u.attack(Weakest) u.train(Worker,Right,50)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;10;S;C;Train;Heavy;Left;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Right;20;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;Train;Ranged;Right;9	for(Unit u){u.idle()} for(Unit u){u.harvest(10) u.train(Heavy,Left,4)} for(Unit u){u.train(Worker,Left,50) if(u.isBuilder()) then {e} else { u.attack(Closest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Right,20)} u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.train(Ranged,Right,9)}
S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.attack(LessHealthy)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;Harvest;3;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,25) u.harvest(3) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,MostHealthy)} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Up,25) u.harvest(6) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Weakest;S;C;Train;Worker;Right;50;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,7) for(Unit u){u.harvest(6) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Closest)} u.attack(Weakest)} u.train(Worker,Right,50)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Light;Up;8;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Train;Heavy;Up;20;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(3)}} else { u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,5) u.train(Light,Up,8) u.build(Barracks,Left,15) u.train(Heavy,Up,20) u.idle() if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Up;4;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Light;Up;8;S;S_S;S;C;Build;Barracks;Left;15;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(3)}} else { u.train(Heavy,Up,4) u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,5) u.train(Light,Up,8) u.build(Barracks,Left,15) u.idle() if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.moveToUnit(Ally,Weakest) if(u.canHarvest()) then {u.moveToUnit(Ally,Closest)} u.train(Worker,EnemyDir,9) for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;is_Type;Worker;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Train;Worker;Down;20;S;For_S;S;C;Harvest;9	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Closest) if(u.is(Worker)) then {for(Unit u){u.attack(LessHealthy)}} u.train(Worker,Down,10) for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,Down,20)} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;7;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Build;Barracks;Right;10;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;4;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(2)} if(u.canAttack()) then {u.harvest(7)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Right,10)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4)}} u.moveToUnit(Ally,Weakest) u.train(Worker,Up,6) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;10;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;4;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(2)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10)} u.moveToUnit(Ally,MostHealthy) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4)}} u.moveToUnit(Ally,Weakest) u.train(Worker,Up,6) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;C;Harvest;6;S;C;Attack;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;10;S;C;MoveAway;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Left;9;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.isBuilder()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)} else { u.harvest(6)}} u.attack(Weakest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10)} u.moveAway() if(u.isBuilder()) then {e} else { u.train(Heavy,Left,9)} u.train(Worker,Up,6) u.attack(Farthest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.moveToUnit(Enemy,LessHealthy)} u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;2;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Heavy;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;10;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Left;9;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;C;Harvest;6	for(Unit u){if(OpponentHasNumberOfUnits(Light,2)) then {u.attack(LessHealthy)} u.attack(Farthest) u.train(Heavy,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} if(u.isBuilder()) then {e} else { u.train(Heavy,Left,9)} u.train(Worker,Up,6) u.train(Light,Right,5) for(Unit u){u.harvest(6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Heavy;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;10;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Farthest) u.train(Heavy,Up,2) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10) u.harvest(1)} for(Unit u){for(Unit u){u.harvest(8) u.attack(MostHealthy)}} u.moveToUnit(Ally,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10) u.harvest(20)} for(Unit u){for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(20)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;15;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Right;5	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(20)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)} if(u.canAttack()) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,15) u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;2	for(Unit u){u.harvest(8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){for(Unit u){u.attack(LessHealthy)}}}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { for(Unit u){u.train(Worker,EnemyDir,2)}}}
S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;5;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;9	for(Unit u){if(HasNumberOfUnits(Heavy,5)) then {u.moveToUnit(Ally,LessHealthy)}} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;9;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;50;S;C;Attack;Farthest;S;C;Train;Worker;Right;100	for(Unit u){u.harvest(2) for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(9)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)} else { e}} if(HaveQtdUnitsAttacking(2)) then {u.moveToUnit(Ally,Weakest)} u.harvest(50) u.attack(Farthest) u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;8;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.harvest(8)} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;Empty;S;C;Harvest;5;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)} else { e} u.harvest(5)} u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Down;100;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Down,100)} u.attack(Closest) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Down;100;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;1;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Down,100)} u.attack(Closest) u.train(Worker,EnemyDir,1) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Up;100;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Up,100)} u.attack(Closest) u.train(Worker,Right,4) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;C;Build;Barracks;Up;100;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,Up,5)} u.build(Barracks,Up,100)} u.attack(Strongest) u.train(Worker,Right,4) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Train;Worker;Left;8	for(Unit u){u.attack(Closest)} for(Unit u){for(Unit u){u.train(Worker,Left,8)}}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Attack;LessHealthy;S;For_S;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(1)} u.attack(LessHealthy)} for(Unit u){for(Unit u){u.train(Worker,Left,25)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Harvest;10;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(10) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Left,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Harvest;8;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(8) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Left,25)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Right;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(3)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.train(Worker,Right,100)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Right;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.harvest(3) u.train(Worker,Right,100)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Weakest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;C;Harvest;6;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;50;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle()} else { u.harvest(6)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,50)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Harvest;6;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;50	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)}} else { u.harvest(6)}} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,50)}}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Worker;Left;25;S;For_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Farthest;S;Empty	if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Worker,Left,25)} for(Unit u){u.attack(Farthest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.canHarvest()) then {u.moveToUnit(Enemy,Farthest)} else { e}}}
S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;25;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Left;10;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	if(HasNumberOfWorkersHarvesting(25)) then {for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.train(Worker,Left,10)} for(Unit u){u.attack(Weakest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1	for(Unit u){u.train(Worker,Up,5) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Harvest;2;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,5) u.attack(Weakest) for(Unit u){if(u.isBuilder()) then {for(Unit u){u.idle()}} else { if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Farthest) u.train(Worker,EnemyDir,100)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(15)) then {u.moveAway()} u.harvest(25) u.attack(Strongest) for(Unit u){u.train(Worker,Down,50)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(10) u.attack(Strongest) for(Unit u){u.train(Worker,Down,50)}}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;25;S;For_S;S;C;Harvest;3	for(Unit u){u.attack(Closest) u.train(Worker,Left,25) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;20	for(Unit u){for(Unit u){u.harvest(5) u.attack(LessHealthy)} u.train(Worker,Left,20)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;LessHealthy;S;For_S;S;C;Idle;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.harvest(5) u.train(Worker,Right,3) u.attack(LessHealthy) for(Unit u){u.idle()}} u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Right;10	for(Unit u){for(Unit u){u.build(Barracks,Right,15) u.idle() u.harvest(5) u.train(Worker,Right,3) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest) u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Right;10	for(Unit u){for(Unit u){u.build(Barracks,Down,15) u.idle() u.harvest(5) u.train(Worker,Right,3) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest) u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;Right;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,Right,2)} u.idle() u.harvest(5) u.train(Worker,Right,3) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;Down;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;3;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Ranged,Left,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,Down,2)} u.idle() u.harvest(5) u.train(Worker,Up,3) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;Down;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Ranged,Left,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,Down,2)} u.idle() u.harvest(5) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Ranged,Left,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,EnemyDir,2)} u.idle() u.harvest(5) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.idle() u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Down;1;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Right;10;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,3) for(Unit u){u.idle() u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Down,1)}} if(u.canHarvest()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)}}} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)} u.train(Heavy,Right,10) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasNumberOfUnits;Light;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Heavy;Down;9;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,3) if(HasNumberOfUnits(Light,9)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle() u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.canHarvest()) then {if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}}}} if(u.canHarvest()) then {for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Heavy,Down,9)}} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;15;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,15) u.attack(MostHealthy)}
S;S_S;S;For_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Worker,Left,25)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;2;S;C;Harvest;3;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Left,2) if(HasLessNumberOfUnits(Worker,2)) then {u.harvest(3)} u.attack(Weakest)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;MostHealthy;S;C;Train;Worker;Down;10	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) u.train(Worker,Down,10)}
S;S_S;S;For_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;7;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(7)}} for(Unit u){u.train(Worker,Down,50)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Harvest;5;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down;50	for(Unit u){u.harvest(3) u.harvest(5)} for(Unit u){u.attack(Closest) u.train(Worker,Down,50)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;25;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;Harvest;4;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;Attack;Weakest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,25) u.train(Worker,EnemyDir,50) u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.attack(Weakest)} u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;2;S;C;Train;Worker;Up;25;S;C;Harvest;10;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Right;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Worker,EnemyDir,2) u.train(Worker,Up,25) u.harvest(10) u.attack(Strongest) u.train(Light,Right,2) for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Train;Light;Down;15;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;100;S;C;Harvest;10;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,15) u.idle() u.train(Worker,EnemyDir,100) u.harvest(10) u.attack(Strongest) for(Unit u){u.build(Barracks,Left,8)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;15;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.harvest(15) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Heavy;Right;2	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(20) u.moveToUnit(Enemy,MostHealthy) u.attack(MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)} u.train(Heavy,Right,2)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.moveToUnit(Ally,Weakest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} else { for(Unit u){u.train(Light,EnemyDir,8)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Down;9;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,10)} u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.isBuilder()) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Down,9)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.train(Worker,Right,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;1;S;Empty;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(1)} else { e} u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} u.train(Worker,Right,9)}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;Weakest	for(Unit u){u.train(Worker,EnemyDir,15) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Harvest;6;S;If_B_then_S;B;is_Type;Worker;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;MoveAway;S;C;Attack;Closest	for(Unit u){u.harvest(10) u.train(Worker,Left,20) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(4) u.harvest(6) if(u.is(Worker)) then {u.idle()}} if(HaveQtdUnitsAttacking(4)) then {u.moveAway()} else { u.attack(Closest)}}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;C;Build;Base;Left;8;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(10) u.train(Worker,Left,20) u.build(Base,Left,8) u.idle() u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;20;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Weakest;S;C;Attack;Closest	for(Unit u){u.harvest(8) u.train(Worker,Left,20) if(u.HasUnitInOpponentRange()) then {u.attack(Weakest)} else { u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;20;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Harvest;6	for(Unit u){u.train(Worker,Left,20) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(6)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Down;9;S;Empty;S;C;Harvest;7	for(Unit u){u.train(Worker,Down,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Down,9)} else { e} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7;S;For_S;S;C;Harvest;9	for(Unit u){u.train(Worker,Right,20) u.attack(Strongest) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;15	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,15)}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Worker;Left;9;S;C;Attack;Strongest	for(Unit u){u.harvest(7) u.train(Worker,Left,9) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;6;S;Empty;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Left,9) if(u.canHarvest()) then {u.harvest(6)} else { e} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;100;S;C;Harvest;9;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,100) u.harvest(9) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Right;7;S;For_S;S;C;Train;Worker;Left;25;S;C;Harvest;3	for(Unit u){u.moveToUnit(Ally,Farthest) if(u.is(Barracks)) then {u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(Closest) for(Unit u){for(Unit u){u.idle()} u.train(Worker,Right,7) for(Unit u){u.train(Worker,Left,25)} u.harvest(3)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;15;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.idle()} u.train(Worker,EnemyDir,15) u.attack(MostHealthy) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;C;Train;Worker;Left;9;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.train(Worker,Left,9) u.attack(MostHealthy) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Ranged;Left;9;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.train(Worker,Left,9) u.train(Ranged,Left,9) u.attack(MostHealthy) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Ranged;Left;9;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,50) u.build(Barracks,Down,6) u.train(Worker,Left,9) u.train(Ranged,Left,9) u.attack(MostHealthy) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,9) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,5) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){if(u.canHarvest()) then {u.attack(Strongest)}} for(Unit u){u.train(Worker,Down,25)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){if(u.canHarvest()) then {u.harvest(2) u.attack(Weakest)}} for(Unit u){u.train(Worker,Down,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){u.idle() u.harvest(5) u.attack(Farthest)} for(Unit u){u.train(Worker,Down,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){u.idle() u.harvest(4) u.attack(MostHealthy)} for(Unit u){u.train(Worker,Down,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;C;Train;Light;EnemyDir;9;S;S_S;S;C;Harvest;7;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(7) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Down,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Light;Down;9;S;S_S;S;C;Harvest;100;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;25	for(Unit u){u.idle() u.build(Barracks,EnemyDir,7) u.train(Light,Down,9) u.harvest(100) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Right,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Light;Left;9;S;S_S;S;C;Harvest;100;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Right;25	for(Unit u){u.idle() u.build(Barracks,EnemyDir,7) u.train(Light,Left,9) u.harvest(100) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Right,25)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Worker;Down;25;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(15)} for(Unit u){u.train(Worker,Down,25)} for(Unit u){u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;S_S;S;C;Harvest;2;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(2) u.harvest(15)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(1)} u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(15)} for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Left;50	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(15) u.attack(Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Left,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;For_S;S;C;Train;Light;Down;1;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){u.build(Barracks,EnemyDir,2) for(Unit u){u.train(Heavy,Left,2)} u.idle() u.build(Barracks,Right,7) for(Unit u){u.train(Light,Down,1)} u.train(Light,EnemyDir,9) u.harvest(15) u.attack(Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;15;S;C;Harvest;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Train;Light;EnemyDir;9;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){u.build(Barracks,EnemyDir,2) for(Unit u){u.train(Heavy,Left,2)} u.idle() if(HasLessNumberOfUnits(Barracks,15)) then {u.harvest(25)} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,Up,1)} u.train(Light,EnemyDir,9) u.attack(Strongest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Down,50)}
S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;C;Attack;Closest	for(Unit u){u.train(Worker,Right,20) u.attack(Closest)}
S;For_S;S;S_S;S;C;Train;Worker;Left;100;S;S_S;S;S_S;S;C;Attack;Weakest;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Harvest;10;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Left,100) u.attack(Weakest) if(u.canHarvest()) then {for(Unit u){u.harvest(10)}} u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Left;10;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Strongest	for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(2) u.train(Worker,Left,10)} u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Harvest;2;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,10) u.harvest(2) u.attack(Weakest) u.moveToUnit(Ally,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Right;50;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Worker,Right,50)} u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Right;25;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.harvest(2) u.harvest(3) u.train(Worker,Right,25) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;C;Train;Worker;Left;10;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;Right;100	for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Worker,Left,10) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Right,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;C;Train;Worker;Left;10;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;EnemyDir;100	for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Worker,Left,10) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;EnemyDir;100	for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Worker,Left,10) u.harvest(6) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;9;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Ranged;EnemyDir;100	for(Unit u){u.build(Barracks,Down,9)} for(Unit u){u.train(Worker,Left,10) u.harvest(6) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,EnemyDir,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;9;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Train;Worker;Up;3;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.train(Ranged,Down,9) u.build(Barracks,Right,2) u.train(Worker,Up,3) u.harvest(5) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) for(Unit u){u.idle()} u.harvest(5) u.attack(Weakest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Down;20;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Down,20)}} u.attack(Weakest) u.train(Heavy,Down,5) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Weakest) u.train(Heavy,Down,5) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Weakest) u.train(Heavy,Down,5) u.train(Heavy,Left,20) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle() u.harvest(7)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Closest) u.train(Heavy,Down,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Ranged;Left;4;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;8;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(20)} u.train(Ranged,Left,4)}} u.attack(Closest) u.train(Heavy,Down,8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.idle()}} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,100)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;100;S;S_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Harvest;8;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,100) u.harvest(1) if(HasNumberOfUnits(Worker,7)) then {u.harvest(8)} else { u.attack(MostHealthy)}} for(Unit u){u.idle() u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;2;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,100)} u.build(Barracks,EnemyDir,6) u.harvest(25) u.train(Worker,Left,4) if(OpponentHasNumberOfUnits(Base,2)) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Closest)}}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;C;Attack;Strongest;S;C;Train;Ranged;Right;15	for(Unit u){u.harvest(5) for(Unit u){u.idle()} u.train(Worker,Right,8) for(Unit u){u.build(Barracks,Down,20)} u.attack(Strongest) u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;C;Attack;Strongest;S;C;Train;Ranged;Right;15	for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.train(Worker,Right,7) for(Unit u){u.build(Barracks,Down,20)} u.attack(Strongest) u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;6;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;C;Harvest;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;2;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Light;Up;100;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,6) u.idle() u.train(Worker,Left,4) u.harvest(8) if(HasLessNumberOfUnits(Worker,2)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Light,Up,100) u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;2;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Heavy;Up;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,6) u.train(Ranged,Right,2) u.idle() u.train(Worker,Left,4) u.harvest(4) if(HasLessNumberOfUnits(Worker,2)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Heavy,Right,8) u.train(Heavy,Up,100) u.attack(Strongest)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,10) for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Down;25;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.harvest(8) u.attack(MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Down,25)} u.train(Worker,Down,50)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;MostHealthy;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;Train;Worker;Up;10;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(2) u.attack(MostHealthy) for(Unit u){u.idle()}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Up,10) for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,LessHealthy)}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.harvest(4) u.attack(Closest)} u.train(Worker,Down,50)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.harvest(4) for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.attack(Weakest)} u.train(Worker,Down,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;C;Train;Worker;Down;2	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){for(Unit u){u.harvest(4) u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.train(Worker,Down,2)}
S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;C;Train;Worker;Down;15	for(Unit u){u.build(Barracks,Up,9)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.train(Worker,Down,15)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;C;Train;Worker;Down;15	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.train(Worker,Down,15)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;8;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) for(Unit u){u.idle() u.train(Light,EnemyDir,8)} u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;9;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;0;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.attack(Closest) u.train(Light,Right,9)} if(HasLessNumberOfUnits(Worker,0)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Left;8;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} u.train(Heavy,Left,8) u.train(Worker,Right,5)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Left;25;S;C;Train;Worker;Right;5;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Right,6)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Closest)} u.train(Heavy,Left,25) u.train(Worker,Right,5)} if(OpponentHasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Right,3)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Right,5) for(Unit u){u.moveToUnit(Ally,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Ally,Closest) u.train(Ranged,EnemyDir,4)} else { e} u.train(Heavy,Left,10) u.moveToUnit(Enemy,Closest)} if(OpponentHasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.harvest(3) u.moveToUnit(Enemy,MostHealthy) u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.harvest(3) u.idle() u.attack(Closest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,50)} for(Unit u){u.harvest(6) u.idle() u.attack(Closest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Right;8;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Heavy;Left;25	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) for(Unit u){u.harvest(3)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Right,8)} if(u.isBuilder()) then {for(Unit u){u.train(Heavy,Left,25)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Right;8	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) for(Unit u){u.harvest(3)}} for(Unit u){u.harvest(9)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Ranged,Right,8)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;EnemyDir;20	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) for(Unit u){u.harvest(3)}} for(Unit u){u.harvest(9)} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest) u.train(Heavy,EnemyDir,20)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) for(Unit u){u.harvest(3)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) for(Unit u){u.harvest(3)}} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,2) u.harvest(6) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;6;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) for(Unit u){u.harvest(5)}} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;10;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){u.attack(MostHealthy) u.train(Ranged,Down,4) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(10) for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;C;Train;Worker;Down;9	for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.harvest(4) u.attack(Closest)} u.train(Worker,Down,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;1;S;C;Train;Light;Right;15;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;3	for(Unit u){u.build(Barracks,EnemyDir,7) u.idle() for(Unit u){for(Unit u){u.harvest(1)}} u.train(Light,Right,15) u.harvest(9)} for(Unit u){u.moveAway() u.attack(LessHealthy) u.train(Worker,Right,3)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Harvest;1;S;C;Train;Light;Right;15;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,7) u.idle() for(Unit u){for(Unit u){u.harvest(1)}} u.train(Light,Right,15) u.harvest(9)} for(Unit u){u.train(Worker,Right,3) for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Light;Right;15;S;S_S;S;C;Harvest;9;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Right,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.train(Light,Right,15) u.harvest(9) u.train(Ranged,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Ranged,1)) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Farthest)} u.attack(MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Strongest)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Light;Right;15;S;S_S;S;C;Harvest;9;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Right,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.train(Light,Right,15) u.harvest(9) u.train(Ranged,Down,4)} for(Unit u){u.moveAway() u.attack(LessHealthy) for(Unit u){if(HasNumberOfUnits(Ranged,1)) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Farthest)} u.attack(MostHealthy)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Train;Light;EnemyDir;15;S;S_S;S;C;Harvest;9;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.build(Barracks,Left,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.train(Light,EnemyDir,15) u.harvest(9) u.train(Ranged,Down,4)} for(Unit u){u.moveAway() for(Unit u){if(HasNumberOfUnits(Ranged,1)) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Farthest)} u.attack(MostHealthy)}} u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;9	for(Unit u){u.build(Barracks,Left,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.harvest(50)} for(Unit u){u.moveAway() u.train(Heavy,Right,6) u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Light,Right,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Right;9;S;C;Train;Ranged;Up;50	for(Unit u){u.build(Barracks,Left,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.harvest(50)} for(Unit u){u.moveAway() u.train(Heavy,Right,6) for(Unit u){if(HasNumberOfUnits(Ranged,1)) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Farthest)} u.attack(MostHealthy)}} u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Light,Right,9) u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Train;Light;Right;9;S;C;Train;Ranged;Up;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) for(Unit u){u.train(Worker,EnemyDir,5)} u.attack(Weakest)} for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.train(Light,Right,9) u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Train;Light;Right;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,5)} u.attack(Weakest)} for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.train(Light,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,5)}} for(Unit u){u.train(Heavy,Right,6) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Right,50)}
S;For_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,6) u.attack(Weakest)}}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Harvest;7;S;C;Train;Worker;Down;25;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;9;S;C;Attack;Closest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;25	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(2) u.harvest(7) u.train(Worker,Down,25) if(u.isBuilder()) then {for(Unit u){u.idle()} u.harvest(9) u.attack(Closest)}}} for(Unit u){u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.attack(MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Weakest)} u.train(Worker,EnemyDir,25)}}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;C;Train;Worker;Down;25;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Farthest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.harvest(2) u.attack(Weakest) u.train(Worker,Down,25) if(u.canHarvest()) then {for(Unit u){u.idle()}}}} for(Unit u){u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Base;Up;10;S;C;Harvest;9;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Down;100	for(Unit u){for(Unit u){u.build(Base,Up,10)} u.harvest(9)} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Weakest) u.train(Worker,Down,100)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;10;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle()} for(Unit u){u.attack(Farthest)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Worker,Up,10)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Left,100) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;20	for(Unit u){u.harvest(5) u.attack(Strongest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;20;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.harvest(3) u.attack(Weakest) u.train(Worker,Right,20) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(LessHealthy)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;3;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Down;7;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;20	for(Unit u){if(HaveQtdUnitsAttacking(3)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.idle() for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){if(HasNumberOfUnits(Barracks,20)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,LessHealthy)} else { u.train(Ranged,Down,7) u.attack(LessHealthy) for(Unit u){u.harvest(20)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;20;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Ranged;Down;7;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){if(HasNumberOfUnits(Barracks,20)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,LessHealthy)} else { u.train(Ranged,Down,7) u.attack(LessHealthy) for(Unit u){u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.harvest(20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.attack(LessHealthy)} if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;10;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;25;S;For_S;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Train;Worker;Up;10;S;For_S;S;C;Harvest;4	for(Unit u){if(HasNumberOfUnits(Barracks,10)) then {for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { u.idle() u.train(Heavy,Down,25)}} for(Unit u){for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,15) u.attack(Weakest) u.train(Light,EnemyDir,6) u.train(Worker,Up,10) for(Unit u){u.harvest(4)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Train;Worker;Left;10;S;For_S;S;C;Harvest;4	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Closest)}} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.build(Barracks,EnemyDir,15) u.attack(Weakest) u.train(Light,EnemyDir,6) u.train(Worker,Left,10) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Up;25	for(Unit u){u.attack(Weakest) u.train(Worker,Up,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Up;25;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;10;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.train(Worker,Up,25) u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(10)} for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;20;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;is_Type;Base;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Up,20) u.harvest(10) u.attack(MostHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)}}} for(Unit u){if(u.is(Base)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;50;S;For_S;S;S_S;S;C;Train;Worker;Up;9;S;S_S;S;C;Harvest;9;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;10	for(Unit u){u.build(Barracks,Up,50)} for(Unit u){u.train(Worker,Up,9) u.harvest(9) u.attack(Closest)} for(Unit u){u.train(Ranged,EnemyDir,10)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Down;15;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Heavy;Left;4;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.harvest(7) u.build(Barracks,Down,15)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.train(Heavy,Left,4) u.attack(Weakest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Right,50) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;5;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Down;15;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Right,5) u.idle()} for(Unit u){u.harvest(7) u.build(Barracks,Down,15)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Right,50) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;5;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Down;15;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Worker;Right;50;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Heavy,Right,5) u.idle()} for(Unit u){u.harvest(7) u.build(Barracks,Down,15)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} else { u.moveToUnit(Enemy,Farthest)} u.train(Worker,Right,50) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.idle() u.harvest(25)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Ranged,EnemyDir,50) for(Unit u){u.train(Heavy,Down,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;8;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(8)} u.idle() u.harvest(10)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Ranged,EnemyDir,50) for(Unit u){u.train(Heavy,Down,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(5)} u.idle() u.harvest(10)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Ranged,EnemyDir,50) for(Unit u){u.train(Heavy,Down,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;Up;20;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.is(Barracks)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(5)} u.idle() u.harvest(10)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,Up,20)} for(Unit u){u.train(Ranged,EnemyDir,50) for(Unit u){u.train(Heavy,Down,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Up;9;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;Up;20;S;For_S;S;S_S;S;C;Train;Light;Left;20;S;For_S;S;C;Train;Heavy;Down;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,9)} u.harvest(10)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,Up,20)} for(Unit u){u.train(Light,Left,20) for(Unit u){u.train(Heavy,Down,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;Up;20;S;For_S;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,Up,20)} for(Unit u){for(Unit u){u.train(Heavy,Left,8)}} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;S_S;S;For_S;S;C;Harvest;1;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} for(Unit u){u.harvest(1)} u.build(Barracks,Up,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;S_S;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} for(Unit u){u.harvest(3)} u.build(Barracks,Up,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,Up,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){u.train(Light,EnemyDir,4) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){u.build(Barracks,Up,1) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;EnemyDir;25;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Weakest	for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,MostHealthy) u.train(Worker,EnemyDir,25) u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;2;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) u.train(Worker,Left,2) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Ally,Weakest)} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.attack(LessHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;3;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;50;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;Train;Worker;Up;25;S;Empty;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Ranged,Down,3) u.attack(Strongest) u.moveToUnit(Ally,Closest) for(Unit u){if(u.is(Worker)) then {u.harvest(50)}} if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.train(Worker,Up,25)} else { e} if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,7)} for(Unit u){u.train(Worker,Left,20) u.attack(Farthest)}} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Down;3;S;S_S;S;S_S;S;C;Train;Light;Down;25;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;50;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Ranged,Down,3) u.train(Light,Down,25) for(Unit u){if(u.is(Worker)) then {u.harvest(50)}} if(u.canHarvest()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,7)} for(Unit u){u.train(Worker,Left,20) u.attack(Farthest)}} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Left;20;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.attack(LessHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Ally,MostHealthy)} for(Unit u){for(Unit u){u.train(Worker,Left,20)}} if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;100;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Left,3) u.attack(LessHealthy) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(1)} for(Unit u){u.build(Base,EnemyDir,100)} u.moveToUnit(Enemy,Weakest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Build;Base;Down;20;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;For_S;S;C;Train;Worker;Right;25;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Base;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.build(Base,Down,20) for(Unit u){u.harvest(50)}} for(Unit u){for(Unit u){u.train(Worker,Right,25)}} for(Unit u){if(HasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Build;Base;Down;20;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Worker;Right;25;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Base;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveAway() u.build(Base,Down,20) for(Unit u){u.harvest(50)}} for(Unit u){u.train(Worker,Right,25)} for(Unit u){if(HasNumberOfUnits(Base,8)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;S_S;S;C;Build;Base;Down;20;S;For_S;S;C;Harvest;9;S;For_S;S;C;Train;Worker;Right;25	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,Weakest) u.moveAway() u.build(Base,Down,20) for(Unit u){u.harvest(9)}} for(Unit u){u.train(Worker,Right,25)}
S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;0;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) if(HasNumberOfUnits(Ranged,0)) then {for(Unit u){u.harvest(3)}} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;0;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(HasNumberOfUnits(Ranged,0)) then {for(Unit u){u.harvest(3)}} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;8;S;C;Train;Ranged;Left;5	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(Farthest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Left,8) u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;8;S;C;Train;Ranged;Left;5	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Left,8) u.train(Ranged,Left,5)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Light;Right;100;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Worker;Down;20	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(20) for(Unit u){u.moveToUnit(Enemy,Closest)}}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} for(Unit u){u.harvest(10)} for(Unit u){u.train(Light,Right,100)} for(Unit u){u.build(Barracks,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Farthest)} else { e} for(Unit u){u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Worker,Down,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Left;9;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;Up;100	for(Unit u){u.idle() u.harvest(4) for(Unit u){u.build(Barracks,Left,9)} u.moveAway() u.attack(MostHealthy)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Heavy,Up,100)}
S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;10;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) u.train(Worker,Right,10) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Closest)}}}
S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;Empty;S;C;Train;Worker;Right;1;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;10;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway	for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(2)) then {e} else { u.train(Worker,Right,1)} u.harvest(50) u.moveToUnit(Ally,Closest) u.train(Worker,Right,10) if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;Empty;S;C;Train;Worker;Right;1;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;10;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Base;Right;20;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Harvest;7;S;C;MoveAway	for(Unit u){u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(2)) then {e} else { u.train(Worker,Right,1)} u.harvest(50) u.moveToUnit(Ally,Closest) u.train(Worker,Right,10) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Base,Right,20)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(7) u.moveAway()}}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Weakest;S;C;Train;Worker;Right;10;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Base;Right;20;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;5	for(Unit u){if(u.canAttack()) then {u.attack(Weakest)} u.train(Worker,Right,10) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Base,Right,20)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(5)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Idle;S;C;Train;Worker;Right;20;S;For_S;S;C;Harvest;100;S;For_S;S;C;Attack;Weakest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} else { u.train(Worker,Right,20)}} for(Unit u){u.harvest(100)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Build;Barracks;Right;25;S;C;Harvest;15;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Light;Down;20;S;C;Train;Worker;Left;25;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.build(Barracks,Right,25)}} u.harvest(15) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.train(Light,Down,20) u.train(Worker,Left,25) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;15;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;25;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)}} u.harvest(15) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,25) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Worker;Up;100;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(4)} u.train(Worker,Up,100) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Ranged;Down;50;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,7)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,Left,50)} for(Unit u){u.harvest(4)} u.train(Ranged,Down,50)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.is(Ranged)) then {u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,20)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}} u.harvest(10) if(u.canAttack()) then {for(Unit u){u.idle()}} u.moveAway() u.train(Worker,Down,8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Heavy,Down,10) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;10;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Down,20)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}} u.harvest(10) for(Unit u){u.idle()} u.moveAway() u.train(Worker,Down,8) u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Heavy,Down,10) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;4	for(Unit u){u.attack(Weakest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,EnemyDir,4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Worker;Left;6;S;S_S;S;For_S;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Harvest;1;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;If_B_then_S;B;is_Type;Light;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,Closest)} u.train(Worker,Left,6) for(Unit u){u.train(Worker,Right,100)} for(Unit u){u.harvest(1)} for(Unit u){for(Unit u){for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)}}} for(Unit u){if(HaveQtdUnitsAttacking(7)) then {if(u.is(Light)) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}
S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;100;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;25;S;For_S;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	if(HasLessNumberOfUnits(Light,100)) then {for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy) u.train(Worker,EnemyDir,25) for(Unit u){u.harvest(20)}}} else { for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;25	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Weakest)} for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Harvest;9;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() u.harvest(3)} u.harvest(9)} for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;1;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;Train;Worker;Up;8;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.train(Light,Up,100)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(1)}} for(Unit u){for(Unit u){u.build(Barracks,Down,5) u.train(Worker,Up,8) u.attack(LessHealthy) for(Unit u){u.harvest(5)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;C;Attack;Strongest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Down,10) u.harvest(8) u.train(Heavy,EnemyDir,9)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Closest)} else { u.attack(Strongest)}} if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Down,7) u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.is(Worker)) then {for(Unit u){u.idle()} for(Unit u){for(Unit u){u.attack(MostHealthy)}}} u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;3;S;C;Harvest;4;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { for(Unit u){u.idle()}}} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){if(u.canHarvest()) then {u.harvest(3)}} u.harvest(4)} for(Unit u){u.attack(MostHealthy)} u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Down;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(9)} u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Down,15) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;S_S;S;C;Harvest;7;S;C;Idle;S;S_S;S;C;Train;Worker;Down;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(7) u.idle()} u.train(Worker,Down,15) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Attack;Farthest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(25) for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.attack(Farthest)}} for(Unit u){u.train(Worker,Left,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.idle()} u.attack(MostHealthy) for(Unit u){u.harvest(6)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,Left,25)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Train;Light;EnemyDir;9	for(Unit u){u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(MostHealthy)} for(Unit u){if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.train(Light,Right,5)}}} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,8) u.train(Light,EnemyDir,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Farthest	for(Unit u){u.train(Heavy,Right,7) u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,7) u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;5	for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,5)}
S;For_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(3) u.attack(LessHealthy) u.train(Worker,Left,5)}
S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;5	for(Unit u){u.harvest(1) u.attack(LessHealthy) u.train(Worker,Left,5)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Harvest;3;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Strongest) for(Unit u){u.harvest(3)} u.train(Worker,Right,9)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;6;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;3;S;For_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,Right,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy)} else { u.train(Worker,Left,6)} for(Unit u){u.train(Heavy,Up,20)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;6;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;6;S;For_S;S;C;Train;Heavy;Up;20	for(Unit u){u.build(Barracks,Right,6)} for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.moveToUnit(Enemy,Strongest)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy)} else { u.train(Worker,Left,6)} for(Unit u){u.train(Heavy,Up,20)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Ranged;Up;5;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Light;Left;8;S;C;Harvest;15;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveAway;S;C;Idle	for(Unit u){u.train(Worker,Right,6) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,1) u.build(Barracks,EnemyDir,5)}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Ranged,Up,5) u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Left,8) u.harvest(15)} if(u.HasUnitInOpponentRange()) then {u.moveAway() u.idle()}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;8;S;C;Harvest;15;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;9;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Right,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Light,Left,8) u.harvest(15) u.idle() u.train(Heavy,Down,9)} if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Weakest)} else { u.moveToUnit(Enemy,Farthest)}}}}} for(Unit u){for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;9;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Right,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(15) u.idle() u.train(Heavy,Down,9)} if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,Farthest)}}}}} for(Unit u){u.attack(Strongest) if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest)} else { u.train(Ranged,EnemyDir,6)} for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveAway() u.attack(Strongest) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,6) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.build(Barracks,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,6) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.build(Barracks,EnemyDir,6)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.attack(Closest)} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;For_S;S;For_S;S;C;Train;Worker;Up;1;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;C;Attack;Strongest	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Up,1)}}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)} u.attack(Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;Up;5;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.attack(Weakest)} for(Unit u){u.train(Worker,Up,5)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;25;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(25)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Right,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.attack(Weakest) for(Unit u){if(u.canHarvest()) then {u.idle()}} for(Unit u){u.harvest(15)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Right,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(7)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Right,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Train;Worker;Right;100	for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.train(Worker,Right,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Build;Barracks;Left;10;S;C;Train;Worker;Down;50;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;50;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(8) if(u.canHarvest()) then {u.idle()} u.build(Barracks,Left,10) u.train(Worker,Down,50) u.attack(MostHealthy) u.train(Light,EnemyDir,50)} for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Up;15	for(Unit u){u.idle() u.harvest(4) u.attack(Closest)} for(Unit u){u.train(Worker,Up,15)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Build;Barracks;Down;4;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Up;50;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.build(Barracks,Down,4)} u.attack(Strongest)} for(Unit u){for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Up,50)}}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.train(Worker,Left,20) for(Unit u){u.moveToUnit(Ally,Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveAway;S;C;Build;Barracks;Down;4;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;S_S;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.moveAway() u.build(Barracks,Down,4)} u.attack(Closest)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.train(Heavy,Left,4) u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){for(Unit u){u.train(Worker,Up,50)}} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;MoveAway;S;C;Build;Barracks;Down;4;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.moveAway() u.build(Barracks,Down,4)} u.attack(Closest)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;Train;Heavy;EnemyDir;2;S;C;Build;Barracks;Down;4;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.train(Heavy,EnemyDir,2) u.build(Barracks,Down,4)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;S_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Heavy;EnemyDir;10;S;C;Attack;LessHealthy;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.build(Barracks,Up,15) u.moveToUnit(Enemy,Strongest) u.train(Heavy,EnemyDir,10) u.attack(LessHealthy)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;Attack;Farthest;S;C;Train;Heavy;EnemyDir;10;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.build(Barracks,Up,15) u.attack(Farthest) u.train(Heavy,EnemyDir,10)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;S_S;S;C;Build;Barracks;Up;15;S;S_S;S;C;Attack;Farthest;S;S_S;S;C;Train;Heavy;EnemyDir;10;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;20;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;8;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Worker;Up;50;S;For_S;S;C;Train;Light;EnemyDir;100	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(5)) then {u.build(Barracks,Up,15) u.attack(Farthest) u.train(Heavy,EnemyDir,10) if(HaveQtdUnitsAttacking(20)) then {u.moveToUnit(Ally,Strongest)} else { u.train(Light,Left,8)}} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Worker,Up,50)} for(Unit u){u.train(Light,EnemyDir,100)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;S_S;S;C;Build;Barracks;Up;15;S;C;Train;Ranged;EnemyDir;8;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Up;50	for(Unit u){u.harvest(10) if(HaveQtdUnitsAttacking(6)) then {u.build(Barracks,Up,15) u.train(Ranged,EnemyDir,8)} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Up,50)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;For_S;S;C;MoveAway;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Up;50	for(Unit u){u.harvest(2) if(HaveQtdUnitsAttacking(6)) then {for(Unit u){u.moveAway()}} u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Up,50)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Train;Worker;Down;20	for(Unit u){u.harvest(2) u.attack(Weakest)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Down,20)}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Build;Barracks;Down;7;S;For_S;S;C;Harvest;20;S;S_S;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;S_S;S;C;Train;Worker;EnemyDir;9;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;6;S;Empty;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.build(Barracks,Down,7)}} for(Unit u){u.harvest(20)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveAway()} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,Left,4)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Farthest)} for(Unit u){u.train(Ranged,Left,7)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Strongest)} else { e}}} for(Unit u){if(u.canAttack()) then {e} else { u.train(Worker,EnemyDir,9) if(HasNumberOfWorkersHarvesting(6)) then {e} else { u.moveToUnit(Ally,Closest)}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Build;Barracks;Down;7;S;For_S;S;C;Harvest;20;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.build(Barracks,Down,7)}} for(Unit u){u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveAway()} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,Left,4)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Farthest)} for(Unit u){u.train(Ranged,Left,7)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Strongest)} else { e}}} for(Unit u){if(u.canAttack()) then {e} else { for(Unit u){u.moveToUnit(Ally,Weakest)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Harvest;20;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.build(Barracks,EnemyDir,7)}} for(Unit u){u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveAway()} for(Unit u){u.moveToUnit(Ally,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Worker,Left,4)}} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Farthest)} for(Unit u){u.train(Ranged,Left,7)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Strongest)} else { e}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Harvest;20;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.build(Barracks,EnemyDir,7)}} for(Unit u){u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,4)}} for(Unit u){u.train(Light,EnemyDir,20)} for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Strongest)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Up;50;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.harvest(5)} u.train(Worker,Up,5) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Up,50) for(Unit u){u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.train(Light,Left,25) u.idle() u.harvest(3) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,8)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;C;Idle;S;C;Harvest;9;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.train(Light,Left,25) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100) u.idle() u.harvest(9)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,8)}
S;S_S;S;For_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasLessNumberOfUnits;Base;1;S;For_S;S;For_S;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Barracks;Left;20;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;9;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Train;Light;Left;50;S;Empty	for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {if(HasLessNumberOfUnits(Base,1)) then {for(Unit u){for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}}}}}} u.build(Barracks,Left,20)} for(Unit u){u.harvest(6) if(u.isBuilder()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)}} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Up,9)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Light,Left,50)}} else { e}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;EnemyDir;6;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy) for(Unit u){u.harvest(7) u.build(Barracks,EnemyDir,6)}} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Left;9	for(Unit u){for(Unit u){u.harvest(4)} for(Unit u){u.attack(Strongest)} u.train(Worker,Left,9)}
S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){if(u.is(Worker)) then {u.harvest(3)}} for(Unit u){u.harvest(100) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.attack(Closest)}}}} for(Unit u){u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;C;Idle;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){if(u.is(Worker)) then {u.harvest(3)}} for(Unit u){u.harvest(100) u.idle() u.attack(LessHealthy) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()}}} for(Unit u){u.attack(Farthest) if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){u.train(Worker,Left,25)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle() for(Unit u){u.idle() u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest)}} for(Unit u){u.attack(Farthest) if(u.isBuilder()) then {u.moveToUnit(Ally,Farthest)} else { e} for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.attack(Closest)}}} for(Unit u){u.train(Worker,Left,25)}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;C;Harvest;2;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.harvest(2)}} for(Unit u){u.moveAway()}}} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;15;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.train(Worker,Right,15) if(u.canAttack()) then {u.idle()} else { u.moveToUnit(Ally,LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(50) u.attack(Closest)} u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Right,6) if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(50) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;8;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Right,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(8) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;10;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;10;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;2;S;For_S;S;C;Train;Ranged;EnemyDir;25	for(Unit u){u.train(Worker,Left,10)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.harvest(6) if(HasLessNumberOfUnits(Ranged,10)) then {u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway() u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest) u.train(Heavy,Left,2)} for(Unit u){u.train(Ranged,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;EnemyDir;1;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.attack(Weakest)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,EnemyDir,1)}} for(Unit u){u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Worker;Down;2	for(Unit u){for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(MostHealthy)}}} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Down,2)}
S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Worker,Right,100) for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;15;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;2;S;Empty;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,Left,15)} if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(2)} else { e} u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;25;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;100;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;10	for(Unit u){u.harvest(9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy) for(Unit u){u.harvest(25)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Farthest)} else { u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,50)}} for(Unit u){u.train(Heavy,Up,100)} u.attack(Weakest) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;25;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;100;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;10	for(Unit u){u.harvest(9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(MostHealthy) for(Unit u){u.harvest(25)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,50)}} for(Unit u){u.train(Heavy,Up,100)} u.attack(Weakest) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;10	for(Unit u){u.harvest(9) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,50)}} u.attack(Weakest) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;10	for(Unit u){u.harvest(9) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) u.idle() for(Unit u){u.build(Barracks,Right,50)}} u.attack(Weakest) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;9;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;10	for(Unit u){u.harvest(9) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) u.idle() for(Unit u){u.build(Barracks,Right,50)}} u.attack(MostHealthy) u.train(Light,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;Right;50;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;C;Harvest;10;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Right;10	for(Unit u){u.harvest(100) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) u.idle() for(Unit u){u.build(Barracks,Right,50)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway() for(Unit u){u.harvest(10)} u.moveToUnit(Ally,MostHealthy)}}} u.attack(MostHealthy) u.train(Light,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;For_S;S;C;Build;Barracks;Right;50;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Right;10	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} else { u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,50)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.moveAway() u.moveToUnit(Ally,MostHealthy)}}} u.attack(MostHealthy) u.train(Light,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;3;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Right;10	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {e} else { u.train(Worker,Down,3) for(Unit u){u.build(Barracks,Right,50)}} u.attack(MostHealthy) u.train(Light,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;Down;20	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.attack(MostHealthy) u.train(Light,Down,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.train(Heavy,EnemyDir,100) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.train(Heavy,EnemyDir,100) u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;100;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;1;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HasLessNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.harvest(100) for(Unit u){u.idle()} if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.attack(Weakest) for(Unit u){if(HasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Ally,Closest)}} u.train(Heavy,EnemyDir,100) u.moveToUnit(Enemy,Farthest) if(OpponentHasNumberOfUnits(Light,1)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;20;S;C;Train;Heavy;Up;3;S;C;MoveAway;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(20) u.train(Heavy,Up,3) u.moveAway() u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;7;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(7) u.train(Heavy,Up,3) u.train(Worker,EnemyDir,9) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Heavy;Left;5;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;9;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Heavy,Left,5) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(7) u.train(Worker,EnemyDir,9) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;20;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,20) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;C;Harvest;10;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,20) u.harvest(10) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Down;20;S;For_S;S;C;Idle	for(Unit u){u.attack(Closest) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(10)}} u.train(Worker,Down,20) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Train;Worker;Right;25;S;For_S;S;S_S;S;C;Harvest;4;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,25) for(Unit u){u.harvest(4) u.attack(Weakest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;3;S;C;Build;Barracks;Down;20;S;S_S;S;C;Idle;S;C;Train;Worker;Down;50;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;C;Train;Light;Right;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Weakest	for(Unit u){if(HasLessNumberOfUnits(Light,3)) then {u.build(Barracks,Down,20)} u.idle() u.train(Worker,Down,50) for(Unit u){u.harvest(10) u.train(Light,Right,6)} u.moveToUnit(Ally,Closest)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;For_S;S;S_S;S;C;Harvest;10;S;C;Train;Light;Down;6;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;S_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,5)} for(Unit u){u.harvest(10) u.train(Light,Down,6)}} for(Unit u){u.train(Worker,EnemyDir,10) u.idle() u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;For_S;S;C;Train;Light;Left;6;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(8)} for(Unit u){u.train(Light,Left,6)}} for(Unit u){u.train(Worker,EnemyDir,10) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;10;S;C;Attack;Weakest	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(8)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.train(Ranged,Down,50)}} for(Unit u){u.train(Worker,EnemyDir,10) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;20;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Down;50;S;For_S;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.harvest(20) u.attack(Strongest) for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(8)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.train(Ranged,Down,50)}} for(Unit u){u.train(Worker,EnemyDir,10)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;50;S;C;Attack;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(8)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.train(Ranged,EnemyDir,50) u.attack(Weakest)}} for(Unit u){u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;C;Harvest;6;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Light;Down;9;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.build(Barracks,Left,10)} u.harvest(6) u.train(Worker,Up,3) u.attack(MostHealthy) u.train(Light,Down,9) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;4;S;C;Train;Light;Down;9	for(Unit u){u.harvest(10) u.idle() for(Unit u){u.build(Barracks,Left,3)} u.train(Worker,Left,2) u.attack(Closest) u.train(Worker,EnemyDir,4) u.train(Light,Down,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Right;50;S;For_S;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.idle() u.harvest(20) u.attack(Closest) for(Unit u){u.build(Barracks,EnemyDir,5) u.harvest(8)} u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.train(Light,Right,50)}} for(Unit u){u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;3;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;15;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Up;25;S;S_S;S;C;Train;Worker;Right;2;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Heavy,EnemyDir,3) u.idle() for(Unit u){u.build(Barracks,Left,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(15)} u.attack(Weakest) u.train(Heavy,Up,25) u.train(Worker,Right,2) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;MostHealthy;S;Empty;S;C;Attack;Closest;S;C;Train;Light;Down;9	for(Unit u){u.train(Worker,Up,5) u.idle() for(Unit u){u.build(Barracks,Left,3)} u.harvest(25) if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.attack(MostHealthy)} else { e} u.attack(Closest) u.train(Light,Down,9)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;MostHealthy;S;C;Attack;Strongest;S;C;Train;Light;Down;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,3)} u.harvest(25) u.train(Worker,Left,3) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy)}} u.attack(Strongest) u.train(Light,Down,100)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;MoveAway;S;S_S;S;C;Build;Barracks;Right;3;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Ranged;Right;10;S;For_S;S;C;Harvest;15	for(Unit u){u.train(Worker,Up,25) u.moveAway() u.build(Barracks,Right,3) u.attack(Strongest) u.train(Ranged,Right,10) for(Unit u){u.harvest(15)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Heavy;Up;50;S;C;Harvest;25;S;C;Train;Worker;EnemyDir;6;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Left;4	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.train(Worker,Down,5) u.train(Heavy,Up,50)}} u.harvest(25) u.train(Worker,EnemyDir,6) u.attack(Strongest) for(Unit u){u.build(Barracks,Left,4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;MostHealthy;S;C;Train;Ranged;EnemyDir;4;S;C;Attack;Closest;S;C;Train;Light;Down;9	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,3)} u.harvest(25) u.train(Worker,Left,7) if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.attack(MostHealthy)} else { u.train(Ranged,EnemyDir,4)} u.attack(Closest) u.train(Light,Down,9)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Build;Barracks;Down;15;S;C;Train;Worker;Down;15;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Down;20	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle() u.harvest(50)} u.build(Barracks,Down,15) u.train(Worker,Down,15) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} u.train(Light,Down,4) u.harvest(10)} u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Down,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;2;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Down;9	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,3)} u.harvest(25) u.train(Worker,Left,2) u.attack(Closest) u.train(Light,Down,9)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Build;Barracks;Down;15;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle() u.moveToUnit(Enemy,Strongest)} u.build(Barracks,Down,15) u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Left,3)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} u.train(Light,Down,4) u.harvest(8)} u.moveToUnit(Enemy,Farthest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;C;Attack;LessHealthy;S;S_S;S;C;Build;Barracks;Down;15;S;C;Train;Worker;Down;15;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {u.attack(LessHealthy)} u.build(Barracks,Down,15) u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Left,3)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} u.train(Light,Down,4) u.harvest(8)} u.moveToUnit(Enemy,Farthest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Left;3;S;C;Train;Light;Up;20;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;2;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.build(Barracks,Left,3)} u.train(Light,Up,20) u.harvest(25) u.train(Worker,Left,2) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Train;Worker;Up;2	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Strongest)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Ally,Strongest)} u.attack(Strongest) u.train(Worker,Up,2)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Build;Barracks;Down;15;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;C;Train;Heavy;Left;3;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;10;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;LessHealthy;S;C;Attack;Strongest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle() u.harvest(50)} u.build(Barracks,Down,15) u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Left,3)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle()} u.train(Light,Down,4) u.harvest(10)} u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(LessHealthy)}} u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;3;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Down;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,3)} u.harvest(25) u.train(Worker,Left,3) u.attack(Strongest) u.train(Light,Down,100)}
S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;15;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;C;Build;Barracks;Down;15;S;C;Train;Worker;Down;15;S;S_S;S;For_S;S;C;Train;Heavy;Left;3;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;4;S;S_S;S;C;Train;Light;Down;4;S;C;Harvest;8;S;C;Attack;Closest	if(OpponentHasNumberOfUnits(Worker,15)) then {u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.idle() u.harvest(50)} u.build(Barracks,Down,15) u.train(Worker,Down,15) for(Unit u){u.train(Heavy,Left,3)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.idle() u.train(Heavy,Down,4)} u.train(Light,Down,4) u.harvest(8)} u.attack(Closest)}
S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Left,20) for(Unit u){u.harvest(2) u.moveToUnit(Ally,Closest)} for(Unit u){u.attack(Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.attack(LessHealthy) u.train(Worker,Up,4) for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {u.harvest(1)}} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;100;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Train;Worker;Up;2	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Strongest)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(100)) then {u.moveToUnit(Ally,Strongest)} u.attack(Strongest) u.train(Worker,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Closest;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;2	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.moveToUnit(Ally,Closest) u.attack(LessHealthy) u.train(Worker,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;C;Harvest;100;S;C;Attack;LessHealthy;S;C;Train;Worker;Up;2	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.attack(LessHealthy) u.train(Worker,Up,2)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Down;3;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Down;2;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() u.train(Light,Down,3)} for(Unit u){u.train(Heavy,Up,4)} for(Unit u){if(u.is(Base)) then {u.train(Worker,Down,2)}} u.build(Barracks,EnemyDir,4) u.harvest(4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Down;2;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} for(Unit u){if(u.is(Base)) then {u.train(Worker,Down,2)}} u.build(Barracks,EnemyDir,4) u.harvest(4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Down;2;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Left,3)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.is(Base)) then {u.train(Worker,Down,2)}} u.build(Barracks,EnemyDir,4) u.harvest(2) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Down;2;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Left,3)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.is(Base)) then {u.train(Worker,Down,2)}} u.build(Barracks,EnemyDir,4) u.harvest(50) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;Train;Worker;Down;2;S;S_S;S;C;Build;Barracks;EnemyDir;4;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.train(Light,Left,3)} for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Up,4)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.is(Base)) then {u.train(Worker,Down,2)}} u.build(Barracks,EnemyDir,4) u.harvest(50) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;20;S;S_S;S;C;Harvest;9;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;1;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Light,Right,20) u.harvest(9) u.attack(LessHealthy) for(Unit u){u.idle() u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,7) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Train;Light;Right;7;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Build;Base;Up;10;S;C;Idle;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Down;4;S;C;Attack;Strongest	for(Unit u){u.train(Light,Right,7) u.harvest(9) for(Unit u){u.harvest(2) u.build(Base,Up,10) u.idle() u.build(Barracks,Up,1)} u.train(Worker,Down,4) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Heavy;Right;7;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Down;4;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,Right,7) u.harvest(9) for(Unit u){u.harvest(2) u.idle() u.build(Barracks,Up,1)} u.train(Worker,Down,4) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Train;Heavy;Right;7;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;C;Idle;S;C;Build;Barracks;Up;1;S;C;Train;Worker;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Strongest	for(Unit u){u.train(Heavy,Right,7) u.harvest(9) for(Unit u){u.harvest(2) u.idle() u.build(Barracks,Up,1)} u.train(Worker,Down,4) u.moveToUnit(Enemy,Weakest) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;15	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Left,7) u.build(Barracks,Up,3) u.idle() u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;Left;15;S;C;MoveAway	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Left,7) u.build(Barracks,Up,3) if(u.HasUnitInOpponentRange()) then {u.train(Ranged,EnemyDir,20)} u.idle() u.harvest(100) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,15) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Right;9;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Worker,EnemyDir,6) u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,9) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;25;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;Build;Base;Up;15;S;C;Attack;Weakest	for(Unit u){u.harvest(10) u.train(Worker,Right,25) if(u.is(Worker)) then {u.build(Base,Up,15) u.attack(Weakest)}}
S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Left;3;S;S_S;S;C;Train;Light;Left;9;S;C;Build;Barracks;Right;100;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;Harvest;1;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Harvest;9;S;C;Attack;Strongest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveAway()}} for(Unit u){u.train(Worker,Left,3) u.train(Light,Left,9) u.build(Barracks,Right,100)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(1) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) u.moveAway()} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}} u.harvest(9) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Train;Worker;Right;25;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;Build;Base;Up;1;S;C;Attack;Weakest	for(Unit u){u.harvest(10) u.train(Worker,Right,25) if(u.is(Worker)) then {u.build(Base,Up,1) u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;100;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Right;5;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Down,100) for(Unit u){u.harvest(3)} u.build(Barracks,Right,5) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Left;15	for(Unit u){u.idle() u.attack(LessHealthy) for(Unit u){u.train(Light,Up,4)} for(Unit u){u.harvest(4) u.build(Barracks,Up,9)} u.train(Worker,Left,15)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Left;9	for(Unit u){u.idle() u.attack(MostHealthy) for(Unit u){u.train(Light,Up,4)} for(Unit u){u.harvest(4) u.build(Barracks,Up,9)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Left;9	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) for(Unit u){u.train(Light,Up,4)} for(Unit u){u.harvest(4) u.build(Barracks,Up,9)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Left;9	for(Unit u){u.idle() u.moveAway() u.attack(MostHealthy) for(Unit u){u.train(Light,Up,4)} for(Unit u){u.harvest(4) u.build(Barracks,Up,9)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;8	for(Unit u){for(Unit u){u.harvest(2)} u.moveToUnit(Ally,Closest) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Light;Up;4;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;C;Train;Worker;Left;9	for(Unit u){u.idle() u.attack(MostHealthy) for(Unit u){u.train(Light,Up,4)} for(Unit u){u.harvest(5)} for(Unit u){u.build(Barracks,Up,9)} u.train(Worker,Left,9)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Train;Light;Left;9;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;7	for(Unit u){u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.build(Barracks,Left,9) u.train(Light,Left,9)} for(Unit u){u.harvest(2)} for(Unit u){u.harvest(4)} u.attack(Closest) for(Unit u){u.train(Worker,Down,7)}}}
S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;9;S;C;Train;Light;Left;9;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Harvest;4;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Left;7	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){for(Unit u){u.build(Barracks,Left,9) u.train(Light,Left,9)} for(Unit u){u.harvest(2)} for(Unit u){u.harvest(4)} u.attack(Closest) for(Unit u){u.train(Worker,Left,7)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;100;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Right;5;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;C;Harvest;9;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Down,100) for(Unit u){u.harvest(3)} u.build(Barracks,Right,5) u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} u.harvest(9) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;100;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Right;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Ranged;Down;2;S;C;Idle;S;C;Harvest;4;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Down,100) for(Unit u){u.harvest(3)} u.build(Barracks,Right,5) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,Down,2) u.idle()} u.harvest(4) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;If_B_then_S;B;HasNumberOfUnits;Worker;7;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Left,20) for(Unit u){u.harvest(3) if(HasNumberOfUnits(Worker,7)) then {u.attack(Strongest)}} for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.harvest(3) for(Unit u){u.idle()}} u.train(Worker,Down,7) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;15;S;For_S;S;C;Idle;S;C;Build;Barracks;Left;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;S_S;S;C;Harvest;100;S;C;Train;Light;Up;9;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Left,15) for(Unit u){u.idle()} u.build(Barracks,Left,7) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} u.harvest(100) u.train(Light,Up,9) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Ranged;Left;5;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Train;Light;Left;9;S;S_S;S;C;Idle;S;C;Train;Worker;Up;4;S;For_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.harvest(7) u.train(Ranged,Left,5) for(Unit u){for(Unit u){u.build(Barracks,Up,9) u.train(Light,Left,9)} u.idle() u.train(Worker,Up,4) for(Unit u){u.train(Worker,Down,7)}} u.moveToUnit(Ally,LessHealthy) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;100;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Train;Ranged;Down;1;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;9;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Down,100) for(Unit u){u.harvest(3)} u.build(Barracks,Right,5) u.train(Ranged,Down,1) u.idle() u.moveToUnit(Enemy,Closest) u.harvest(9) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Train;Ranged;Down;1;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;C;Harvest;10;S;C;Train;Worker;Up;8	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,5) u.train(Ranged,Down,1) u.idle() u.moveToUnit(Enemy,Closest) for(Unit u){if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.train(Heavy,EnemyDir,7)}} else { u.harvest(10)}} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;2;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) for(Unit u){u.train(Ranged,Right,2)} u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Ranged,EnemyDir,20) u.attack(Farthest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.harvest(9) u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Ranged,EnemyDir,20) u.attack(Farthest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.harvest(9) u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Ranged,EnemyDir,20) u.attack(Farthest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;20;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.harvest(9) u.moveToUnit(Enemy,Farthest) u.moveAway() u.train(Ranged,EnemyDir,20) u.attack(Farthest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;100;S;S_S;S;C;Harvest;8;S;If_B_then_S;B;HasNumberOfUnits;Worker;7;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Barracks;Up;10;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,20) for(Unit u){for(Unit u){u.train(Ranged,Left,100)} u.harvest(8) if(HasNumberOfUnits(Worker,7)) then {u.idle() u.harvest(9) for(Unit u){u.build(Barracks,Up,10)}}} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.attack(MostHealthy)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;For_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.build(Barracks,Right,5) for(Unit u){u.harvest(10)} u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) for(Unit u){u.train(Heavy,Left,100)} u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Worker;Left;25;S;C;Attack;Closest	for(Unit u){u.harvest(4) u.train(Worker,Left,25) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Train;Worker;Down;15;S;S_S;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Harvest;3	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveAway() u.build(Barracks,EnemyDir,3) u.train(Worker,Down,15) u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) for(Unit u){u.train(Heavy,Left,100)} u.harvest(10) u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Left;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) for(Unit u){u.train(Heavy,Left,100)} u.harvest(10) u.attack(LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Strongest) u.train(Worker,Left,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;EnemyDir;20;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.attack(LessHealthy) u.moveToUnit(Enemy,Farthest) u.train(Ranged,EnemyDir,20) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} u.attack(Strongest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Down;15	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest)} u.attack(Strongest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,LessHealthy) u.train(Light,Down,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Up;15;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.moveToUnit(Enemy,MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,15)} u.attack(Strongest) u.moveToUnit(Enemy,Closest) u.train(Worker,Up,15) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;15;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,15) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;15;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.train(Worker,EnemyDir,6) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,15) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;C;Train;Worker;Down;4;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;6;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;15;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.train(Worker,Down,4) u.attack(Closest) u.train(Worker,EnemyDir,6) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,15) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;15;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.harvest(8) u.moveToUnit(Enemy,Farthest) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,15) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Up;15	for(Unit u){for(Unit u){u.idle()} u.harvest(1) u.harvest(6) for(Unit u){u.train(Heavy,EnemyDir,8)} u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Up,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;10;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,10) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Ranged;Down;10;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;10;S;C;Train;Ranged;Right;10	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.attack(LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Strongest) u.train(Ranged,Down,10)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,10) u.train(Ranged,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;10	for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,Right,5) u.attack(LessHealthy) u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,10)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Down;6;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Up,4) u.harvest(15) u.attack(Closest) for(Unit u){u.train(Heavy,Down,6)} u.train(Worker,Right,5)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Down;6;S;C;Train;Worker;Right;5	for(Unit u){u.idle() u.build(Barracks,Up,4) u.harvest(15) u.attack(Closest) for(Unit u){u.train(Heavy,Down,6)} u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Train;Heavy;Up;15;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.build(Barracks,Up,4) u.harvest(15) u.attack(Closest) for(Unit u){u.harvest(4) u.train(Heavy,Up,15) if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)}} u.train(Worker,Right,5) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Heavy;Up;15;S;C;Train;Worker;Right;5;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Up,4) u.harvest(15) u.attack(Weakest) for(Unit u){u.harvest(4) u.train(Heavy,Up,15)} u.train(Worker,Right,5) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Train;Light;Right;15;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(10) for(Unit u){u.build(Barracks,Right,9) u.train(Light,Right,15)} u.idle() u.attack(Strongest) for(Unit u){u.train(Worker,Down,7)}} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Train;Light;Right;15;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} for(Unit u){u.harvest(10) for(Unit u){u.build(Barracks,Right,9) u.train(Light,Right,15)} u.idle() u.attack(Strongest) for(Unit u){u.train(Worker,Up,7)}} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Train;Light;Right;15;S;C;Idle;S;For_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(10) for(Unit u){u.build(Barracks,Right,9) u.train(Light,Right,15)} u.idle() for(Unit u){u.train(Worker,Up,7)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Train;Light;Right;15;S;For_S;S;C;Train;Worker;Up;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;LessHealthy	for(Unit u){u.harvest(7) for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,9) u.train(Light,Right,15)} for(Unit u){u.train(Worker,Up,7)}} u.moveToUnit(Enemy,Closest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;C;Train;Light;Right;15;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Up;7;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Left,6)} for(Unit u){u.harvest(10) for(Unit u){u.build(Barracks,Right,9) u.train(Light,Right,15)} u.idle() u.attack(Strongest) for(Unit u){u.train(Worker,Up,7)}} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Left;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;S_S;S;For_S;S;C;Idle;S;C;Train;Light;Right;15;S;C;Attack;Strongest;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(10) for(Unit u){u.build(Barracks,Up,9) for(Unit u){u.idle()} u.train(Light,Right,15)} u.attack(Strongest) u.train(Worker,Left,8)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;Train;Heavy;Right;100;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;S_S;S;C;Idle;S;C;Attack;Strongest;S;C;Train;Worker;Left;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Heavy,Left,6)} u.train(Heavy,Right,100) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.idle() u.attack(Strongest) u.train(Worker,Left,8)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;S_S;S;C;Train;Light;Up;5;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Right,3)} u.attack(MostHealthy) for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.train(Light,Up,5) u.moveToUnit(Enemy,Strongest) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;C;Train;Worker;Right;8;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Ranged;Up;3;S;C;Idle;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;C;Train;Light;Up;2;S;C;Train;Heavy;Right;1	for(Unit u){u.train(Worker,Right,8) u.attack(LessHealthy) for(Unit u){u.harvest(4)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(6) for(Unit u){u.train(Ranged,Up,3)} u.idle() u.build(Barracks,EnemyDir,8)} u.train(Light,Up,2) u.train(Heavy,Right,1)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;C;Train;Light;Up;5;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Right,3)} u.attack(MostHealthy) for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.train(Light,Up,5) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;C;Train;Light;Up;5;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5) u.idle()} for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.train(Light,Up,5) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Train;Heavy;Left;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;9;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.idle() u.build(Barracks,Up,9) u.attack(Weakest)} u.moveToUnit(Ally,Closest) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.train(Light,Right,3)} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(MostHealthy)} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;8;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;MoveAway;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){for(Unit u){u.train(Light,Right,3)} u.harvest(2) u.idle()} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.harvest(8) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(MostHealthy)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.moveAway()}} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;15	for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,15)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Base;EnemyDir;100;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;8;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.harvest(25) for(Unit u){u.idle()} for(Unit u){u.build(Base,EnemyDir,100)}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,8) for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Left,4) u.harvest(4) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;25;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Attack;Weakest	for(Unit u){u.harvest(25) u.idle() u.train(Worker,Down,25) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;25	for(Unit u){u.harvest(4) u.attack(Weakest) u.train(Worker,Left,25)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;C;Train;Heavy;Down;50;S;S_S;S;C;Harvest;15;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;2;S;C;Build;Barracks;Left;3;S;If_B_then_S;B;IsBuilder;S;C;Idle	for(Unit u){u.train(Worker,Left,50) u.train(Heavy,Down,50) u.harvest(15) u.attack(LessHealthy) for(Unit u){if(u.isBuilder()) then {u.harvest(2) u.build(Barracks,Left,3)} if(u.isBuilder()) then {u.idle()}}}
S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Heavy;Down;2;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Idle;S;C;Harvest;7	for(Unit u){u.train(Worker,Left,50) u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.moveToUnit(Ally,Farthest) u.train(Heavy,Down,2) for(Unit u){u.harvest(5) u.build(Barracks,EnemyDir,10) u.idle() u.harvest(7)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Up;4;S;Empty;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Heavy;Down;2;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;EnemyDir;10	for(Unit u){u.train(Worker,Left,50) u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Up,4)} else { e} for(Unit u){u.idle()} u.attack(Weakest) u.moveToUnit(Ally,Farthest) u.train(Heavy,Down,2) for(Unit u){u.harvest(5) u.build(Barracks,EnemyDir,10)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;S_S;S;S_S;S;C;Harvest;20;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Up;4;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Heavy;Down;2;S;For_S;S;S_S;S;C;Harvest;5;S;C;Build;Barracks;EnemyDir;10	for(Unit u){u.train(Worker,Left,50) u.harvest(20) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Up,4)} else { u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} u.attack(MostHealthy) u.moveToUnit(Ally,Farthest) u.train(Heavy,Down,2) for(Unit u){u.harvest(5) u.build(Barracks,EnemyDir,10)}}
S;For_S;S;S_S;S;C;Train;Worker;Left;50;S;S_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Heavy;Up;4;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Heavy;Down;2;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;EnemyDir;10	for(Unit u){u.train(Worker,Left,50) u.harvest(25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Heavy,Up,4)} else { e} for(Unit u){u.idle()} u.attack(Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest) u.train(Heavy,Down,2) for(Unit u){u.harvest(7) u.build(Barracks,EnemyDir,10)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;7;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Farthest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;4;S;C;Train;Light;Up;50;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Up;9	for(Unit u){u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Right,7)} u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Farthest)}}} u.train(Worker,Left,4) u.train(Light,Up,50) for(Unit u){u.idle()} for(Unit u){u.harvest(6)} u.train(Worker,Up,9)}
S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest	for(Unit u){u.harvest(9)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,Weakest) u.attack(Closest)}
S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;20;S;C;Attack;Closest	for(Unit u){u.harvest(9)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,20) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Idle;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;EnemyDir;20;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3) u.idle()} u.harvest(9)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,Weakest) u.train(Worker,EnemyDir,20) u.attack(Closest)}
S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;S_S;S;C;Build;Barracks;Down;6;S;C;Idle;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Ranged;Right;15;S;For_S;S;C;Harvest;20	for(Unit u){u.harvest(9)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6) u.idle()} for(Unit u){u.train(Light,Up,5)} u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.moveToUnit(Enemy,Farthest) u.train(Ranged,Right,15) for(Unit u){u.harvest(20)}}
S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Heavy;Right;25;S;C;Train;Ranged;Down;8;S;For_S;S;C;Harvest;20	for(Unit u){u.harvest(2)} for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Light,Up,5)} u.idle() u.attack(Closest) u.train(Heavy,Right,25) u.train(Ranged,Down,8) for(Unit u){u.harvest(20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Build;Barracks;Down;6;S;For_S;S;C;Train;Light;Up;5;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;C;Train;Ranged;Down;8;S;For_S;S;C;Harvest;20	for(Unit u){u.train(Worker,Down,10) for(Unit u){u.build(Barracks,Down,6)} for(Unit u){u.train(Light,Up,5)} u.idle() u.attack(Closest) u.train(Ranged,Down,8) for(Unit u){u.harvest(20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;C;Harvest;6;S;For_S;S;C;Idle;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Up,6) u.train(Heavy,EnemyDir,20) for(Unit u){u.build(Barracks,Right,100)} u.harvest(6) for(Unit u){u.idle()} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;6;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;For_S;S;C;Idle;S;C;Harvest;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,Right,6) u.train(Heavy,EnemyDir,20) for(Unit u){u.build(Barracks,Right,5)} if(OpponentHasNumberOfUnits(Barracks,1)) then {for(Unit u){u.idle()}} u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.canHarvest()) then {e} else { u.moveAway()}}} u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;6;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;5;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;1;S;For_S;S;C;Idle;S;C;Harvest;100;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Worker,Right,6) u.train(Heavy,EnemyDir,20) for(Unit u){u.build(Barracks,Right,5)} if(OpponentHasNumberOfUnits(Barracks,1)) then {for(Unit u){u.idle()}} u.harvest(100) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;C;Build;Barracks;Right;100;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;1;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Right,6) u.train(Heavy,EnemyDir,20) for(Unit u){u.build(Barracks,Right,100)} u.harvest(6) if(HasNumberOfUnits(Worker,1)) then {u.attack(Closest)} else { u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle()}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Down;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Up;50;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;7;S;C;Train;Ranged;Left;10;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {e} else { u.train(Heavy,Down,4)}} for(Unit u){u.train(Worker,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Up,50)} for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(7) u.train(Ranged,Left,10) u.attack(Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Up;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.train(Heavy,Right,4)}} for(Unit u){u.train(Worker,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Up,4)} for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Heavy;Right;4;S;C;Harvest;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasNumberOfUnits;Base;1;S;C;Train;Light;Up;4;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){u.idle() u.train(Heavy,Right,4) u.harvest(4)} for(Unit u){u.train(Worker,EnemyDir,7) if(HasNumberOfUnits(Base,1)) then {u.train(Light,Up,4)} for(Unit u){u.harvest(6)} u.build(Barracks,EnemyDir,1) u.harvest(7) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;C;Build;Barracks;Up;2;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;100;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Right,6) u.train(Heavy,Up,20) u.build(Barracks,Up,2) u.harvest(20) for(Unit u){u.idle()} u.train(Ranged,EnemyDir,100) u.attack(Weakest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Up;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.train(Heavy,Right,4)}} for(Unit u){u.train(Worker,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Up,4)} for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Up;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.train(Heavy,Right,4)}} for(Unit u){u.train(Worker,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Up,4)} for(Unit u){u.idle()} u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Light;Up;4;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.train(Heavy,Right,4)}} for(Unit u){u.train(Worker,EnemyDir,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Light,Up,4)} for(Unit u){u.idle()} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Train;Heavy;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.train(Heavy,Right,4)}} for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,EnemyDir,7) for(Unit u){u.idle()} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Worker;Up;9;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;EnemyDir;50;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Strongest	for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)} u.train(Worker,Up,9) for(Unit u){u.idle() u.harvest(8) u.train(Heavy,EnemyDir,50)}} for(Unit u){u.build(Barracks,EnemyDir,1) u.attack(Strongest)}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){if(u.isBuilder()) then {e} else { u.train(Worker,Right,4)}} for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,EnemyDir,7) for(Unit u){u.idle()} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){if(u.is(Ranged)) then {u.moveToUnit(Ally,Weakest)}} for(Unit u){u.harvest(3)}} for(Unit u){u.idle() for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.train(Light,Down,6)}} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;7;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Down;6;S;C;Harvest;2;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Enemy,Strongest)} else { u.train(Light,Down,6)} u.harvest(2)} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;S_S;S;For_S;S;C;Harvest;25;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;1;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway	for(Unit u){for(Unit u){u.train(Heavy,Right,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(25)} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Heavy,1)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}}} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.moveToUnit(Enemy,Farthest) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;Empty;S;C;Harvest;3;S;C;Harvest;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(50)) then {e} else { u.harvest(3)} u.harvest(2)} for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Right;6;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;7;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Harvest;2;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle() u.train(Ranged,Right,6)} for(Unit u){if(HasNumberOfWorkersHarvesting(7)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Strongest)} else { e} u.harvest(2)} u.harvest(6) u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;For_S;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.moveAway()}} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;3;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(3)} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(3)} u.build(Barracks,Down,1) u.harvest(7) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,Closest)} u.build(Barracks,Down,1) u.harvest(7) u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;100	for(Unit u){u.attack(MostHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Strongest)} u.train(Worker,Up,100)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;Attack;Strongest;S;C;Train;Worker;Up;100	for(Unit u){for(Unit u){u.idle() if(u.canAttack()) then {u.attack(Strongest)}} u.train(Worker,Up,100)}
S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;4	for(Unit u){u.attack(Closest) u.train(Worker,Up,100) for(Unit u){u.harvest(4)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;6;S;C;Attack;MostHealthy	for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Down,50) u.train(Worker,Down,4) u.harvest(3) u.build(Barracks,Right,6) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;3;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Train;Worker;Down;5;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Worker;EnemyDir;100;S;For_S;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){for(Unit u){u.train(Worker,Down,3)} u.idle() u.harvest(3) u.train(Worker,Down,5)} u.harvest(5) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Worker,EnemyDir,100)}} for(Unit u){u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;C;Train;Heavy;Down;50;S;S_S;S;C;Train;Worker;Down;4;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Right;6;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Down,50) u.train(Worker,Down,4) u.harvest(3) u.build(Barracks,Right,6) if(u.canAttack()) then {u.idle()} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Train;Heavy;Left;6;S;S_S;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Worker;Up;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() for(Unit u){u.train(Light,EnemyDir,2)} u.train(Heavy,Left,6) u.build(Barracks,EnemyDir,7) u.train(Worker,Up,7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;6;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;C;Build;Barracks;Down;7;S;C;Train;Worker;Up;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() if(HasNumberOfUnits(Base,6)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.train(Heavy,Left,6) u.build(Barracks,Down,7) u.train(Worker,Up,7) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;Empty;S;S_S;S;C;Build;Barracks;Down;7;S;C;Train;Worker;Up;7;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.train(Heavy,Left,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()} else { e} u.build(Barracks,Down,7) u.train(Worker,Up,7) u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;6	for(Unit u){u.train(Worker,Right,3)} for(Unit u){if(u.canAttack()) then {u.harvest(2) u.build(Barracks,Left,20) u.attack(Closest)}} for(Unit u){u.train(Ranged,Left,6)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;6	for(Unit u){u.train(Worker,Right,3)} for(Unit u){if(u.canAttack()) then {u.harvest(2) u.build(Barracks,Left,20) u.harvest(25) u.attack(Closest)}} for(Unit u){u.train(Ranged,Left,6)}
S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;Attack;Closest;S;C;Build;Barracks;Right;5;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Farthest;S;S_S;S;C;MoveAway;S;C;Train;Worker;Right;7;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty	for(Unit u){for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.attack(Closest)} else { u.build(Barracks,Right,5)}} u.harvest(4) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Ally,LessHealthy)} else { e}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(20)} else { u.moveToUnit(Ally,Closest) u.attack(Farthest)} u.moveAway() u.train(Worker,Right,7) u.moveToUnit(Ally,Strongest) u.train(Heavy,EnemyDir,20) if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Weakest)} else { e}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;15;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Base;6;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;C;Harvest;100;S;C;Train;Worker;Up;7;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Right,15)} u.idle() if(HasNumberOfUnits(Base,6)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}} u.build(Barracks,Left,7) u.harvest(100) u.train(Worker,Up,7) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;2;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Build;Barracks;Down;9;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;25;S;C;Attack;Strongest;S;C;Train;Worker;Down;7	for(Unit u){for(Unit u){u.idle()} if(OpponentHasNumberOfUnits(Heavy,2)) then {u.moveToUnit(Ally,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.moveToUnit(Enemy,Strongest)} else { e} u.build(Barracks,Down,9) for(Unit u){u.harvest(5)} for(Unit u){u.train(Ranged,Left,25)} u.attack(Strongest) u.train(Worker,Down,7)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.idle() u.train(Light,Left,8)} for(Unit u){for(Unit u){u.harvest(1)} u.harvest(4) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Harvest;4;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.idle() u.train(Light,Left,8)} for(Unit u){for(Unit u){u.harvest(1)} u.harvest(4) u.attack(Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Harvest;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle() u.train(Light,Left,8)} for(Unit u){u.harvest(3) u.harvest(50) u.attack(Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;8;S;For_S;S;C;Idle;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Light;Left;9;S;S_S;S;C;Harvest;3;S;C;Harvest;50;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(8)} for(Unit u){u.idle()} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.train(Light,Left,8)} for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Light,Left,9)}} u.harvest(3) u.harvest(50) u.attack(Closest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;8;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Light;Left;9;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(8)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.canAttack()) then {u.moveToUnit(Ally,Strongest)}}} for(Unit u){u.train(Light,Left,8)} for(Unit u){for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Light,Left,9)}} u.attack(Strongest) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Harvest;50;S;C;Train;Ranged;Down;20;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.harvest(3) u.harvest(50) u.train(Ranged,Down,20) u.moveToUnit(Enemy,Farthest) u.moveAway()}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Down;1;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle() for(Unit u){u.train(Light,Down,1)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Heavy;2;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveAway	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} for(Unit u){u.idle()}} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(OpponentHasNumberOfUnits(Heavy,2)) then {for(Unit u){u.moveToUnit(Enemy,Closest)}} u.moveToUnit(Ally,MostHealthy)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Farthest) u.moveAway()}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.train(Light,Up,50) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;50;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.idle()}} for(Unit u){u.train(Light,Up,50) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.attack(Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Ally,Strongest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle()} for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;C;Train;Worker;Up;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;100;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Heavy,Up,9) u.build(Barracks,Up,100) u.train(Worker,Up,4) if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(100)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}} for(Unit u){u.idle() if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.train(Light,EnemyDir,20) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.attack(Farthest) u.moveToUnit(Enemy,Closest)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;C;Build;Barracks;Up;100;S;S_S;S;S_S;S;C;Harvest;50;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;10	for(Unit u){u.train(Worker,Right,6) u.build(Barracks,Up,100) u.harvest(50) u.attack(Closest) for(Unit u){u.train(Heavy,Up,10)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;100;S;C;Train;Worker;Down;2;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,100) u.train(Worker,Down,2) u.harvest(3) u.train(Worker,Right,3) u.attack(Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;100;S;C;Train;Ranged;Down;2;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,100) u.train(Ranged,Down,2) u.harvest(3) u.train(Worker,Right,3) u.attack(Closest) u.moveToUnit(Ally,Strongest) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;100;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,100) u.harvest(3) u.train(Worker,Right,3) u.attack(Closest) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;15;S;S_S;S;S_S;S;C;Train;Worker;Right;3;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Closest;S;C;Train;Heavy;Down;6	for(Unit u){u.build(Barracks,Right,10) for(Unit u){u.idle()} u.harvest(15) u.train(Worker,Right,3) if(u.HasUnitInOpponentRange()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.attack(Closest) u.train(Heavy,Down,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;100;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,100) u.harvest(3) u.train(Worker,Right,3) u.attack(Closest) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){u.idle()} u.train(Ranged,Right,1) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;100;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;If_B_then_S_else_S;B;is_Type;Worker;S;Empty;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Train;Worker;Right;3;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Right;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.build(Barracks,Right,100) for(Unit u){if(HaveQtdUnitsAttacking(6)) then {if(u.is(Worker)) then {e} else { u.moveAway()}}} u.harvest(3) u.train(Worker,Right,3) u.attack(Closest) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){u.idle()} u.train(Ranged,Right,1) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Down;2;S;C;MoveAway	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {u.attack(LessHealthy)} else { e} u.build(Barracks,Up,50) u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Down,2) u.moveAway()}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Left;2;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { e} u.build(Barracks,Up,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Left,2)} u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.moveAway() u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Left;2;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Left;3;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { e} u.build(Barracks,Up,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Left,2)} u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Left,3) u.moveAway() u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Worker;Left;2;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Left;3;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { e} u.build(Barracks,Left,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Worker,Left,2)} u.harvest(6) u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Left,3) u.moveAway() u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;For_S;S;C;Idle;S;Empty;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;6;S;C;Train;Worker;Left;2;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Left;3;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle()}} else { e} u.build(Barracks,Left,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6)}} else { u.train(Worker,Left,2)} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Left,3) u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Heavy;Up;6;S;C;MoveAway;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Left;3;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() u.build(Barracks,Left,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6)} u.train(Heavy,Up,6)} else { u.moveAway()} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Left,3) u.moveAway() u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;C;Build;Barracks;Left;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Harvest;6;S;C;Train;Heavy;Up;6;S;Empty;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;15;S;C;Train;Worker;Left;3;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;EnemyDir;4	for(Unit u){u.idle() u.moveToUnit(Ally,MostHealthy) u.build(Barracks,Left,50) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6)} u.train(Heavy,Up,6)} else { e} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Right,15) u.train(Worker,Left,3) u.moveToUnit(Ally,Strongest) u.train(Light,EnemyDir,4)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;S_S;S;S_S;S;C;Train;Heavy;Left;6;S;C;Train;Ranged;Left;15;S;C;Build;Barracks;Down;7;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() u.train(Worker,Down,9) u.train(Heavy,Left,6) u.train(Ranged,Left,15) u.build(Barracks,Down,7) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Down;9;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Down;7;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() u.train(Worker,Down,9) u.train(Heavy,Left,6) u.build(Barracks,Down,7) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;9;S;S_S;S;C;Train;Heavy;Left;6;S;C;Build;Barracks;Down;7;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.harvest(6)} u.idle() u.train(Worker,Left,9) u.train(Heavy,Left,6) u.build(Barracks,Down,7) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Heavy;Down;5;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Idle;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Left;5	for(Unit u){u.train(Worker,Right,8) u.moveToUnit(Enemy,Farthest) for(Unit u){u.train(Heavy,Down,5)} u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} else { e} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.idle()} else { u.attack(Farthest)}} if(u.HasUnitInOpponentRange()) then {e} else { u.train(Heavy,Up,100)} for(Unit u){u.harvest(7) u.build(Barracks,Left,5)}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(7) u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,9)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Light,Down,7) u.attack(Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(7) u.attack(Weakest) for(Unit u){u.build(Barracks,EnemyDir,9)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Light,Down,7) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(7) u.attack(Strongest) for(Unit u){u.build(Barracks,EnemyDir,9)}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;4;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;7;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;EnemyDir;9	for(Unit u){u.train(Worker,Left,4)} for(Unit u){u.train(Light,Down,7) u.moveToUnit(Enemy,Closest) u.train(Ranged,Down,50) for(Unit u){u.harvest(7) u.attack(Strongest) for(Unit u){u.build(Barracks,EnemyDir,9)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;7;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;Farthest;S;Empty;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.train(Light,EnemyDir,7) if(u.canAttack()) then {u.attack(Farthest)} else { e} u.train(Ranged,Down,50) for(Unit u){for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.harvest(7)}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Light;EnemyDir;7;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.attack(Strongest) u.train(Light,EnemyDir,7) u.train(Ranged,Down,50) for(Unit u){u.harvest(7) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.idle()}}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;7;S;S_S;S;C;Train;Ranged;Up;4;S;C;Train;Ranged;Down;50;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,Closest) u.train(Light,Right,7) u.train(Ranged,Up,4) u.train(Ranged,Down,50) for(Unit u){u.harvest(7) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.moveToUnit(Ally,MostHealthy) for(Unit u){u.harvest(7) for(Unit u){u.build(Barracks,Left,10)} for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;Right;10	for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,Right,10)}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.idle()} u.attack(Closest) for(Unit u){u.harvest(20)} u.train(Worker,Down,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Left;50;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(9)} for(Unit u){u.idle() u.train(Heavy,Left,50)} u.train(Worker,Down,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Heavy;Up;15;S;C;Attack;Closest;S;C;Train;Worker;Down;15	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(9)} for(Unit u){u.train(Heavy,Up,15) u.attack(Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;9;S;For_S;S;S_S;S;C;Train;Heavy;Up;15;S;C;Attack;Closest;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(9)} for(Unit u){u.train(Heavy,Up,15) u.attack(Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.attack(MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest) u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,3) for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,6) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;Closest;S;C;Train;Ranged;Up;20	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Farthest)} u.train(Heavy,Up,15) u.train(Worker,Up,6) u.attack(Closest)} u.train(Ranged,Up,20)}
S;For_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;Harvest;4;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Left,5) u.harvest(4) u.idle() u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;Right;100;S;C;Attack;Weakest	for(Unit u){u.harvest(10) u.train(Worker,Right,100) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Harvest;10;S;S_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Worker;Right;100;S;For_S;S;C;Idle	for(Unit u){u.harvest(10) u.attack(Strongest) u.train(Worker,Right,100) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Train;Light;Left;7;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Down;100;S;C;Attack;Weakest	for(Unit u){u.harvest(5) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.train(Light,Left,7)} else { u.idle()}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10) u.build(Barracks,Down,100) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10	for(Unit u){u.harvest(5) u.attack(LessHealthy) u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;Left;8;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;4;S;C;Train;Light;Left;7;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Down;100;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Heavy;Up;2	for(Unit u){u.harvest(5) u.train(Light,Left,8) for(Unit u){if(HaveQtdUnitsAttacking(4)) then {u.train(Light,Left,7)} else { u.idle()}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10) u.build(Barracks,Down,100) u.attack(Weakest) if(u.canAttack()) then {e} else { u.train(Heavy,Up,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;Left;8;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;C;Train;Light;Left;7;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Down;100;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Heavy;Up;2	for(Unit u){u.harvest(5) u.train(Light,Left,8) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {u.train(Light,Left,7)} else { u.idle()}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10) u.build(Barracks,Down,100) u.attack(Weakest) if(u.canAttack()) then {e} else { u.train(Heavy,Up,2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;Left;8;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Weakest;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Down;100;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Heavy;Up;7	for(Unit u){u.harvest(5) u.train(Light,Left,8) for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Weakest)} else { u.idle()}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10) u.build(Barracks,Down,100) u.attack(Weakest) if(u.canAttack()) then {e} else { u.train(Heavy,Up,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Train;Light;Left;8;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;Empty;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Up;10;S;C;Build;Barracks;Down;100;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Heavy;Up;7	for(Unit u){u.harvest(5) u.train(Light,Left,8) for(Unit u){if(HaveQtdUnitsAttacking(5)) then {e} else { u.idle()}} u.moveToUnit(Ally,Strongest) u.train(Worker,Up,10) u.build(Barracks,Down,100) u.attack(Weakest) if(u.canAttack()) then {e} else { u.train(Heavy,Up,7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,50) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.attack(Farthest)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.idle() u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,50) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,50) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.idle() u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,50) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;50;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,LessHealthy) u.attack(MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,50) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Idle;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) u.idle() for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.attack(LessHealthy)}} u.moveToUnit(Ally,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,7) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){if(u.canHarvest()) then {u.idle()}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,7) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,7) for(Unit u){if(u.canHarvest()) then {u.idle()}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,7) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;Train;Worker;Up;20	for(Unit u){for(Unit u){u.harvest(3)} u.idle() u.attack(Closest) u.train(Worker,Up,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;S_S;S;C;Build;Barracks;Right;1;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;1;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Ranged;Up;7;S;For_S;S;C;Harvest;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Right,1) if(u.isBuilder()) then {u.harvest(15)} else { if(HasLessNumberOfUnits(Worker,1)) then {for(Unit u){u.train(Worker,Right,4)}}} u.train(Worker,Up,3) u.attack(Closest) for(Unit u){u.train(Ranged,Up,7)} for(Unit u){u.harvest(2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;7;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;50;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;100;S;C;Attack;Strongest;S;C;Train;Heavy;Left;15;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(Closest) u.train(Worker,Left,7) if(u.HasUnitWithinDistanceFromOpponent(50)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,100)} u.attack(Strongest)}}} u.train(Heavy,Left,15) for(Unit u){u.idle()} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;9;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;20;S;C;Train;Worker;Up;50;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;100;S;C;Train;Ranged;Down;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.harvest(10)}} for(Unit u){u.build(Barracks,Down,4) u.moveToUnit(Enemy,Closest) u.moveAway() u.moveToUnit(Ally,Closest) u.train(Worker,Left,20)} u.train(Worker,Up,50) u.attack(Closest) for(Unit u){u.harvest(100)} u.train(Ranged,Down,5)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;9;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;C;Train;Worker;Up;50;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;100;S;C;Train;Ranged;Down;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.harvest(10)}} for(Unit u){u.build(Barracks,Down,4)} u.train(Worker,Up,50) u.attack(Closest) for(Unit u){u.harvest(100)} u.train(Ranged,Down,5)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;9;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;Farthest;S;C;Train;Worker;Up;50;S;C;Train;Ranged;Down;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.harvest(10)}} for(Unit u){u.build(Barracks,Down,4) u.attack(Farthest)} u.train(Worker,Up,50) u.train(Ranged,Down,5)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;9;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;C;Harvest;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;Farthest;S;C;Train;Worker;Up;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Ranged;Down;5;S;For_S;S;C;Train;Heavy;Down;5	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HasNumberOfUnits(Ranged,9)) then {for(Unit u){u.moveToUnit(Ally,Farthest)}} else { u.harvest(10)}} for(Unit u){u.build(Barracks,Down,4) u.attack(Farthest)} u.train(Worker,Up,50) for(Unit u){u.moveToUnit(Enemy,Strongest)} u.train(Ranged,Down,5) for(Unit u){u.train(Heavy,Down,5)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Harvest;2;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Right;3;S;C;Train;Worker;Left;7;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;C;Train;Ranged;EnemyDir;50;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest	for(Unit u){u.idle() for(Unit u){u.harvest(2)} u.harvest(4) u.attack(Strongest) u.train(Light,Right,3) u.train(Worker,Left,7) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Left,2)}}} u.train(Heavy,Left,15) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} u.train(Ranged,EnemyDir,50) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Idle;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;C;Train;Ranged;Right;100;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;2	for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Strongest)} u.idle() u.moveToUnit(Ally,Weakest) u.train(Light,Left,4) if(u.canAttack()) then {u.attack(LessHealthy)} else { u.train(Ranged,Right,100)} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Ranged;Right;100;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;2	for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Strongest)} u.idle() u.attack(MostHealthy) u.moveToUnit(Ally,Weakest) u.train(Light,Left,4) if(u.canAttack()) then {e} else { u.train(Ranged,Right,100)} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Light;Left;4;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Ranged;Right;100;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;2	for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Strongest)} u.idle() u.attack(Closest) u.moveToUnit(Ally,Weakest) u.train(Light,Left,4) if(u.canAttack()) then {e} else { u.train(Ranged,Right,100)} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;For_S;S;C;Train;Light;Right;5;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;9;S;C;Idle;S;For_S;S;C;Harvest;20;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;C;Build;Barracks;Left;1;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;7	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.train(Light,Right,5)} if(u.HasUnitWithinDistanceFromOpponent(9)) then {u.idle()}} for(Unit u){u.harvest(20)} u.train(Heavy,EnemyDir,6) u.build(Barracks,Left,1) for(Unit u){u.attack(Weakest)} u.train(Worker,Right,7)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;4;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;2	for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Strongest)} u.idle() u.attack(Closest) u.moveToUnit(Ally,Weakest) u.train(Light,Left,4) u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Idle;S;C;Harvest;6;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Harvest;6;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;9;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Left;100;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Train;Ranged;Right;1;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.idle() u.harvest(6)} else { e}} u.train(Heavy,Down,10) u.moveToUnit(Ally,Weakest) u.attack(MostHealthy) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(1)}} u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(6)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,LessHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,Weakest)} else { e} for(Unit u){if(u.canHarvest()) then {u.moveToUnit(Ally,Closest)} else { u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(9)}} u.moveToUnit(Ally,LessHealthy) u.train(Worker,Left,100) u.attack(Farthest) u.moveToUnit(Ally,MostHealthy)}} else { e} for(Unit u){u.build(Barracks,Down,2)} u.train(Ranged,Right,1) u.train(Worker,EnemyDir,7) if(u.canHarvest()) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;50;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Harvest;10;S;C;Train;Ranged;Up;25;S;If_B_then_S_else_S;B;CanAttack;S;C;Attack;LessHealthy;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;2	for(Unit u){if(HaveQtdUnitsAttacking(50)) then {u.moveToUnit(Enemy,Strongest)} u.harvest(10) u.train(Ranged,Up,25) if(u.canAttack()) then {u.attack(LessHealthy)} else { e} u.train(Worker,Up,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(2)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;25;S;C;Attack;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(25) u.attack(Strongest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;For_S;S;C;Harvest;20;S;C;MoveAway;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.harvest(20)} u.moveAway()} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;For_S;S;C;Train;Worker;EnemyDir;10;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Worker,Down,3) u.build(Barracks,Up,50) if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} for(Unit u){u.train(Worker,EnemyDir,10)} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;3;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;100;S;C;Harvest;20;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,3) u.build(Barracks,Up,50) if(u.HasUnitWithinDistanceFromOpponent(2)) then {if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)}} for(Unit u){u.train(Light,Right,100)} u.harvest(20) for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) u.attack(Strongest) u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.moveToUnit(Ally,Strongest) u.moveAway() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.train(Ranged,Right,1) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.moveToUnit(Ally,Strongest) u.moveAway() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Up,1) if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.train(Ranged,Right,1) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;4;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.moveToUnit(Ally,Strongest) u.train(Light,Left,4) u.moveAway() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Up,1) if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.train(Ranged,Right,1) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;4;S;C;MoveAway;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.moveToUnit(Ally,Strongest) u.train(Light,Left,4) u.moveAway() if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.train(Worker,Up,1) if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.train(Ranged,Right,1) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) if(u.HasUnitInOpponentRange()) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}} u.moveAway() u.train(Worker,Up,1) if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.train(Ranged,Right,1) u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;5;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}} u.train(Ranged,EnemyDir,5) u.train(Worker,Up,1) if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;5;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;4;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(4) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.train(Ranged,EnemyDir,5) if(HasLessNumberOfUnits(Ranged,4)) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;5;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Heavy;4;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;3;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;Strongest;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(4) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)} u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) u.train(Ranged,EnemyDir,5) if(HasLessNumberOfUnits(Heavy,4)) then {e} else { u.moveToUnit(Enemy,Farthest)} u.harvest(100) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.canAttack()) then {u.harvest(3)}} if(u.is(Barracks)) then {for(Unit u){u.attack(Strongest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;100;S;C;Attack;Closest;S;For_S;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Up,4) if(u.canAttack()) then {u.harvest(100) u.attack(Closest)} for(Unit u){u.train(Light,EnemyDir,20)} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;Train;Worker;Left;3;S;For_S;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;4	for(Unit u){for(Unit u){u.train(Heavy,Down,10)} u.idle() u.attack(MostHealthy) u.moveToUnit(Ally,Weakest) u.train(Worker,Left,3) for(Unit u){u.build(Barracks,Up,2)} for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;4;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Harvest;100;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Closest;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;C;Train;Light;EnemyDir;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Up,4) if(u.canAttack()) then {u.harvest(100) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Closest)}} u.attack(LessHealthy)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()} u.train(Light,EnemyDir,20)} u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;EnemyDir;15;S;Empty;S;S_S;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,EnemyDir,3) u.build(Barracks,EnemyDir,15)}} else { e}} u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;EnemyDir;15;S;Empty;S;S_S;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;Right;10	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,EnemyDir,3) u.build(Barracks,EnemyDir,15)}} else { e}} u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,Right,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;EnemyDir;9;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;4;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.harvest(3) u.train(Heavy,EnemyDir,9) u.build(Barracks,Down,5) if(HasLessNumberOfUnits(Ranged,4)) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;If_B_then_S_else_S;B;CanHarvest;S;C;Attack;LessHealthy;S;Empty;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,10)} u.train(Light,Down,20) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.harvest(6)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveAway() if(u.canHarvest()) then {u.attack(LessHealthy)} else { e} for(Unit u){u.harvest(3)} for(Unit u){u.train(Heavy,Right,25)} for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;EnemyDir;5	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,10)} u.train(Light,Down,20) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.harvest(6)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveAway() for(Unit u){u.harvest(3)} for(Unit u){u.train(Light,EnemyDir,4)} for(Unit u){u.train(Heavy,Right,25)} for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Harvest;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;50;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;6;S;Empty;S;For_S;S;C;Train;Light;Left;7;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Worker;Down;1;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,2)} u.train(Light,Down,20) if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.harvest(6)} if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} if(u.canHarvest()) then {u.harvest(50)} else { e} u.moveToUnit(Enemy,LessHealthy) u.moveAway() if(HasLessNumberOfUnits(Light,6)) then {e} else { for(Unit u){u.train(Light,Left,7)}} for(Unit u){u.harvest(3)} for(Unit u){u.train(Light,EnemyDir,4)} for(Unit u){u.train(Heavy,Right,25)} for(Unit u){u.idle()} u.attack(Strongest) u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Down,1) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;6;S;Empty;S;For_S;S;C;Train;Light;Left;7;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;C;Train;Heavy;Right;25;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;Train;Worker;Left;15;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Down;1;S;C;Train;Worker;EnemyDir;5	for(Unit u){u.idle() for(Unit u){u.build(Barracks,EnemyDir,2)} u.train(Light,Down,20) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.moveToUnit(Enemy,Farthest)} u.moveToUnit(Enemy,LessHealthy) u.moveAway() if(HasLessNumberOfUnits(Light,6)) then {e} else { for(Unit u){u.train(Light,Left,7)}} for(Unit u){u.harvest(3)} for(Unit u){u.train(Light,EnemyDir,4)} for(Unit u){u.harvest(6) u.train(Heavy,Right,25)} u.attack(Strongest) for(Unit u){u.idle()} u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(10)) then {if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.train(Worker,Left,15)} else { for(Unit u){u.attack(LessHealthy)}}}} u.train(Worker,Down,1) u.train(Worker,EnemyDir,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;100;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(6)} u.attack(Closest) u.train(Worker,Left,7) u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(50)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,100)}}}} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;EnemyDir;15;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,EnemyDir,3) u.build(Barracks,EnemyDir,15)}} else { e}} u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){u.harvest(8)} u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;20;S;For_S;S;C;Harvest;2;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Worker;Left;7;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Worker;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Train;Heavy;Left;15;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;5;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.build(Barracks,Right,20) for(Unit u){u.harvest(2)} u.harvest(4) u.train(Light,Down,5) u.attack(Closest) for(Unit u){u.idle()} u.train(Worker,Left,7) if(u.HasUnitInOpponentRange()) then {if(u.is(Worker)) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(Closest)}}} else { for(Unit u){u.harvest(3) u.attack(MostHealthy)}}} u.train(Heavy,Left,15) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) if(OpponentHasNumberOfUnits(Ranged,5)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(u.is(Barracks)) then {for(Unit u){u.attack(LessHealthy)}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Strongest)} else { e} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Attack;Closest;S;C;Train;Worker;Left;20	for(Unit u){if(u.canHarvest()) then {u.attack(Closest)} u.train(Worker,Left,20)}
S;For_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;5;S;C;Train;Worker;Left;20	for(Unit u){if(u.canHarvest()) then {u.attack(Closest) for(Unit u){u.harvest(5)}} u.train(Worker,Left,20)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;100;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy	for(Unit u){u.harvest(3) u.idle() u.train(Worker,Right,100) u.moveToUnit(Ally,Closest) if(u.isBuilder()) then {u.attack(MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Train;Worker;EnemyDir;20;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.harvest(6) u.train(Worker,EnemyDir,20) for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Heavy;EnemyDir;7;S;C;Harvest;3;S;S_S;S;C;Idle;S;C;Train;Worker;Right;4;S;C;Attack;Farthest	for(Unit u){u.build(Barracks,Down,1) if(u.canAttack()) then {for(Unit u){u.train(Heavy,EnemyDir,7)}} u.harvest(3) u.idle() u.train(Worker,Right,4) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;9;S;C;Attack;LessHealthy;S;C;Train;Worker;Right;8;S;For_S;S;C;Train;Ranged;Right;15;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;Down;2;S;Empty	for(Unit u){u.harvest(9) u.attack(LessHealthy) u.train(Worker,Right,8) for(Unit u){u.train(Ranged,Right,15)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Down,2)}} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;Idle;S;C;Build;Barracks;Down;6;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;Attack;Weakest	for(Unit u){if(u.isBuilder()) then {u.idle()} u.build(Barracks,Down,6) u.train(Worker,Left,9)} for(Unit u){u.harvest(2) u.train(Light,EnemyDir,5) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Train;Heavy;Up;100;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Down;10;S;C;Attack;Farthest;S;C;Train;Worker;Right;8	for(Unit u){u.train(Heavy,Up,100)} for(Unit u){u.train(Light,EnemyDir,100) u.idle() u.harvest(7) u.build(Barracks,Down,10) u.attack(Farthest) u.train(Worker,Right,8)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Harvest;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;C;Train;Ranged;Down;9;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Ally;Closest;S;C;Build;Barracks;EnemyDir;20;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Right;8;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Strongest)} u.harvest(1) if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()} u.harvest(7) u.train(Ranged,Down,9) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,Closest)} u.build(Barracks,EnemyDir,20) u.attack(Closest) u.train(Worker,Right,8) if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;S_S;S;C;Harvest;10;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.train(Heavy,Up,5) for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4) u.harvest(10) u.train(Ranged,Left,2)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.idle() u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;C;Train;Worker;Left;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;If_B_then_S;B;is_Type;Base;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;C;MoveAway;S;C;Train;Light;Down;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;10;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Right;20;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;15	for(Unit u){u.build(Base,EnemyDir,10) u.train(Worker,Left,9)} for(Unit u){u.train(Heavy,Up,5) if(u.is(Base)) then {for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Farthest)} if(HaveQtdUnitsAttacking(3)) then {u.moveAway()} u.train(Light,Down,10) for(Unit u){u.idle() u.harvest(10) u.train(Ranged,Left,2)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(15)}}}
S;S_S;S;For_S;S;S_S;S;C;Build;Base;EnemyDir;10;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;C;Train;Light;Up;7;S;C;Train;Worker;Right;20;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;2;S;Empty;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10	for(Unit u){u.build(Base,EnemyDir,10) u.train(Worker,EnemyDir,9)} for(Unit u){u.train(Heavy,Up,5) for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4) u.train(Ranged,Left,2)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.train(Light,Up,7)} u.train(Worker,Right,20) if(HasNumberOfUnits(Base,2)) then {e} else { u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)}}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Ranged;Left;2;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.train(Heavy,Up,5) for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4) u.train(Ranged,Left,2)} u.build(Barracks,Right,7) u.train(Ranged,EnemyDir,25) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.idle() u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)}}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4) u.train(Ranged,Left,9)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)}}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Harvest;4;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4) u.train(Ranged,Left,9)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.harvest(15) u.train(Worker,EnemyDir,9)} for(Unit u){for(Unit u){u.train(Ranged,Left,9)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10	for(Unit u){u.harvest(5) u.train(Worker,EnemyDir,9)} for(Unit u){for(Unit u){u.train(Ranged,Left,9)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;10;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Left;9;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;15	for(Unit u){u.harvest(10) u.train(Worker,EnemyDir,9)} for(Unit u){for(Unit u){u.train(Ranged,Left,9)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Worker;Right;20;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25) u.idle()} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4)} u.build(Barracks,Right,7) u.train(Worker,Right,20) u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25) u.idle()} for(Unit u){for(Unit u){u.harvest(3)} for(Unit u){u.harvest(4)} u.build(Barracks,Right,7) u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25) u.idle()} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25) u.idle()} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.isBuilder()) then {u.moveAway()} u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;IsBuilder;S;C;MoveAway;S;C;Train;Worker;Right;20;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;7;S;Empty;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25) u.idle()} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.isBuilder()) then {u.moveAway()} u.train(Worker,Right,20) if(HasLessNumberOfUnits(Ranged,7)) then {e} else { u.attack(Farthest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;C;Train;Worker;Right;20;S;C;Attack;Strongest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} u.train(Worker,Right,20) u.attack(Strongest) for(Unit u){if(u.HasUnitInOpponentRange()) then {u.harvest(100)}} u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}} u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Strongest;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() if(u.canHarvest()) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Strongest)}} u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;25;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;Train;Worker;Right;20;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;10;S;C;Harvest;15	for(Unit u){u.train(Ranged,EnemyDir,25)} for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() if(u.canHarvest()) then {u.moveToUnit(Enemy,Closest)} else { u.attack(Strongest)}} u.train(Worker,Right,20) u.attack(Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(10)} u.harvest(15)}}
S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;C;Train;Light;EnemyDir;100;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;7;S;C;Build;Barracks;Down;10;S;C;Attack;Closest;S;C;Train;Worker;Right;8	for(Unit u){u.train(Heavy,Right,100)} for(Unit u){u.train(Light,EnemyDir,100) u.idle() u.harvest(7) u.build(Barracks,Down,10) u.attack(Closest) u.train(Worker,Right,8)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Train;Heavy;Left;9;S;C;Harvest;8;S;C;Attack;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Worker,Down,7) u.harvest(6) u.train(Heavy,Left,9) u.harvest(8) u.attack(Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;7;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest	for(Unit u){u.build(Barracks,EnemyDir,9) u.train(Worker,Down,7) u.idle() u.train(Heavy,EnemyDir,7) u.harvest(20) u.attack(Weakest)}
S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;C;Train;Ranged;Right;1	for(Unit u){u.build(Barracks,Up,9) u.train(Worker,Down,7) u.idle() for(Unit u){u.idle()} u.train(Heavy,EnemyDir,8) u.harvest(20) u.attack(Weakest) u.train(Ranged,Right,1)}
S;For_S;S;S_S;S;C;Build;Barracks;Right;9;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;8;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest;S;C;Train;Ranged;Right;1;S;If_B_then_S;B;HasNumberOfUnits;Heavy;7;S;For_S;S;C;Harvest;20	for(Unit u){u.build(Barracks,Right,9) u.train(Worker,Down,7) u.idle() for(Unit u){u.idle()} u.train(Heavy,EnemyDir,8) u.harvest(20) u.attack(Weakest) u.train(Ranged,Right,1) if(HasNumberOfUnits(Heavy,7)) then {for(Unit u){u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;C;Idle;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;C;Harvest;7;S;C;Train;Heavy;Right;7;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Up;50;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,EnemyDir,9) u.idle() u.train(Worker,Down,7) u.harvest(7) u.train(Heavy,Right,7) u.attack(Weakest) u.train(Heavy,Up,50) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;S_S;S;C;Build;Barracks;Up;50;S;C;Train;Heavy;Down;7;S;S_S;S;C;Harvest;20;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,Down,6) u.build(Barracks,Up,50) u.train(Heavy,Down,7) u.harvest(20) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.idle() for(Unit u){u.train(Light,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;Strongest;S;Empty;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Heavy,Down,6) u.idle() if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Strongest)} else { e} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Heavy;Down;6;S;C;Idle;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.train(Heavy,Left,5) u.train(Heavy,Down,6) u.idle() u.harvest(6) for(Unit u){u.build(Barracks,Left,50)}} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Ranged;EnemyDir;20;S;For_S;S;C;Build;Barracks;Left;50;S;For_S;S;C;Train;Worker;Left;5	for(Unit u){for(Unit u){u.harvest(3)} u.attack(Strongest) for(Unit u){u.train(Ranged,EnemyDir,20)} for(Unit u){u.build(Barracks,Left,50)}} for(Unit u){u.train(Worker,Left,5)}
S;For_S;S;S_S;S;C;Train;Light;Down;20;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Right;100;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;Harvest;10;S;C;Attack;Closest	for(Unit u){u.train(Light,Down,20) for(Unit u){u.harvest(3) u.train(Worker,Right,100) for(Unit u){u.build(Barracks,EnemyDir,8)} u.harvest(10) u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Light;Down;3;S;C;MoveToUnit;Ally;Closest;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Light,Down,3)} u.moveToUnit(Ally,Closest) u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Light;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Light,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Worker;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Worker,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Heavy,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;For_S;S;C;Train;Heavy;Down;3;S;C;Idle;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) for(Unit u){u.train(Heavy,Down,3)} u.idle() u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Build;Barracks;Left;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;C;Train;Heavy;Up;25;S;For_S;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.attack(Farthest) for(Unit u){if(u.is(Worker)) then {u.build(Barracks,Left,2)}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.train(Worker,Right,5) u.train(Heavy,Up,25) for(Unit u){u.harvest(50)}} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;15;S;C;Train;Heavy;EnemyDir;7;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,7) for(Unit u){u.idle() u.build(Barracks,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest)} if(u.canAttack()) then {u.harvest(15)} u.train(Heavy,EnemyDir,7) u.attack(Weakest) if(u.is(Light)) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Worker;Up;4	for(Unit u){u.attack(Farthest) u.train(Worker,Up,4)}
S;S_S;S;For_S;S;C;Train;Worker;Up;4;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,4)} for(Unit u){u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;8;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.harvest(5) u.idle() u.attack(LessHealthy) u.train(Worker,EnemyDir,8) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;5;S;C;Train;Worker;Left;2;S;For_S;S;C;Build;Barracks;Up;9;S;C;Attack;Closest	for(Unit u){u.harvest(7) u.train(Ranged,EnemyDir,5) u.train(Worker,Left,2) for(Unit u){u.build(Barracks,Up,9)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;4;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;C;Train;Heavy;Right;6;S;For_S;S;C;Build;Barracks;Down;9	for(Unit u){u.harvest(4) u.attack(Closest) u.train(Worker,Left,2) u.train(Heavy,Right,6) for(Unit u){u.build(Barracks,Down,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;25;S;C;Train;Heavy;Right;8;S;C;Train;Worker;EnemyDir;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.train(Heavy,Up,3) for(Unit u){u.idle()} u.build(Barracks,Right,5) u.harvest(25)} u.train(Heavy,Right,8) u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Strongest) for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;Down;1;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;Down;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;EnemyDir;10	for(Unit u){u.train(Worker,Up,2) u.idle()} for(Unit u){u.train(Heavy,Down,1) if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(2) u.moveToUnit(Enemy,Weakest)}} else { u.train(Light,Down,2)} if(u.HasUnitInOpponentRange()) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.train(Heavy,EnemyDir,10)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;For_S;S;C;Train;Light;Left;9;S;For_S;S;C;Train;Worker;Left;10;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;Empty;S;C;Harvest;6;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Attack;Closest	for(Unit u){u.train(Worker,Up,2) for(Unit u){u.train(Light,Left,9)}} for(Unit u){u.train(Worker,Left,10)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.build(Barracks,EnemyDir,3)}} else { e} u.harvest(6) u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {u.idle()} if(u.is(Light)) then {e} else { u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;8;S;C;Harvest;4;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;C;Train;Heavy;Right;6;S;For_S;S;C;Build;Barracks;Down;9;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){u.train(Worker,Up,8) u.harvest(4) u.harvest(8) if(u.canHarvest()) then {e} else { u.idle() u.attack(MostHealthy)} u.train(Heavy,Right,6) for(Unit u){u.build(Barracks,Down,9)} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S;B;HasNumberOfUnits;Base;1;S;For_S;S;C;Train;Light;Left;20;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Barracks;EnemyDir;3;S;S_S;S;C;Train;Ranged;Up;7;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;is_Type;Light;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Light;S;C;Attack;MostHealthy;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,6) if(HasNumberOfUnits(Base,1)) then {for(Unit u){u.train(Light,Left,20)}}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,3)}} else { u.train(Ranged,Up,7) u.moveToUnit(Enemy,Weakest)} u.harvest(3) if(u.is(Light)) then {u.idle()} if(u.is(Light)) then {u.attack(MostHealthy)} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;If_B_then_S;B;is_Type;Light;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;100;S;For_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;100;S;C;Harvest;2;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Right;7	for(Unit u){u.train(Light,Left,25) if(u.is(Light)) then {for(Unit u){u.attack(Closest)}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2) u.build(Barracks,EnemyDir,10) u.harvest(100) for(Unit u){if(HasLessNumberOfUnits(Worker,100)) then {u.harvest(2)} else { u.moveToUnit(Ally,Closest)}}} else { u.train(Worker,Right,7)}}
S;For_S;S;S_S;S;C;Train;Worker;Up;1;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;If_B_then_S;B;is_Type;Light;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;100;S;C;Harvest;2;S;C;MoveToUnit;Ally;Closest;S;C;Idle;S;C;Train;Worker;Right;7	for(Unit u){u.train(Worker,Up,1) u.train(Light,Left,25) if(u.is(Light)) then {u.attack(Strongest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2) u.build(Barracks,EnemyDir,10) u.harvest(100) for(Unit u){if(HasLessNumberOfUnits(Worker,100)) then {u.harvest(2)} else { u.moveToUnit(Ally,Closest)} u.idle()}} else { u.train(Worker,Right,7)}}
S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;For_S;S;C;Harvest;4;S;For_S;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;Train;Worker;Left;8	for(Unit u){u.train(Light,Up,3)} for(Unit u){u.harvest(4)} for(Unit u){u.train(Heavy,Left,6) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,20) u.attack(Closest)}} u.train(Worker,Left,8)}
S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;For_S;S;C;Harvest;7;S;For_S;S;S_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Attack;Closest;S;C;Train;Worker;Left;8	for(Unit u){u.train(Light,Up,3)} for(Unit u){u.harvest(7)} for(Unit u){u.train(Heavy,Left,6) if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,20) u.attack(Closest)}} u.train(Worker,Left,8)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;EnemyDir;3;S;For_S;S;C;Train;Heavy;Down;10;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;3;S;C;Harvest;15;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Left;10;S;C;Train;Ranged;Up;7	for(Unit u){u.train(Worker,Up,5) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(50) u.moveToUnit(Enemy,MostHealthy) u.train(Light,EnemyDir,3)}}} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){if(u.isBuilder()) then {for(Unit u){u.build(Barracks,Down,3) u.harvest(15) u.moveToUnit(Enemy,Closest) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Left,10)}}}} else { u.train(Ranged,Up,7)}}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;8;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;1;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(8)} u.train(Worker,Left,9) u.train(Ranged,EnemyDir,1) u.build(Barracks,Down,1) u.attack(Closest) u.train(Light,Right,100) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;50;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;Empty;S;C;Harvest;9;S;S_S;S;C;Train;Heavy;Right;4;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.train(Worker,Up,2) if(HasNumberOfUnits(Base,10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){u.idle() if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,100)}} else { e} u.harvest(9) u.train(Heavy,Right,4) if(HasNumberOfUnits(Light,2)) then {u.moveToUnit(Enemy,Weakest)} else { u.attack(Farthest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;50;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Weakest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Build;Barracks;EnemyDir;100;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;7;S;S_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.train(Worker,Up,2) if(HasNumberOfUnits(Base,10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {for(Unit u){u.attack(Weakest)}}}} for(Unit u){u.idle() if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,100)}} else { u.moveToUnit(Enemy,Closest)} u.harvest(7) u.train(Heavy,Right,4) u.moveToUnit(Ally,Strongest) if(HasNumberOfUnits(Light,2)) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { u.attack(Farthest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;2;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Down;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;Strongest;S;C;Harvest;100;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Down;4;S;S_S;S;C;Train;Heavy;Right;4;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;For_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Attack;Farthest;S;C;Attack;Farthest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(2)}}} for(Unit u){u.train(Worker,Up,2) if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {for(Unit u){u.attack(Weakest)}} for(Unit u){u.train(Light,Down,8)}}} for(Unit u){if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,Strongest)} else { u.harvest(100)} u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(7)}} else { u.attack(LessHealthy) u.moveToUnit(Enemy,Closest) u.train(Ranged,Down,4)} u.train(Heavy,Right,4) u.moveToUnit(Ally,Strongest) if(HasNumberOfUnits(Light,2)) then {for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Farthest)}}}} else { u.attack(Farthest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;C;Attack;Farthest;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Heavy;Right;4;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(2)}}} for(Unit u){u.train(Ranged,Down,4)} for(Unit u){u.train(Worker,Up,2) if(HasNumberOfUnits(Base,10)) then {for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}}} for(Unit u){u.idle() if(u.isBuilder()) then {u.attack(Farthest)} else { u.attack(Weakest)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,100) u.harvest(7)}} else { u.moveToUnit(Enemy,Closest)} u.train(Heavy,Right,4) u.moveToUnit(Ally,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;Train;Worker;Down;20;S;Empty;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.train(Worker,Down,20)} else { e}} for(Unit u){u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;1;S;C;Attack;Closest;S;C;Harvest;5;S;C;Train;Worker;Left;50	for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(1)) then {u.attack(Closest)} u.harvest(5)} u.train(Worker,Left,50)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;15;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Base;Up;100	for(Unit u){for(Unit u){for(Unit u){u.harvest(6)} for(Unit u){u.idle()}} u.attack(Closest) u.train(Worker,EnemyDir,15) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Base,Up,100)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;100;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway	for(Unit u){u.train(Worker,Right,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Strongest)} u.harvest(20) u.moveToUnit(Enemy,Weakest) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;7;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(7)} u.train(Worker,Left,9) u.build(Barracks,Down,1) u.attack(Closest) u.train(Light,Right,100) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;7;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Up;7;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(7)} u.train(Worker,Left,9) u.build(Barracks,Down,1) u.attack(Closest) u.train(Heavy,Up,7) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Harvest;7;S;C;Train;Worker;Left;9;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Heavy;Up;7;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.harvest(7)} u.train(Worker,Left,9) u.build(Barracks,Down,1) u.attack(Closest) for(Unit u){u.idle()} u.train(Heavy,Up,7) u.moveToUnit(Enemy,LessHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Harvest;50;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;2;S;If_B_then_S;B;HasNumberOfUnits;Base;10;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Worker;Left;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Ranged;Down;4;S;C;Harvest;7;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;2;S;C;Train;Heavy;Up;50;S;If_B_then_S_else_S;B;HasNumberOfUnits;Light;2;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.train(Worker,Up,2) if(HasNumberOfUnits(Base,10)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.idle()} if(u.isBuilder()) then {for(Unit u){u.attack(Weakest) for(Unit u){u.moveToUnit(Ally,Closest)}}}}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,100) u.train(Worker,Left,8)}} else { u.moveToUnit(Enemy,Closest) u.train(Ranged,Down,4)} u.harvest(7) u.attack(MostHealthy) for(Unit u){u.train(Heavy,Right,2) u.train(Heavy,Up,50)} if(HasNumberOfUnits(Light,2)) then {u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;20;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5) if(u.isBuilder()) then {u.harvest(3)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(20)}} else { for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Right;5;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;20;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;8;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Right,5) if(u.isBuilder()) then {u.harvest(3)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(20)}} else { for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)} u.moveToUnit(Ally,LessHealthy) if(HasNumberOfUnits(Heavy,8)) then {u.train(Worker,EnemyDir,50) u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;20;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5) if(u.isBuilder()) then {u.harvest(3)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.build(Barracks,EnemyDir,3) u.harvest(20)}} else { for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;C;Train;Heavy;Left;3;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5) u.train(Heavy,Left,3)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Left;3	for(Unit u){u.attack(Closest) u.train(Worker,Left,3)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;20	for(Unit u){for(Unit u){u.harvest(25)} for(Unit u){u.idle()} u.attack(Weakest) u.train(Worker,EnemyDir,20)}
S;For_S;S;S_S;S;C;Train;Worker;Left;25;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Left,25) u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;Down;25	for(Unit u){u.harvest(5) for(Unit u){u.idle()} u.attack(Closest)} for(Unit u){u.train(Worker,Down,25)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;S_S;S;For_S;S;C;Build;Barracks;Up;4;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;EnemyDir;7;S;C;Train;Worker;EnemyDir;50	for(Unit u){u.harvest(6) u.attack(Weakest) if(u.HasUnitWithinDistanceFromOpponent(5)) then {for(Unit u){u.build(Barracks,Up,4)} u.moveToUnit(Enemy,Weakest) u.train(Light,EnemyDir,7)} else { u.train(Worker,EnemyDir,50)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;Up;7;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;1;S;If_B_then_S_else_S;B;is_Type;Light;S;Empty;S;C;Train;Light;Left;7;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;2;S;C;Attack;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(1)} u.build(Barracks,Up,7) u.train(Worker,Up,1) if(u.is(Light)) then {e} else { u.train(Light,Left,7)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Strongest)} u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,2) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;Up;7;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;1;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;C;Attack;Strongest;S;S_S;S;C;Train;Heavy;Right;15;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Worker;Up;2;S;C;Attack;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle()} u.harvest(1)} u.build(Barracks,Up,7) u.train(Worker,Up,1) u.harvest(3) if(u.HasUnitWithinDistanceFromOpponent(15)) then {u.attack(Strongest)} u.train(Heavy,Right,15) u.moveToUnit(Enemy,Strongest) u.train(Worker,Up,2) u.attack(Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;7;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Up;8;S;C;Train;Worker;Up;2	for(Unit u){u.build(Barracks,Down,25) u.harvest(7)} for(Unit u){u.attack(Strongest) u.train(Light,Up,8) u.train(Worker,Up,2)}
S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;25;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Worker;Up;15;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;Train;Light;Up;8	for(Unit u){u.build(Barracks,Down,25) u.harvest(7)} for(Unit u){u.train(Worker,Up,15)} for(Unit u){u.attack(Strongest) u.train(Light,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Right,3)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;1;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,1) for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.idle()} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Train;Heavy;Left;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) for(Unit u){u.train(Ranged,Left,2) u.train(Heavy,Left,2)} for(Unit u){u.idle()} u.attack(LessHealthy) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Train;Heavy;Left;2;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Farthest;S;For_S;S;C;Harvest;4	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) for(Unit u){u.train(Ranged,Left,2) u.train(Heavy,Left,2)} for(Unit u){u.idle()} u.attack(Farthest) for(Unit u){u.harvest(4)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) for(Unit u){u.train(Ranged,Left,2) u.train(Heavy,Left,2)} for(Unit u){u.idle()} for(Unit u){u.harvest(4)} u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Harvest;9;S;S_S;S;C;Build;Base;Down;20;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Attack;Weakest;S;C;Train;Heavy;Right;1;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Ranged;EnemyDir;8	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) u.build(Base,Down,20) u.idle()} u.build(Barracks,EnemyDir,6) u.attack(Weakest) u.train(Heavy,Right,1)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,EnemyDir,8)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Base;Left;8;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;If_B_then_S_else_S;B;is_Type;Base;S;Empty;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Heavy;Right;1;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;8;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.build(Base,Left,8)} u.idle()} u.build(Barracks,EnemyDir,2) if(u.is(Base)) then {e} else { u.attack(Closest) u.moveToUnit(Enemy,MostHealthy)} u.train(Heavy,Right,1)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,EnemyDir,8)} if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,MostHealthy)}}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;8;S;C;MoveToUnit;Enemy;Farthest;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;C;Harvest;8;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;1;S;C;Train;Light;Left;20;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;8	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {if(OpponentHasNumberOfUnits(Ranged,8)) then {u.moveToUnit(Enemy,Farthest)} u.build(Barracks,Down,4)} else { u.harvest(8)}} for(Unit u){u.harvest(8)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.attack(Closest)} for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Down,1)} u.train(Light,Left,20)} u.attack(LessHealthy) u.train(Worker,EnemyDir,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Heavy;Right;3;S;C;Train;Worker;Up;5	for(Unit u){u.build(Barracks,Up,3) u.idle() u.harvest(6) u.train(Light,Down,8) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,Right,3) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Light;Down;8;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Right;3;S;C;Train;Worker;Up;5	for(Unit u){u.build(Barracks,Up,3) u.idle() u.harvest(6) u.train(Light,Down,8) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Right,3) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Down;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Up;5	for(Unit u){u.build(Barracks,Up,3) u.idle() u.harvest(6) u.attack(LessHealthy) u.train(Light,Down,8) u.moveToUnit(Enemy,LessHealthy) u.train(Worker,Up,5)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Build;Barracks;Up;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;8;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Worker;EnemyDir;25;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveAway	for(Unit u){u.train(Worker,Right,6) u.build(Barracks,Up,7) for(Unit u){u.train(Heavy,Down,8) if(u.HasUnitInOpponentRange()) then {u.train(Worker,EnemyDir,25)}} u.idle() for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) if(u.HasUnitThatKillsInOneAttack()) then {u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) for(Unit u){u.train(Ranged,Left,2) u.train(Heavy,Left,2)} for(Unit u){u.idle()} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Train;Light;EnemyDir;100;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;C;Build;Barracks;Down;10;S;C;Harvest;5;S;S_S;S;C;Idle;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Worker,Down,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,EnemyDir,100) if(u.is(Worker)) then {u.build(Barracks,Down,10)} u.harvest(5) u.idle() u.attack(MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;4;S;S_S;S;C;Train;Worker;Right;9;S;C;MoveAway;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;8;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;20;S;For_S;S;S_S;S;C;Harvest;4;S;C;Harvest;15;S;For_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Worker;Left;8	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.train(Worker,Right,9) u.moveAway()} else { for(Unit u){u.idle()}} u.build(Barracks,Right,8)} for(Unit u){for(Unit u){u.train(Heavy,Left,20)} for(Unit u){u.harvest(4) u.harvest(15)}} for(Unit u){u.attack(Farthest) u.train(Worker,Left,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Train;Heavy;Left;8;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;50;S;C;Idle;S;C;Train;Light;Right;3;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} u.train(Heavy,Left,8) if(u.HasUnitWithinDistanceFromOpponent(50)) then {u.idle()} else { u.train(Light,Right,3)} u.moveToUnit(Enemy,Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;S_S;S;C;Build;Barracks;Down;4;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Down;25	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.attack(Weakest) u.train(Light,EnemyDir,6) for(Unit u){u.train(Ranged,Left,2) u.idle()} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest) u.train(Heavy,Down,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;S_S;S;C;Build;Barracks;Down;4;S;S_S;S;C;Harvest;8;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;C;Train;Ranged;Left;2;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.harvest(8) u.attack(Weakest) u.train(Light,EnemyDir,6) for(Unit u){u.train(Ranged,Left,2) u.idle()} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Base;Left;8;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Weakest;S;C;Train;Heavy;Right;1;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;8;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.build(Base,Left,8)} u.idle()} u.build(Barracks,EnemyDir,2) u.attack(Weakest) u.train(Heavy,Right,1)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,EnemyDir,8)} if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Harvest;9;S;For_S;S;C;Build;Base;Left;8;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.build(Base,Left,8)} u.idle()} u.build(Barracks,EnemyDir,2) u.attack(Weakest) for(Unit u){u.train(Light,Right,25)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;C;Build;Base;Down;20;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Weakest;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HaveQtdUnitsAttacking;9;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.idle()} u.build(Base,Down,20)} u.build(Barracks,EnemyDir,2) u.attack(Weakest) for(Unit u){u.train(Light,Right,25)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(HaveQtdUnitsAttacking(9)) then {u.moveToUnit(Ally,MostHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Train;Light;EnemyDir;4;S;S_S;S;C;Harvest;9;S;For_S;S;C;Idle;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;25;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.harvest(6) u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.idle()}} u.build(Barracks,EnemyDir,2) u.attack(Strongest) for(Unit u){u.train(Light,Right,25)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest) if(u.is(Ranged)) then {u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Idle;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle()} else { u.train(Light,Right,100)} u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;S_S;S;C;Build;Barracks;Down;4;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Down,4) u.idle() u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Right,100)} u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Up,6) u.idle() u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.build(Barracks,Left,9)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Right,100)} u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Left;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Right;100;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Left,6) u.idle() u.harvest(6) for(Unit u){u.train(Heavy,Left,2)} for(Unit u){u.build(Barracks,Left,9)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Right,100)} u.moveToUnit(Enemy,Strongest) u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Harvest;9;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Heavy;EnemyDir;1;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;8;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Right,10) for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) u.idle()} u.attack(Weakest) u.train(Heavy,EnemyDir,1) for(Unit u){u.build(Barracks,Left,10)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Ranged,EnemyDir,8)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;10;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;C;Harvest;9;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Heavy;EnemyDir;1;S;For_S;S;C;Build;Barracks;Left;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;8;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,Right,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.train(Light,EnemyDir,4) u.harvest(9) for(Unit u){u.harvest(3)} for(Unit u){u.idle()}} u.attack(Weakest) u.train(Heavy,EnemyDir,1) for(Unit u){u.build(Barracks,Left,10)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Ranged,EnemyDir,8)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;2;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Idle;S;C;Train;Light;Down;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,2)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle()} else { u.train(Light,Down,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Down;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(5) for(Unit u){u.train(Heavy,Down,2)} for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Down,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Idle;S;C;Train;Light;Down;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,2)} for(Unit u){u.train(Heavy,EnemyDir,15)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle()} else { u.train(Light,Down,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;2;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Idle;S;C;Train;Light;Left;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,2)} for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.idle()} else { u.train(Light,Left,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Left;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Left,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Left;3;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.build(Barracks,Left,6) u.harvest(6) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Left,3)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;C;Harvest;9;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Left;3;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.harvest(6) for(Unit u){u.build(Barracks,Up,6)} u.harvest(9) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Left,3)} u.train(Worker,Down,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;C;Idle;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.harvest(6) for(Unit u){u.build(Barracks,Up,6)} u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Build;Barracks;Up;6;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Worker,EnemyDir,6) for(Unit u){u.idle()} u.harvest(6) for(Unit u){u.build(Barracks,Up,6)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Idle;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Left,6) u.idle() u.build(Barracks,Left,6) u.harvest(6) u.attack(LessHealthy) for(Unit u){u.train(Heavy,EnemyDir,15)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Build;Barracks;Up;6;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;For_S;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,Right,6) u.harvest(15) u.idle() u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,6)} for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} for(Unit u){u.harvest(5)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;3;S;C;Train;Worker;Right;6;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Heavy;Up;1;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.build(Barracks,EnemyDir,3) u.train(Worker,Right,6) u.harvest(6) for(Unit u){u.train(Heavy,Up,1)} u.train(Heavy,EnemyDir,100) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Idle;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.harvest(6) for(Unit u){u.build(Barracks,Up,6)} u.idle() for(Unit u){for(Unit u){u.train(Light,Right,3) u.idle()} u.train(Heavy,EnemyDir,15) u.harvest(1)} u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;3;S;C;Idle;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;7;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Up,6)} u.idle() for(Unit u){for(Unit u){u.train(Light,Right,3) u.idle()} u.train(Heavy,EnemyDir,15) u.harvest(7)} u.attack(Weakest) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Light;Down;20;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Light;Down;20;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveAway;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Farthest;S;C;MoveToUnit;Ally;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} u.moveToUnit(Enemy,Strongest) u.moveAway() if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,LessHealthy) u.attack(Farthest) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Light;Down;20;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;S_S;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8) u.moveToUnit(Ally,Farthest)} if(OpponentHasNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Light;Down;20;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;If_B_then_S;B;is_Type;Heavy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} if(u.is(Heavy)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} u.moveToUnit(Ally,Strongest) u.attack(MostHealthy) u.moveToUnit(Ally,MostHealthy) if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,Down,4)} u.harvest(6) for(Unit u){u.train(Light,Down,20)} u.attack(LessHealthy) if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;C;Train;Worker;Left;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Down,20)} u.train(Worker,Left,6) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Down;20;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,5) u.harvest(6) for(Unit u){u.train(Light,Down,20)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.attack(Closest) if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Light;Up;15;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;Empty;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Light,Up,15)} for(Unit u){u.harvest(4)} if(HasNumberOfUnits(Worker,5)) then {e} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(50) for(Unit u){u.train(Heavy,Up,15)} for(Unit u){u.harvest(4)} if(HasNumberOfUnits(Worker,5)) then {if(HasNumberOfUnits(Worker,8)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;8;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(50) for(Unit u){u.train(Heavy,Up,15)} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Worker,5)) then {if(HasNumberOfUnits(Worker,8)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,8) for(Unit u){u.attack(Strongest)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Left;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Left,8)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Down,25)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.train(Light,Left,8)} u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Down,25)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.build(Barracks,Left,6) u.harvest(6) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.moveAway()} u.train(Worker,Down,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Worker;Up;15;S;C;Harvest;4;S;C;MoveToUnit;Ally;Closest	for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {for(Unit u){u.attack(LessHealthy)}} u.train(Worker,Up,15) u.harvest(4) u.moveToUnit(Ally,Closest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.harvest(3) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.harvest(15)} for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.train(Ranged,EnemyDir,50)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(8) u.moveToUnit(Ally,Weakest)}}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;3;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;8	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.harvest(3) if(u.isBuilder()) then {for(Unit u){for(Unit u){u.harvest(15)} for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.train(Ranged,EnemyDir,50)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(8)}}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.harvest(3) for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){for(Unit u){u.harvest(15)} for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.train(Ranged,EnemyDir,50)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;3;S;C;Train;Light;Left;8;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveAway;S;C;Train;Worker;Right;5	for(Unit u){for(Unit u){for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(3)}} else { u.train(Light,Left,8)}} u.build(Barracks,Left,3) u.idle() u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveAway()} u.train(Worker,Right,5)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;C;MoveAway;S;C;Train;Worker;Right;5	for(Unit u){for(Unit u){for(Unit u){u.harvest(4)} u.build(Barracks,Left,3) u.idle() u.moveToUnit(Enemy,Closest) u.train(Heavy,EnemyDir,20)} for(Unit u){u.moveAway()} u.train(Worker,Right,5)}
S;For_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Train;Heavy;Down;100;S;C;Harvest;4;S;S_S;S;S_S;S;C;Build;Barracks;Left;3;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;MoveAway;S;C;Train;Worker;Right;5	for(Unit u){for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Heavy,Down,100)}} u.harvest(4)} u.build(Barracks,Left,3) u.idle() u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveAway()} u.train(Worker,Right,5)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.train(Light,Left,3)} for(Unit u){u.train(Ranged,EnemyDir,50)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Right,10)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5) u.attack(Closest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;8;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;2;S;C;Harvest;15;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Train;Ranged;Up;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Right,6) u.idle()} for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Down,2) u.harvest(15)} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Strongest)} else { e}} u.train(Ranged,Up,5) for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;8;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;2;S;C;Harvest;15;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,6) u.idle()} for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Left,2) u.harvest(15)} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Strongest)} else { e}} for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;For_S;S;C;Harvest;15;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;50;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,EnemyDir,6)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.harvest(3) for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){for(Unit u){u.harvest(15)} for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.train(Ranged,EnemyDir,50)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Up;6;S;C;Idle;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;8;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;15;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;C;Train;Ranged;Up;5;S;For_S;S;C;Attack;Strongest	for(Unit u){u.train(Worker,Up,6) u.idle()} for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.build(Barracks,Right,2) u.harvest(15)} for(Unit u){if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveToUnit(Enemy,Strongest)} else { e}} u.train(Ranged,Up,5) for(Unit u){u.attack(Strongest)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;6;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;15;S;C;Train;Heavy;EnemyDir;7;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle	for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Down,6)} u.attack(LessHealthy) for(Unit u){u.harvest(15)} u.train(Heavy,EnemyDir,7) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Weakest)}} u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;50;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.idle() for(Unit u){u.harvest(15) u.train(Heavy,Right,10)} for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){for(Unit u){u.attack(LessHealthy)}}} for(Unit u){u.train(Light,EnemyDir,50)} u.moveAway() u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;15;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;EnemyDir;50;S;If_B_then_S;B;HasNumberOfUnits;Worker;4;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.idle() u.build(Barracks,Left,6)} for(Unit u){u.harvest(15) u.train(Heavy,Right,10)} for(Unit u){u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} for(Unit u){u.train(Light,EnemyDir,50)} if(HasNumberOfUnits(Worker,4)) then {for(Unit u){u.attack(Closest)}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} u.harvest(3) for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Left,6)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Light;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.build(Barracks,Down,6)} u.harvest(3) for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}}} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Light,Left,6)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;3;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.build(Barracks,Down,6)} u.harvest(3) for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.train(Light,Right,1) u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;S_S;S;C;Harvest;3;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,4)} u.train(Worker,Left,5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.build(Barracks,Down,6)} u.harvest(3) u.idle() for(Unit u){u.train(Heavy,Right,10)} u.attack(MostHealthy) for(Unit u){u.train(Light,Right,1) u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;4;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Left;7	for(Unit u){for(Unit u){u.train(Ranged,EnemyDir,4)} u.train(Worker,Left,5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.build(Barracks,Down,6)} u.harvest(3) for(Unit u){u.train(Light,Right,1) u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Closest) for(Unit u){u.harvest(15)}}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.train(Heavy,Left,7)}}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;50;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;6;S;S_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Right;1;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Left;7	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(50)}}} for(Unit u){u.build(Barracks,Down,6)} u.harvest(3) for(Unit u){u.train(Light,Right,1) u.train(Light,Left,3)} if(u.isBuilder()) then {for(Unit u){u.attack(Weakest) for(Unit u){u.harvest(15)}}} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){for(Unit u){u.train(Heavy,Left,7)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Right;5;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway	for(Unit u){u.harvest(3) u.train(Heavy,Up,7) u.build(Barracks,Up,9) u.harvest(4) for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,Closest) u.idle() u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;C;Train;Worker;Right;5;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,Up,7) u.build(Barracks,Up,9) u.harvest(4) for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,Closest) u.idle() u.attack(Weakest) u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.HasUnitInOpponentRange()) then {u.idle()} u.harvest(3) u.train(Heavy,Up,7) u.build(Barracks,Up,9) u.harvest(4) for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;For_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(4) if(u.HasUnitInOpponentRange()) then {u.idle()} u.train(Heavy,Up,7) u.build(Barracks,Up,9) for(Unit u){u.train(Worker,EnemyDir,3)} u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;4;S;For_S;S;C;Train;Worker;EnemyDir;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;5;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.harvest(3) u.train(Heavy,Up,7) u.build(Barracks,Up,9) u.harvest(4) for(Unit u){u.train(Worker,EnemyDir,1)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.moveToUnit(Enemy,Closest) u.attack(Weakest) u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;Train;Heavy;Up;7;S;C;Build;Barracks;Up;9;S;S_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;EnemyDir;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;1;S;C;Train;Worker;Right;5;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveAway	for(Unit u){u.harvest(3) u.train(Heavy,Up,7) u.build(Barracks,Up,9) u.harvest(5) for(Unit u){u.train(Worker,EnemyDir,1)} if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Ranged,EnemyDir,1)} u.train(Worker,Right,5) u.moveToUnit(Ally,LessHealthy) u.moveAway()}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;Left;3;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Left,10)} for(Unit u){u.idle() u.train(Light,Left,3)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,Closest) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5) u.attack(Weakest)}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Weakest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Left,10)} for(Unit u){u.idle()} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5) u.attack(Weakest)}}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(2)} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.attack(LessHealthy)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(2)} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Left,10) for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(2)} for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Left,10) for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Light;EnemyDir;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(2)} for(Unit u){u.train(Heavy,Right,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Enemy,Weakest)}}} u.train(Light,EnemyDir,10) for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Left;10;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.idle() u.harvest(8) u.moveToUnit(Enemy,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Left,10) for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;5;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;C;Train;Light;Right;50;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;8;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.train(Light,Up,5) for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.harvest(2)} u.train(Light,Right,50) for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.idle() u.harvest(8)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.attack(Farthest)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Left;10;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Down,10)} for(Unit u){u.build(Barracks,Left,6)} for(Unit u){u.train(Heavy,Down,10)} for(Unit u){u.harvest(8) u.idle() u.attack(Weakest)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Left,10) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Train;Ranged;Down;10;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;10;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.train(Ranged,Down,10)} for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.attack(Weakest)} if(u.isBuilder()) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Right,10) for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Down;15;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;Attack;Weakest;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Right;10;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;Empty;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Down,15) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.attack(Weakest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Light,Right,10) if(u.HasUnitWithinDistanceFromOpponent(6)) then {e} else { u.train(Light,Left,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Light;Right;10;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.moveAway()} u.train(Light,Right,10) for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;MoveAway;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Left;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,2) for(Unit u){u.moveAway()} for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Left,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;MoveAway;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {for(Unit u){u.harvest(4)} u.moveToUnit(Ally,Farthest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,2) for(Unit u){u.moveAway()} for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,2) for(Unit u){u.moveAway()} u.train(Worker,Right,15) for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,2) for(Unit u){u.moveAway()} u.train(Worker,Right,15) for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Ranged;Up;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)} u.train(Ranged,Up,10)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,1)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Ranged;Up;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,1)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle()} for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)} u.train(Ranged,Up,10)}

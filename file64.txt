S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;20;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Base;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,20) u.moveToUnit(Ally,LessHealthy)} if(HasNumberOfUnits(Base,20)) then {u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Harvest;2;S;For_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Train;Worker;Right;7;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){for(Unit u){if(u.canHarvest()) then {u.harvest(2)}} for(Unit u){u.attack(Farthest) for(Unit u){u.moveToUnit(Enemy,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()}} for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest)}} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Worker,Right,7) u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Worker;Up;9;S;For_S;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.idle() u.train(Worker,Up,9)}} for(Unit u){for(Unit u){u.attack(LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;2;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Weakest;S;Empty;S;S_S;S;C;Train;Worker;Left;20;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;HaveQtdUnitsAttacking;8;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.attack(Closest)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Barracks,2)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}} if(u.OpponentHasUnitInPlayerRange()) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Weakest)}} else { e} u.train(Worker,Left,20) for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,MostHealthy)} if(HaveQtdUnitsAttacking(8)) then {u.moveToUnit(Ally,LessHealthy)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Left;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} u.moveAway() for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Left,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;C;MoveAway;S;S_S;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} u.moveAway() for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;7;S;For_S;S;C;Harvest;25;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;S_S;S;For_S;S;C;Harvest;9;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;15;S;Empty	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,MostHealthy) for(Unit u){if(HasNumberOfUnits(Light,7)) then {for(Unit u){u.harvest(25)}} u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} for(Unit u){if(u.canHarvest()) then {for(Unit u){u.attack(Closest)}} else { u.moveToUnit(Ally,Strongest)}} u.moveToUnit(Ally,Strongest) u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,15)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;7;S;For_S;S;C;Harvest;25;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;5;S;For_S;S;C;Harvest;9;S;C;Train;Worker;Down;7;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;7;S;C;Train;Light;Up;20;S;Empty;S;C;Attack;Closest	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){if(HasNumberOfUnits(Light,7)) then {for(Unit u){u.harvest(25)}} u.idle() u.build(Barracks,Up,5)} for(Unit u){u.harvest(9)} u.train(Worker,Down,7) if(HasNumberOfUnits(Worker,7)) then {u.train(Light,Up,20)} else { e} u.attack(Closest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;7;S;C;Build;Barracks;Up;2;S;For_S;S;S_S;S;For_S;S;C;Harvest;9;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(7) u.build(Barracks,Up,2)}} for(Unit u){for(Unit u){u.harvest(9)} u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Up;2;S;For_S;S;C;Harvest;20;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Up,2)} for(Unit u){u.harvest(20)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,EnemyDir,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;25;S;C;Idle;S;For_S;S;S_S;S;C;Train;Worker;Right;50;S;S_S;S;S_S;S;C;Train;Light;Down;10;S;C;Harvest;10;S;C;Build;Barracks;Left;2;S;For_S;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Worker,Down,25) u.idle()} for(Unit u){u.train(Worker,Right,50) u.train(Light,Down,10) u.harvest(10) u.build(Barracks,Left,2)} for(Unit u){for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Train;Light;Left;2;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Left,2) for(Unit u){u.idle()} u.moveAway() u.attack(LessHealthy) u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;Train;Ranged;Left;25;S;For_S;S;C;Harvest;8;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) u.attack(LessHealthy) for(Unit u){u.idle()} u.train(Ranged,Left,25) for(Unit u){u.harvest(8)} u.train(Worker,Left,8) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;S_S;S;C;Harvest;100;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Left;5	for(Unit u){u.idle() u.attack(MostHealthy) for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(100) u.idle()} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Left,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;5	for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle() for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)} u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) for(Unit u){u.harvest(100)} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;50;S;C;Build;Barracks;Up;1;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Train;Worker;Left;8;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;Right;5	for(Unit u){u.moveToUnit(Enemy,Weakest) u.idle() for(Unit u){u.train(Heavy,Right,50) u.build(Barracks,Up,1) u.idle()} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest) u.attack(Farthest) for(Unit u){u.harvest(100)} u.train(Worker,Left,8) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.train(Light,Right,5)}
S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;20;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){u.harvest(5)} for(Unit u){for(Unit u){u.attack(Closest)} u.train(Worker,Up,20) u.moveToUnit(Ally,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;Harvest;4;S;C;Attack;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Worker;Right;50;S;If_B_then_S;B;HasNumberOfUnits;Ranged;20;S;For_S;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(4) u.attack(LessHealthy)}} for(Unit u){u.moveToUnit(Ally,Closest)} for(Unit u){u.train(Worker,Right,50)} if(HasNumberOfUnits(Ranged,20)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}
S;S_S;S;For_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;Harvest;25;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;50	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,2) u.attack(LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Light,Right,7)} u.harvest(25)}}} for(Unit u){u.attack(Weakest) u.train(Worker,Right,50)}
S;S_S;S;For_S;S;If_B_then_S;B;CanHarvest;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Light;Up;20;S;C;Idle;S;C;Harvest;25;S;For_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Right;50	for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Up,2) u.attack(Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Light,Up,20) u.idle()} u.harvest(25)}}} for(Unit u){u.attack(Weakest) u.train(Worker,Right,50)}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;10;S;C;Train;Heavy;Left;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;50;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Right;20;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest;S;C;Train;Ranged;Right;9	for(Unit u){u.idle()} for(Unit u){u.harvest(10) u.train(Heavy,Left,4)} for(Unit u){u.train(Worker,Left,50) if(u.isBuilder()) then {e} else { u.attack(Closest)} u.moveToUnit(Enemy,Closest) for(Unit u){u.build(Barracks,Right,20)} u.moveAway()} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.train(Ranged,Right,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;Harvest;3;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Up,25) u.harvest(3) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Enemy,MostHealthy)} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;25;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.train(Worker,Up,25) u.harvest(6) u.attack(Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;100;S;C;MoveToUnit;Ally;Closest;S;C;Attack;Weakest;S;C;Train;Worker;Right;50;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){u.idle()} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.train(Worker,Down,7) for(Unit u){u.harvest(6) if(HaveQtdUnitsAttacking(100)) then {u.moveToUnit(Ally,Closest)} u.attack(Weakest)} u.train(Worker,Right,50)} for(Unit u){u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Light;Up;8;S;S_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Train;Heavy;Up;20;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(3)}} else { u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,5) u.train(Light,Up,8) u.build(Barracks,Left,15) u.train(Heavy,Up,20) u.idle() if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Harvest;3;S;S_S;S;C;Train;Heavy;Up;4;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;C;Train;Light;Up;8;S;S_S;S;C;Build;Barracks;Left;15;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {for(Unit u){u.harvest(3)}} else { u.train(Heavy,Up,4) u.moveToUnit(Ally,Strongest)} u.train(Worker,Down,5) u.train(Light,Up,8) u.build(Barracks,Left,15) u.idle() if(u.canAttack()) then {u.moveToUnit(Enemy,Farthest)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;2;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Heavy;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Right;10;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Heavy;Left;9;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;For_S;S;C;Harvest;6	for(Unit u){if(OpponentHasNumberOfUnits(Light,2)) then {u.attack(LessHealthy)} u.attack(Farthest) u.train(Heavy,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} if(u.isBuilder()) then {e} else { u.train(Heavy,Left,9)} u.train(Worker,Up,6) u.train(Light,Right,5) for(Unit u){u.harvest(6)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;C;Train;Heavy;Up;2;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;10;S;C;Harvest;1;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Harvest;8;S;C;Attack;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Farthest) u.train(Heavy,Up,2) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10) u.harvest(1)} for(Unit u){for(Unit u){u.harvest(8) u.attack(MostHealthy)}} u.moveToUnit(Ally,Strongest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;Right;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,10) u.harvest(20)} for(Unit u){for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;Train;Light;Right;5;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(20)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Weakest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5) u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;10;S;C;Harvest;20;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Left;15;S;C;Train;Worker;Up;6;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Light;Right;5	for(Unit u){u.train(Heavy,Up,4) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,10) u.harvest(20)} for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,LessHealthy)} if(u.canAttack()) then {u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Strongest)} else { e} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.train(Heavy,Left,15) u.train(Worker,Up,6) u.moveToUnit(Enemy,Farthest) u.train(Light,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Strongest;S;Empty;S;C;Harvest;5;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Strongest)} else { e} u.harvest(5)} u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Down;100;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Down,100)} u.attack(Closest) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Down;100;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;1;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Down,100)} u.attack(Closest) u.train(Worker,EnemyDir,1) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;5;S;C;Build;Barracks;Up;100;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,EnemyDir,5)} u.build(Barracks,Up,100)} u.attack(Closest) u.train(Worker,Right,4) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;5;S;C;Build;Barracks;Up;100;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Harvest;10;S;C;Train;Worker;Right;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){for(Unit u){u.train(Light,Up,5)} u.build(Barracks,Up,100)} u.attack(Strongest) u.train(Worker,Right,4) for(Unit u){u.harvest(10)} u.train(Worker,Right,100)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;C;Harvest;8;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(1)} u.harvest(8) u.attack(LessHealthy)} for(Unit u){u.train(Worker,Left,25)}
S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Right;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Closest	for(Unit u){u.harvest(3)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.train(Worker,Right,100)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;For_S;S;S_S;S;C;Harvest;3;S;C;Train;Worker;Right;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { for(Unit u){u.harvest(3) u.train(Worker,Right,100)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,Farthest)}} for(Unit u){u.attack(Weakest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Idle;S;C;Harvest;6;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Down;50;S;For_S;S;C;Attack;Closest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.idle()} else { u.harvest(6)}} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Down,50)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;C;Harvest;6;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;50	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {for(Unit u){u.idle()} for(Unit u){u.attack(LessHealthy)}} else { u.harvest(6)}} for(Unit u){if(u.canHarvest()) then {e} else { for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,MostHealthy) u.train(Worker,Down,50)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1	for(Unit u){u.train(Worker,Up,5) u.attack(Weakest) for(Unit u){u.idle()} for(Unit u){u.harvest(1)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;Idle;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Harvest;2;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,5) u.attack(Weakest) for(Unit u){if(u.isBuilder()) then {for(Unit u){u.idle()}} else { if(u.canAttack()) then {u.moveToUnit(Ally,Farthest)}}} for(Unit u){u.harvest(2)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Farthest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Farthest) u.train(Worker,EnemyDir,100)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;15;S;C;MoveAway;S;S_S;S;S_S;S;C;Harvest;25;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(15)) then {u.moveAway()} u.harvest(25) u.attack(Strongest) for(Unit u){u.train(Worker,Down,50)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(10) u.attack(Strongest) for(Unit u){u.train(Worker,Down,50)}}}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;Down;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Ranged,Left,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,Down,2)} u.idle() u.harvest(5) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;Train;Ranged;Left;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;10;S;C;Build;Barracks;Down;15;S;For_S;S;S_S;S;C;Train;Heavy;Right;3;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.train(Ranged,Left,4)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(10)} u.build(Barracks,Down,15) for(Unit u){u.train(Heavy,Right,3) u.train(Light,EnemyDir,2)} u.idle() u.harvest(5) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;C;Train;Heavy;Right;10	for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.idle() u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy)} u.train(Heavy,Right,10)}
S;For_S;S;S_S;S;C;Train;Light;Down;3;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;C;Attack;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Down;1;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Heavy;Right;10;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,3) for(Unit u){u.idle() u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Down,1)}} if(u.canHarvest()) then {for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Weakest)}}} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)} u.train(Heavy,Right,10) for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasNumberOfUnits;Light;9;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;Harvest;5;S;S_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S;B;CanHarvest;S;If_B_then_S;B;HaveQtdUnitsAttacking;10;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;CanHarvest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;is_Type;Worker;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty;S;C;Train;Heavy;Down;9;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Light,Down,3) if(HasNumberOfUnits(Light,9)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.idle() u.build(Barracks,EnemyDir,15) for(Unit u){u.train(Light,EnemyDir,2)} u.harvest(5) u.train(Heavy,Left,4) u.train(Worker,Up,5) u.attack(LessHealthy) if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.canHarvest()) then {if(HaveQtdUnitsAttacking(10)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}}}}} if(u.canHarvest()) then {for(Unit u){if(u.is(Worker)) then {u.moveToUnit(Enemy,LessHealthy)} else { e} u.train(Heavy,Down,9)}} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;S_S;S;C;Harvest;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;MostHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;Train;Ranged;EnemyDir;8;S;C;Train;Heavy;Right;2	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,20) u.harvest(1) u.build(Barracks,EnemyDir,1) u.harvest(20) u.moveToUnit(Enemy,MostHealthy) u.attack(MostHealthy)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.train(Ranged,EnemyDir,8)} u.train(Heavy,Right,2)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Up;15;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Light;EnemyDir;8	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Up,15)} else { u.moveToUnit(Ally,Weakest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Weakest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)} else { for(Unit u){u.train(Light,EnemyDir,8)}}}}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;Train;Light;Down;9;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,10)} u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} if(u.isBuilder()) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Light,Down,9)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)}} u.train(Worker,Right,9)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;1;S;Empty;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Harvest;20;S;C;Attack;Closest;S;C;Train;Worker;Right;9	for(Unit u){for(Unit u){u.idle() u.train(Worker,Right,7) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(1)} else { e} u.build(Barracks,EnemyDir,1) u.harvest(20) u.attack(Closest)} u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Build;Barracks;Down;9;S;Empty;S;C;Harvest;7	for(Unit u){u.train(Worker,Down,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canHarvest()) then {u.build(Barracks,Down,9)} else { e} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Ranged;EnemyDir;3;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) u.train(Ranged,EnemyDir,3) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7	for(Unit u){u.train(Worker,Right,20) u.attack(Closest) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Idle;S;C;Train;Light;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Build;Barracks;Down;9;S;C;MoveToUnit;Ally;Weakest;S;C;Harvest;7;S;For_S;S;C;Harvest;9	for(Unit u){u.train(Worker,Right,20) u.attack(Strongest) for(Unit u){u.idle()} u.train(Light,Left,5) u.moveToUnit(Enemy,Strongest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,Down,9)} else { u.moveToUnit(Ally,Weakest)} u.harvest(7)} for(Unit u){u.harvest(9)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;Train;Worker;Left;9;S;C;Train;Ranged;Left;9;S;C;Attack;MostHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Left,50) u.build(Barracks,Down,6) u.train(Worker,Left,9) u.train(Ranged,Left,9) u.attack(MostHealthy) for(Unit u){u.harvest(5)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;9;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Farthest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,9) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Farthest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;50;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveAway;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,50) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveAway() u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;5;S;C;Build;Barracks;Down;6;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Harvest;15;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;Right;7;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Heavy,Down,5) u.build(Barracks,Down,6) u.moveToUnit(Enemy,Strongest) u.harvest(15) u.train(Worker,Left,7) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(5)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){for(Unit u){u.train(Ranged,Right,7)} u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;S_S;S;C;Harvest;2;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(2) u.harvest(15)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;1;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;S_S;S;For_S;S;C;Train;Worker;Right;10;S;For_S;S;C;Attack;Closest	for(Unit u){u.idle() for(Unit u){u.harvest(1)} u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(15)} for(Unit u){u.train(Worker,Right,10)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Left;50	for(Unit u){u.idle() u.build(Barracks,Right,7) u.train(Light,EnemyDir,9) u.harvest(15) u.attack(Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Left,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;For_S;S;C;Train;Light;Down;1;S;C;Train;Light;EnemyDir;9;S;C;Harvest;15;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){u.build(Barracks,EnemyDir,2) for(Unit u){u.train(Heavy,Left,2)} u.idle() u.build(Barracks,Right,7) for(Unit u){u.train(Light,Down,1)} u.train(Light,EnemyDir,9) u.harvest(15) u.attack(Strongest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;2;S;C;Idle;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Barracks;15;S;C;Harvest;25;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Train;Light;Up;1;S;C;Train;Light;EnemyDir;9;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Worker;Down;10;S;For_S;S;C;Train;Ranged;Down;50	for(Unit u){u.build(Barracks,EnemyDir,2) for(Unit u){u.train(Heavy,Left,2)} u.idle() if(HasLessNumberOfUnits(Barracks,15)) then {u.harvest(25)} else { u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.train(Light,Up,1)} u.train(Light,EnemyDir,9) u.attack(Strongest)} for(Unit u){u.train(Worker,Down,10)} for(Unit u){u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Train;Light;Down;20;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.train(Light,Down,20)}} u.attack(Weakest) u.train(Heavy,Down,5) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Weakest) u.train(Heavy,Down,5) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Weakest;S;C;Train;Heavy;Down;5;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Weakest) u.train(Heavy,Down,5) u.train(Heavy,Left,20) u.moveToUnit(Ally,Farthest) for(Unit u){u.idle() u.harvest(7)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;Harvest;9;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.harvest(9)}} u.attack(Closest) u.train(Heavy,Down,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.harvest(3)} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;10;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;20;S;C;Train;Ranged;Left;4;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;8;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Idle;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;EnemyDir;100	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){u.train(Worker,Left,10) if(u.HasUnitInOpponentRange()) then {for(Unit u){u.attack(MostHealthy) for(Unit u){u.harvest(20)} u.train(Ranged,Left,4)}} u.attack(Closest) u.train(Heavy,Down,8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitInOpponentRange()) then {e} else { u.idle()}} for(Unit u){u.idle() u.harvest(7)} if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,EnemyDir,100)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;100;S;S_S;S;C;Build;Barracks;EnemyDir;6;S;C;Harvest;25;S;S_S;S;C;Train;Worker;Left;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;2;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,100)} u.build(Barracks,EnemyDir,6) u.harvest(25) u.train(Worker,Left,4) if(OpponentHasNumberOfUnits(Base,2)) then {u.moveToUnit(Ally,Strongest)} else { u.attack(Closest)}}
S;For_S;S;S_S;S;C;Harvest;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Right;8;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;C;Attack;Strongest;S;C;Train;Ranged;Right;15	for(Unit u){u.harvest(5) for(Unit u){u.idle()} u.train(Worker,Right,8) for(Unit u){u.build(Barracks,Down,20)} u.attack(Strongest) u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Right;7;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;C;Attack;Strongest;S;C;Train;Ranged;Right;15	for(Unit u){for(Unit u){u.idle()} u.harvest(5) u.train(Worker,Right,7) for(Unit u){u.build(Barracks,Down,20)} u.attack(Strongest) u.train(Ranged,Right,15)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;6;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;C;Harvest;8;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;2;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Light;Up;100;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,6) u.idle() u.train(Worker,Left,4) u.harvest(8) if(HasLessNumberOfUnits(Worker,2)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Light,Up,100) u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;C;Build;Barracks;Right;6;S;S_S;S;C;Train;Ranged;Right;2;S;C;Idle;S;S_S;S;C;Train;Worker;Left;4;S;S_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Worker;2;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Right;8;S;S_S;S;C;Train;Heavy;Up;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,Right,6) u.train(Ranged,Right,2) u.idle() u.train(Worker,Left,4) u.harvest(4) if(HasLessNumberOfUnits(Worker,2)) then {u.moveToUnit(Enemy,MostHealthy)} else { u.train(Heavy,Right,8) u.train(Heavy,Up,100) u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;8;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;Down;15;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) for(Unit u){u.idle() u.train(Light,EnemyDir,8)} u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Light,Down,15)} u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;9;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;7;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;C;Train;Light;Right;9;S;If_B_then_S;B;HasLessNumberOfUnits;Worker;0;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.build(Barracks,Left,9)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){for(Unit u){u.harvest(25) for(Unit u){if(HasNumberOfUnits(Barracks,7)) then {for(Unit u){u.moveToUnit(Ally,MostHealthy)}}} u.attack(Closest) u.train(Light,Right,9)} if(HasLessNumberOfUnits(Worker,0)) then {u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest)}}
S;S_S;S;For_S;S;C;Build;Barracks;Right;9;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Left;8;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,9)} for(Unit u){for(Unit u){u.harvest(25) u.attack(Closest)} u.train(Heavy,Left,8) u.train(Worker,Right,5)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;6;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Left;25;S;C;Train;Worker;Right;5;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.build(Barracks,Right,6)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Closest)} u.train(Heavy,Left,25) u.train(Worker,Right,5)} if(OpponentHasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,Weakest)}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;3;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;15;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;25;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Train;Worker;Right;5;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;3;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Ranged;EnemyDir;4;S;Empty;S;S_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;20;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.build(Barracks,Right,3)} if(OpponentHasNumberOfUnits(Light,15)) then {u.moveToUnit(Ally,Weakest)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(25) u.attack(Closest)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Ally,LessHealthy)} u.train(Worker,Right,5) for(Unit u){u.moveToUnit(Ally,Strongest)} if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.moveToUnit(Ally,Closest) u.train(Ranged,EnemyDir,4)} else { e} u.train(Heavy,Left,10) u.moveToUnit(Enemy,Closest)} if(OpponentHasNumberOfUnits(Barracks,20)) then {u.moveToUnit(Ally,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;S_S;S;C;Harvest;6;S;C;Attack;Weakest;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) u.attack(Weakest) for(Unit u){u.harvest(3)}} for(Unit u){u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;6;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6) for(Unit u){u.harvest(5)}} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){for(Unit u){u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(6)} for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Ranged;Down;4;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;6;S;C;Build;Barracks;Down;50;S;C;Harvest;10;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;Train;Light;Left;5	for(Unit u){u.attack(MostHealthy) u.train(Ranged,Down,4) for(Unit u){u.train(Worker,Left,6) u.build(Barracks,Down,50) u.harvest(10) for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.attack(LessHealthy) u.train(Heavy,Left,15) u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Strongest) u.train(Light,Left,5)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Light;Right;9	for(Unit u){u.build(Barracks,Left,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.harvest(50)} for(Unit u){u.moveAway() u.train(Heavy,Right,6) u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Light,Right,9)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;50;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Ranged;1;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;3;S;C;Attack;Farthest;S;C;Attack;MostHealthy;S;S_S;S;C;Attack;MostHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;HasNumberOfUnits;Light;5;S;For_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;Train;Light;Right;9;S;C;Train;Ranged;Up;50	for(Unit u){u.build(Barracks,Left,7) u.idle() for(Unit u){u.train(Worker,EnemyDir,5)} u.harvest(50)} for(Unit u){u.moveAway() u.train(Heavy,Right,6) for(Unit u){if(HasNumberOfUnits(Ranged,1)) then {if(u.HasUnitWithinDistanceFromOpponent(3)) then {u.attack(Farthest)} u.attack(MostHealthy)}} u.attack(MostHealthy) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(HasNumberOfUnits(Light,5)) then {for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Light,Right,9) u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;C;Idle;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;S_S;S;C;Train;Light;Right;9;S;C;Train;Ranged;Up;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) for(Unit u){u.train(Worker,EnemyDir,5)} u.attack(Weakest)} for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.train(Light,Right,9) u.train(Ranged,Up,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;C;Attack;Weakest;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Train;Light;Right;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,5)} u.attack(Weakest)} for(Unit u){u.train(Heavy,Right,6)} for(Unit u){u.train(Light,Right,50)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;7;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;50;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Attack;Closest;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Right;6;S;For_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Light;Right;50	for(Unit u){u.build(Barracks,Left,7) u.idle() u.harvest(50) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.attack(Closest)} for(Unit u){u.train(Worker,EnemyDir,5)}} for(Unit u){u.train(Heavy,Right,6) for(Unit u){u.attack(LessHealthy)}} for(Unit u){u.train(Light,Right,50)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.harvest(20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.attack(MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;20;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;20;S;C;Train;Worker;Left;3;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;For_S;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle() u.harvest(20) for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,20)} u.train(Worker,Left,3)}} for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){for(Unit u){u.attack(LessHealthy)} if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Barracks;10;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;25;S;For_S;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Train;Worker;Up;10;S;For_S;S;C;Harvest;4	for(Unit u){if(HasNumberOfUnits(Barracks,10)) then {for(Unit u){u.moveToUnit(Enemy,Farthest) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Farthest)} else { u.moveToUnit(Ally,Farthest)}} for(Unit u){u.moveToUnit(Ally,LessHealthy)}} else { u.idle() u.train(Heavy,Down,25)}} for(Unit u){for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,15) u.attack(Weakest) u.train(Light,EnemyDir,6) u.train(Worker,Up,10) for(Unit u){u.harvest(4)}}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;C;Attack;Weakest;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;6;S;C;Train;Worker;Left;10;S;For_S;S;C;Harvest;4	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Ally,Closest)}} for(Unit u){if(u.is(Heavy)) then {u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.build(Barracks,EnemyDir,15) u.attack(Weakest) u.train(Light,EnemyDir,6) u.train(Worker,Left,10) for(Unit u){u.harvest(4)}}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;S_S;S;For_S;S;C;Harvest;3;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} for(Unit u){u.harvest(3)} u.build(Barracks,Up,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;Up;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,Up,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;4;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){u.train(Light,EnemyDir,4) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;6;S;For_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;4;S;C;Harvest;8;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Train;Worker;Right;9;S;C;Build;Barracks;EnemyDir;20;S;For_S;S;C;Train;Heavy;Left;8;S;For_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {for(Unit u){u.idle() for(Unit u){u.build(Barracks,Down,4)} u.harvest(8)}}} for(Unit u){u.build(Barracks,Up,1) if(u.HasUnitInOpponentRange()) then {e} else { u.train(Worker,Right,9)} u.build(Barracks,EnemyDir,20)} for(Unit u){u.train(Heavy,Left,8)} for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;15;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;S_S;S;For_S;S;C;Train;Ranged;Left;5;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasNumberOfUnits;Ranged;0;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,EnemyDir,15)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.train(Ranged,Left,5)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(HasNumberOfUnits(Ranged,0)) then {for(Unit u){u.harvest(3)}} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;8;S;C;Train;Ranged;Left;5	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(Farthest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Left,8) u.train(Ranged,Left,5)}
S;S_S;S;For_S;S;C;Harvest;2;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;3;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Light;Left;8;S;C;Train;Ranged;Left;5	for(Unit u){u.harvest(2)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(6)} for(Unit u){u.train(Worker,EnemyDir,3)} for(Unit u){u.attack(Strongest) u.moveToUnit(Ally,LessHealthy) u.train(Light,Left,8) u.train(Ranged,Left,5)}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;C;Harvest;20;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;Empty;S;S_S;S;For_S;S;C;Harvest;10;S;S_S;S;For_S;S;C;Train;Light;Right;100;S;S_S;S;For_S;S;C;Build;Barracks;Right;8;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Farthest;S;Empty;S;For_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Worker;Down;20	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy)} if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.harvest(20) for(Unit u){u.moveToUnit(Enemy,Closest)}}} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)} else { e} for(Unit u){u.harvest(10)} for(Unit u){u.train(Light,Right,100)} for(Unit u){u.build(Barracks,Right,8)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Farthest)} else { e} for(Unit u){u.attack(Closest)} if(u.isBuilder()) then {e} else { u.train(Worker,Down,20)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;4;S;For_S;S;C;Build;Barracks;Left;9;S;C;MoveAway;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;For_S;S;C;Train;Heavy;Up;100	for(Unit u){u.idle() u.harvest(4) for(Unit u){u.build(Barracks,Left,9)} u.moveAway() u.attack(MostHealthy)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.train(Heavy,Up,100)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;15;S;C;Attack;LessHealthy;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Left;25;S;For_S;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.idle() if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Farthest)}} u.harvest(15) u.attack(LessHealthy)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,LessHealthy)} u.train(Worker,Left,25) for(Unit u){u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Worker;Up;100;S;For_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){if(u.canAttack()) then {u.moveToUnit(Ally,Closest)} for(Unit u){u.harvest(4)} u.train(Worker,Up,100) for(Unit u){u.attack(Closest)} u.moveToUnit(Enemy,Closest)} for(Unit u){if(HasNumberOfWorkersHarvesting(2)) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}}}}}
S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;7;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveAway;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Build;Barracks;Left;50;S;S_S;S;For_S;S;C;Harvest;4;S;C;Train;Ranged;Down;50;S;For_S;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,7)} for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveAway()}} for(Unit u){u.idle()} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.build(Barracks,Left,50)} for(Unit u){u.harvest(4)} u.train(Ranged,Down,50)} for(Unit u){u.attack(MostHealthy)} for(Unit u){if(u.is(Ranged)) then {u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;10;S;S_S;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){for(Unit u){u.build(Barracks,Down,20)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}} u.harvest(10) if(u.canAttack()) then {for(Unit u){u.idle()}} u.moveAway() u.train(Worker,Down,8) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Heavy,Down,10) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;20;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;If_B_then_S_else_S;B;CanHarvest;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Weakest;S;C;Harvest;10;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Heavy;Down;10;S;C;MoveToUnit;Ally;Closest;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.build(Barracks,Down,20)} if(u.HasUnitWithinDistanceFromOpponent(15)) then {if(u.canHarvest()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Enemy,Weakest)}} u.harvest(10) for(Unit u){u.idle()} u.moveAway() u.train(Worker,Down,8) u.moveToUnit(Ally,Farthest)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){for(Unit u){u.attack(Weakest)} u.train(Heavy,Down,10) u.moveToUnit(Ally,Closest)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;25	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Weakest)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.harvest(6) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} u.attack(Weakest)} for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;3;S;C;Harvest;9;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Train;Worker;Left;20;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle() u.harvest(3)} u.harvest(9)} for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Worker,Left,20) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Up;100;S;For_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;1;S;For_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;5;S;C;Train;Worker;Up;8;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;5	for(Unit u){for(Unit u){u.train(Light,Up,100)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(1)}} for(Unit u){for(Unit u){u.build(Barracks,Down,5) u.train(Worker,Up,8) u.attack(LessHealthy) for(Unit u){u.harvest(5)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;10;S;S_S;S;C;Harvest;8;S;C;Train;Heavy;EnemyDir;9;S;For_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;C;Attack;Strongest;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.build(Barracks,Down,10) u.harvest(8) u.train(Heavy,EnemyDir,9)} for(Unit u){if(u.HasUnitInOpponentRange()) then {u.attack(Closest)} else { u.attack(Strongest)}} if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Enemy,Strongest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.train(Worker,Down,7) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;25;S;For_S;S;C;Idle;S;S_S;S;For_S;S;For_S;S;C;Attack;Farthest;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.harvest(25) for(Unit u){u.idle()}} for(Unit u){for(Unit u){u.attack(Farthest)}} for(Unit u){u.train(Worker,Left,25)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;Left;25	for(Unit u){for(Unit u){u.idle()} u.attack(MostHealthy) for(Unit u){u.harvest(6)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.train(Worker,Left,25)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;MostHealthy;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;3;S;For_S;S;C;Train;Light;Right;5;S;For_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;8;S;C;Train;Light;EnemyDir;9	for(Unit u){u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(MostHealthy)} for(Unit u){if(HaveQtdUnitsAttacking(3)) then {for(Unit u){u.train(Light,Right,5)}}} for(Unit u){for(Unit u){u.train(Heavy,EnemyDir,8) u.train(Light,EnemyDir,9)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Farthest	for(Unit u){u.train(Heavy,Right,7) u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;7;S;C;Idle;S;C;Train;Worker;Down;25;S;C;Harvest;10;S;S_S;S;C;Build;Barracks;Right;5;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Right,7) u.idle() u.train(Worker,Down,25) u.harvest(10) u.build(Barracks,Right,5) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;9;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Ranged;EnemyDir;6;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Worker,Right,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){u.harvest(15) u.idle() u.train(Heavy,Down,9)} if(u.canAttack()) then {if(u.HasUnitInOpponentRange()) then {for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Enemy,Farthest)}}}}} for(Unit u){u.attack(Strongest) if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest) u.moveToUnit(Enemy,Weakest)} else { u.train(Ranged,EnemyDir,6)} for(Unit u){u.moveToUnit(Ally,Strongest)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Idle;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {u.idle()} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveAway() u.attack(Strongest) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Barracks;9;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.build(Barracks,EnemyDir,5)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Strongest) if(HasNumberOfUnits(Barracks,9)) then {u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Idle;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,6) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.build(Barracks,EnemyDir,5)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.idle()} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Down;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;6;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;Closest;S;C;Harvest;15;S;C;Train;Heavy;Down;9;S;For_S;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,6) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} for(Unit u){u.build(Barracks,EnemyDir,6)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Weakest)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveToUnit(Ally,LessHealthy)} else { u.moveToUnit(Enemy,LessHealthy)} u.moveToUnit(Enemy,Closest) for(Unit u){if(u.isBuilder()) then {e} else { u.attack(Closest)} u.harvest(15) u.train(Heavy,Down,9)}} for(Unit u){u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;Build;Barracks;EnemyDir;7;S;For_S;S;C;Harvest;20;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;Train;Worker;Left;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Enemy;Strongest;S;Empty	for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} else { u.build(Barracks,EnemyDir,7)}} for(Unit u){u.harvest(20)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.moveToUnit(Ally,Farthest)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.attack(LessHealthy) u.train(Worker,Left,4)}} for(Unit u){u.train(Light,EnemyDir,20)} for(Unit u){for(Unit u){if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Enemy,Strongest)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;Left;8;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;C;Train;Worker;Up;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Heavy;Up;50;S;For_S;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.build(Barracks,Left,8)} for(Unit u){u.harvest(5)} u.train(Worker,Up,5) u.moveToUnit(Enemy,Weakest) u.train(Heavy,Up,50) for(Unit u){u.attack(Strongest)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;C;Idle;S;S_S;S;C;Harvest;3;S;C;Attack;Weakest;S;For_S;S;C;Build;Barracks;Left;100;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.train(Light,Left,25) u.idle() u.harvest(3) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,8)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Left;25;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Left;100;S;S_S;S;C;Idle;S;C;Harvest;9;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Train;Worker;EnemyDir;8	for(Unit u){u.train(Light,Left,25) u.attack(Weakest) for(Unit u){u.build(Barracks,Left,100) u.idle() u.harvest(9)}} for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Worker,EnemyDir,8)}
S;S_S;S;For_S;S;C;Train;Worker;Right;5;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;HasLessNumberOfUnits;Base;1;S;For_S;S;For_S;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Barracks;Left;20;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;6;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;MostHealthy;S;C;Attack;Closest;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Up;9;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;C;Train;Light;Left;50;S;Empty	for(Unit u){u.train(Worker,Right,5)} for(Unit u){u.idle()} for(Unit u){if(u.canAttack()) then {if(HasLessNumberOfUnits(Base,1)) then {for(Unit u){for(Unit u){for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}}}}}}} u.build(Barracks,Left,20)} for(Unit u){u.harvest(6) if(u.isBuilder()) then {e} else { if(u.HasUnitThatKillsInOneAttack()) then {u.attack(MostHealthy)}} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Up,9)} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Light,Left,50)}} else { e}}
S;S_S;S;For_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;Empty;S;C;Harvest;2;S;For_S;S;C;MoveAway;S;S_S;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;For_S;S;C;Attack;Strongest;S;For_S;S;C;Train;Worker;EnemyDir;25	for(Unit u){if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,Weakest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {e} else { u.harvest(2)}} for(Unit u){u.moveAway()}}} for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.harvest(5)} if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){for(Unit u){u.attack(Strongest)}}}} for(Unit u){u.train(Worker,EnemyDir,25)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;15;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;50;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty	for(Unit u){u.train(Worker,Right,15) if(u.canAttack()) then {u.idle()} else { u.moveToUnit(Ally,LessHealthy)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(50) u.attack(Closest)} u.moveToUnit(Enemy,Farthest)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,LessHealthy)} else { e}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;C;Idle;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Worker,Right,6) if(u.canAttack()) then {u.idle()} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(50) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Right;6;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;For_S;S;C;Train;Worker;Down;100;S;S_S;S;C;Harvest;8;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.idle()} for(Unit u){u.train(Worker,Right,6) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.train(Worker,Down,100)} u.harvest(8) u.attack(LessHealthy)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,Strongest)}
S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;10;S;S_S;S;For_S;S;C;Build;Barracks;Up;9;S;For_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;S_S;S;C;Harvest;6;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;10;S;S_S;S;C;Idle;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;C;MoveAway;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;Strongest;S;S_S;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;2;S;For_S;S;C;Train;Ranged;EnemyDir;25	for(Unit u){u.train(Worker,Left,10)} for(Unit u){u.build(Barracks,Up,9)} for(Unit u){for(Unit u){if(u.is(Barracks)) then {u.moveToUnit(Enemy,Farthest)}}} for(Unit u){u.harvest(6) if(HasLessNumberOfUnits(Ranged,10)) then {u.idle() if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway() u.moveToUnit(Enemy,Strongest) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.idle() u.attack(MostHealthy)} u.moveToUnit(Enemy,Weakest) u.train(Heavy,Left,2)} for(Unit u){u.train(Ranged,EnemyDir,25)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Attack;Strongest	for(Unit u){u.harvest(100) u.idle() u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest) if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.train(Heavy,EnemyDir,100) u.moveToUnit(Ally,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.attack(Strongest)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Light;2;S;Empty;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;100;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;S_S;S;C;Train;Worker;Down;5;S;For_S;S;C;Build;Barracks;Right;50;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Heavy;10;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Train;Heavy;EnemyDir;100;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Light;1;S;For_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(HasLessNumberOfUnits(Light,2)) then {e} else { u.moveToUnit(Ally,LessHealthy)} u.harvest(100) for(Unit u){u.idle()} if(u.isBuilder()) then {e} else { u.train(Worker,Down,5) for(Unit u){u.build(Barracks,Right,50)}} u.attack(Weakest) for(Unit u){if(HasNumberOfUnits(Heavy,10)) then {u.moveToUnit(Ally,Closest)}} u.train(Heavy,EnemyDir,100) u.moveToUnit(Enemy,Farthest) if(OpponentHasNumberOfUnits(Light,1)) then {for(Unit u){u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,LessHealthy)}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;20;S;C;Train;Heavy;Up;3;S;C;MoveAway;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(20) u.train(Heavy,Up,3) u.moveAway() u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;7;S;C;Train;Heavy;Up;3;S;C;Train;Worker;EnemyDir;9;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(7) u.train(Heavy,Up,3) u.train(Worker,EnemyDir,9) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;S_S;S;C;Build;Barracks;Left;20;S;C;Train;Heavy;Left;5;S;C;Train;Worker;Left;6;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;9;S;C;Harvest;7;S;C;Train;Worker;EnemyDir;9;S;C;Attack;Strongest	for(Unit u){u.harvest(2) u.build(Barracks,Left,20) u.train(Heavy,Left,5) u.train(Worker,Left,6)} for(Unit u){u.train(Light,Down,9) u.harvest(7) u.train(Worker,EnemyDir,9) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Left;15	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Left,7) u.build(Barracks,Up,3) u.idle() u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,15)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Train;Ranged;EnemyDir;20;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Right;7;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Light;Left;15;S;C;MoveAway	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Worker,Left,7) u.build(Barracks,Up,3) if(u.HasUnitInOpponentRange()) then {u.train(Ranged,EnemyDir,20)} u.idle() u.harvest(100) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Right,7)} u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,15) u.moveAway()}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Worker;EnemyDir;6;S;S_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Right;9;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;OpponentHasNumberOfUnits;Barracks;8;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Strongest	for(Unit u){if(u.canAttack()) then {e} else { u.moveToUnit(Enemy,Weakest)} u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Worker,EnemyDir,6) u.harvest(100) u.moveToUnit(Enemy,MostHealthy) u.train(Light,Right,9) u.moveToUnit(Ally,Farthest) if(OpponentHasNumberOfUnits(Barracks,8)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Strongest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;5;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.train(Light,EnemyDir,5) u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Train;Heavy;Left;7;S;S_S;S;S_S;S;C;Build;Barracks;Up;3;S;C;Idle;S;S_S;S;C;Harvest;100;S;C;Attack;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.train(Heavy,Left,7) u.build(Barracks,Up,3) u.idle() u.harvest(100) u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;For_S;S;C;Train;Worker;Right;3;S;C;Attack;MostHealthy;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;C;Train;Light;Up;5;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Right,3)} u.attack(MostHealthy) for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.idle() for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.train(Light,Up,5) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;5;S;C;Idle;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Train;Heavy;Left;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;9;S;C;Harvest;9;S;C;Train;Light;Up;5;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5) u.idle()} for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,MostHealthy)} else { u.moveToUnit(Ally,Farthest)} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest) for(Unit u){u.build(Barracks,Up,9) u.harvest(9)} u.train(Light,Up,5) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Train;Worker;Right;3;S;For_S;S;C;Train;Heavy;Left;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Up;9;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Left;8	for(Unit u){for(Unit u){u.harvest(5)} for(Unit u){u.train(Worker,Right,3)} for(Unit u){u.train(Heavy,Left,6)} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Enemy,Closest)} else { u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.idle() u.build(Barracks,Up,9) u.attack(Weakest)} u.moveToUnit(Ally,Closest) u.train(Worker,Left,8)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Idle;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){u.train(Light,Right,3)} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.idle() if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(MostHealthy)} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;9;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Right;3;S;S_S;S;C;Harvest;2;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;3;S;C;Harvest;6;S;S_S;S;C;Build;Barracks;Right;5;S;C;Harvest;8;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;MostHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;7;S;For_S;S;C;MoveAway;S;C;Train;Worker;Up;8	for(Unit u){u.train(Heavy,Up,9) for(Unit u){for(Unit u){u.train(Light,Right,3)} u.harvest(2) u.idle()} for(Unit u){u.harvest(3)} u.harvest(6) u.build(Barracks,Right,5) u.harvest(8) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(MostHealthy)} if(HasNumberOfWorkersHarvesting(7)) then {for(Unit u){u.moveAway()}} u.train(Worker,Up,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {for(Unit u){u.attack(LessHealthy)}} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Ally;Closest;S;Empty;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;3;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Ally,Closest)} else { e} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(3)} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;6;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} u.harvest(6) for(Unit u){u.train(Light,Left,6)} u.build(Barracks,Down,1) u.harvest(7) u.attack(Strongest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.harvest(3)} u.build(Barracks,Down,1) u.harvest(7) u.attack(MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;C;Train;Worker;Right;7;S;For_S;S;C;Idle;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;4;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Build;Barracks;Down;1;S;C;Harvest;7;S;C;Attack;MostHealthy	for(Unit u){u.idle() for(Unit u){u.train(Heavy,Up,10)} u.train(Worker,Right,7) for(Unit u){u.idle()} if(u.HasUnitWithinDistanceFromOpponent(4)) then {u.moveToUnit(Enemy,Closest)} u.build(Barracks,Down,1) u.harvest(7) u.attack(MostHealthy)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.attack(MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest) u.moveToUnit(Enemy,Closest)} u.train(Ranged,EnemyDir,3) for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Down;15	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest)} for(Unit u){u.moveToUnit(Ally,Closest)} u.train(Worker,Down,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;9;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,9) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;Closest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Ally,LessHealthy)} u.train(Heavy,Up,15) u.train(Worker,Up,6) u.attack(Closest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Harvest;10;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;MoveToUnit;Enemy;Farthest;S;C;Train;Heavy;Up;15;S;S_S;S;C;Train;Worker;Up;6;S;C;Attack;Closest;S;C;Train;Ranged;Up;20	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8)} u.moveToUnit(Enemy,Strongest) for(Unit u){u.harvest(10)} for(Unit u){if(HaveQtdUnitsAttacking(6)) then {u.moveToUnit(Enemy,Farthest)} u.train(Heavy,Up,15) u.train(Worker,Up,6) u.attack(Closest)} u.train(Ranged,Up,20)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,7) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){if(u.canHarvest()) then {u.idle()}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,7) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;2;S;C;Train;Heavy;Up;25;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;C;Train;Light;Left;5;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,7) for(Unit u){if(u.canHarvest()) then {u.idle()}} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){if(HaveQtdUnitsAttacking(2)) then {u.train(Heavy,Up,25)}} u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} u.train(Light,Left,5) for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;6;S;For_S;S;C;Train;Heavy;Up;2;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Train;Light;Left;7;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;S_S;S;C;Idle;S;For_S;S;S_S;S;C;Train;Light;Up;4;S;C;Build;Barracks;Left;100;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;6;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.train(Worker,Down,6) for(Unit u){u.train(Heavy,Up,2)} u.moveToUnit(Enemy,Closest) u.train(Light,Left,7) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle() for(Unit u){u.train(Light,Up,4) u.build(Barracks,Left,100)}} for(Unit u){u.harvest(9)} u.moveToUnit(Ally,Weakest) u.train(Ranged,EnemyDir,15) for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)} for(Unit u){if(u.canAttack()) then {u.moveToUnit(Enemy,Strongest)} else { u.moveToUnit(Enemy,Farthest)}} u.moveToUnit(Ally,Closest) if(HasNumberOfWorkersHarvesting(6)) then {u.moveToUnit(Enemy,LessHealthy)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;50;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;If_B_then_S;B;IsBuilder;S;C;Build;Barracks;Left;100;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Light;Left;10;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(6)} u.attack(Closest) u.train(Worker,Left,7) u.moveToUnit(Enemy,Weakest) if(u.HasUnitWithinDistanceFromOpponent(50)) then {if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,Strongest)} else { e} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Left,100)}}}} u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Light,Left,10)} u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;9;S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;3;S;C;Build;Barracks;EnemyDir;15;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(9)) then {for(Unit u){u.train(Ranged,EnemyDir,3) u.build(Barracks,EnemyDir,15)}} else { e}} u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;C;Train;Light;EnemyDir;2;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;10;S;For_S;S;C;Build;Barracks;Left;2;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;For_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Light;Left;15;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;EnemyDir;2;S;C;Train;Worker;EnemyDir;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;20	for(Unit u){u.idle() u.harvest(10) for(Unit u){u.build(Barracks,Left,2)} u.train(Light,EnemyDir,2) for(Unit u){u.harvest(8)} u.moveToUnit(Enemy,Weakest) u.train(Light,Left,15) u.attack(Closest) for(Unit u){u.train(Ranged,EnemyDir,2)} u.train(Worker,EnemyDir,10) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(20)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Build;Barracks;Right;20;S;For_S;S;C;Harvest;2;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Down;5;S;S_S;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle;S;C;Train;Worker;Left;7;S;S_S;S;If_B_then_S;B;HasUnitInOpponentRange;S;If_B_then_S_else_S;B;is_Type;Worker;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;C;Harvest;3;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;C;Train;Heavy;Left;15;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;OpponentHasNumberOfUnits;Ranged;5;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;MoveToUnit;Ally;Strongest;S;Empty;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle() u.build(Barracks,Right,20) for(Unit u){u.harvest(2)} u.harvest(4) u.train(Light,Down,5) u.attack(Closest) for(Unit u){u.idle()} u.train(Worker,Left,7) if(u.HasUnitInOpponentRange()) then {if(u.is(Worker)) then {if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(Closest)}}} else { for(Unit u){u.harvest(3) u.attack(MostHealthy)}}} u.train(Heavy,Left,15) if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) if(OpponentHasNumberOfUnits(Ranged,5)) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(u.is(Barracks)) then {for(Unit u){u.attack(LessHealthy)}} if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,Strongest)} else { e} if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Worker;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Worker,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;S_S;S;S_S;S;C;Train;Light;Right;4;S;C;Idle;S;For_S;S;C;Train;Heavy;Down;3;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) u.train(Light,Right,4) u.idle() for(Unit u){u.train(Heavy,Down,3)} u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Train;Heavy;Left;5;S;For_S;S;C;Train;Heavy;Down;3;S;C;Idle;S;C;Harvest;8;S;S_S;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.harvest(3)} u.build(Barracks,EnemyDir,100) u.train(Heavy,Left,5) for(Unit u){u.train(Heavy,Down,3)} u.idle() u.harvest(8)} for(Unit u){u.train(Worker,Left,5)} for(Unit u){u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Attack;Farthest;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Worker;S;C;Build;Barracks;Left;2;S;If_B_then_S;B;HasUnitInOpponentRange;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Worker;Right;5;S;S_S;S;C;Train;Heavy;Up;25;S;For_S;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.idle() u.attack(Farthest) for(Unit u){if(u.is(Worker)) then {u.build(Barracks,Left,2)}} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.train(Worker,Right,5) u.train(Heavy,Up,25) for(Unit u){u.harvest(50)}} for(Unit u){u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Worker;Down;7;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;6;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Harvest;15;S;C;Train;Heavy;EnemyDir;7;S;C;Attack;Weakest;S;If_B_then_S_else_S;B;is_Type;Light;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.train(Worker,Down,7) for(Unit u){u.idle() u.build(Barracks,EnemyDir,6)} if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveToUnit(Enemy,Closest)} if(u.canAttack()) then {u.harvest(15)} u.train(Heavy,EnemyDir,7) u.attack(Weakest) if(u.is(Light)) then {u.moveToUnit(Ally,Strongest)} else { u.moveToUnit(Enemy,Farthest)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Right;5;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;20;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;8;S;S_S;S;C;Train;Worker;EnemyDir;50;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Right,5) if(u.isBuilder()) then {u.harvest(3)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.build(Barracks,EnemyDir,3) u.harvest(20)}} else { for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)} u.moveToUnit(Ally,LessHealthy) if(HasNumberOfUnits(Heavy,8)) then {u.train(Worker,EnemyDir,50) u.moveToUnit(Enemy,MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;If_B_then_S;B;IsBuilder;S;C;Harvest;3;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;S_S;S;C;Build;Barracks;EnemyDir;3;S;C;Harvest;20;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5) if(u.isBuilder()) then {u.harvest(3)}} for(Unit u){if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.build(Barracks,EnemyDir,3) u.harvest(20)}} else { for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;S_S;S;C;Train;Worker;Up;2;S;C;Train;Worker;Up;5;S;C;Train;Heavy;Left;3;S;For_S;S;S_S;S;C;Build;Barracks;Up;50;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanAttack;S;For_S;S;S_S;S;C;Train;Ranged;Right;5;S;C;Harvest;20;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Heavy;Down;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Attack;LessHealthy	for(Unit u){u.idle() u.train(Worker,Up,2) u.train(Worker,Up,5) u.train(Heavy,Left,3)} for(Unit u){u.build(Barracks,Up,50) if(u.canAttack()) then {for(Unit u){u.train(Ranged,Right,5) u.harvest(20)}} else { u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Down,100)}} u.moveToUnit(Enemy,LessHealthy) if(u.isBuilder()) then {e} else { u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Worker;Right;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(50) for(Unit u){u.train(Heavy,Up,15)} for(Unit u){u.harvest(4)} if(HasNumberOfUnits(Worker,5)) then {if(HasNumberOfUnits(Worker,8)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} else { u.train(Worker,Right,8)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Train;Heavy;Up;15;S;For_S;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;If_B_then_S;B;HasNumberOfUnits;Worker;8;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Train;Worker;Right;8;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Left,6) u.harvest(50) for(Unit u){u.train(Heavy,Up,15)} for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Farthest) if(HasNumberOfUnits(Worker,5)) then {if(HasNumberOfUnits(Worker,8)) then {for(Unit u){u.moveToUnit(Ally,Weakest)}}} else { u.moveToUnit(Ally,LessHealthy) u.train(Worker,Right,8) for(Unit u){u.attack(Strongest)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Train;Light;Left;8;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.train(Heavy,EnemyDir,15) u.train(Light,Left,8)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Down,25)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Train;Worker;Up;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;For_S;S;C;Train;Heavy;Down;7;S;S_S;S;For_S;S;C;Train;Light;Left;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;Train;Light;Down;25;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){u.idle()} u.train(Worker,Up,6) u.build(Barracks,Left,6) u.harvest(6) for(Unit u){u.train(Heavy,Down,7)} for(Unit u){u.train(Light,Left,8)} u.moveToUnit(Enemy,MostHealthy) if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.train(Light,Down,25)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;6;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;Harvest;6;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;C;Harvest;1;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;8;S;Empty;S;C;MoveAway;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.train(Worker,EnemyDir,6) u.build(Barracks,Left,6) u.harvest(6) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15) u.harvest(1)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {e} else { u.moveAway()} u.train(Worker,Down,8) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;If_B_then_S;B;is_Type;Ranged;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;2;S;For_S;S;C;MoveAway;S;S_S;S;C;Train;Worker;Right;15;S;For_S;S;C;Attack;Farthest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Farthest	for(Unit u){for(Unit u){for(Unit u){u.idle()}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest)} if(u.is(Ranged)) then {u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,2) for(Unit u){u.moveAway()} u.train(Worker,Right,15) for(Unit u){u.attack(Farthest)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(20)) then {u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,Farthest)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Farthest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Ranged;Up;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest)}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)} u.train(Ranged,Up,10)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;Right;15;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,1)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.idle() u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { u.train(Light,Right,15)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Base;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Train;Heavy;Left;1;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Heavy;Up;8;S;S_S;S;For_S;S;C;Build;Barracks;Left;6;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Attack;MostHealthy;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;C;MoveToUnit;Ally;Closest;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;EnemyDir;10;S;C;Train;Ranged;Up;10	for(Unit u){for(Unit u){if(u.is(Base)) then {u.moveToUnit(Ally,Closest) for(Unit u){u.train(Heavy,Left,1)}}} u.moveToUnit(Enemy,MostHealthy) u.train(Heavy,Up,8) for(Unit u){u.build(Barracks,Left,6)} u.moveToUnit(Ally,Closest) for(Unit u){u.idle()} for(Unit u){u.harvest(8) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest) u.attack(MostHealthy)} if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.moveToUnit(Ally,Closest)} else { e} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Worker,EnemyDir,10)} u.train(Ranged,Up,10)}

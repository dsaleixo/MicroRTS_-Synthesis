S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;15;S;C;Attack;Strongest;S;C;Harvest;5;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,10) for(Unit u){u.idle()} if(HaveQtdUnitsAttacking(15)) then {u.attack(Strongest)} else { u.harvest(5)} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;15;S;C;Attack;Strongest;S;For_S;S;C;Harvest;7;S;S_S;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;LessHealthy	for(Unit u){u.train(Worker,Up,10) for(Unit u){for(Unit u){u.idle()}} if(HaveQtdUnitsAttacking(15)) then {u.attack(Strongest)} else { for(Unit u){u.harvest(7)}} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;C;Train;Worker;Up;10;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;7;S;C;Build;Base;Up;15;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;C;Train;Worker;Left;100;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Farthest	for(Unit u){u.train(Worker,Up,10) for(Unit u){u.harvest(7)} u.build(Base,Up,15) if(u.canAttack()) then {u.idle()} u.train(Worker,Left,100) u.moveToUnit(Enemy,Weakest) u.attack(Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;8;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;5;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Down;4;S;S_S;S;S_S;S;If_B_then_S;B;HasNumberOfUnits;Light;9;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Harvest;8;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;MoveAway	for(Unit u){u.train(Ranged,Up,8) u.train(Light,EnemyDir,5) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,4)} if(HasNumberOfUnits(Light,9)) then {u.moveToUnit(Enemy,LessHealthy)} for(Unit u){u.harvest(8)} if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.idle()}} u.moveToUnit(Enemy,Weakest) for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;C;Harvest;20;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Build;Barracks;Down;4;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;1;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.train(Light,Left,25)} u.harvest(20) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) for(Unit u){u.build(Barracks,Down,4)} u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {e} else { if(OpponentHasNumberOfUnits(Worker,1)) then {u.moveToUnit(Enemy,Weakest)} for(Unit u){u.idle()}} u.moveToUnit(Ally,Closest)}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Left;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,Left,15) u.idle()} for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;100;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.moveToUnit(Ally,Farthest) for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,100)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;100;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,100)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Left;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Worker;Up;4;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Left,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,4)} u.attack(MostHealthy)}}
S;For_S;S;S_S;S;C;Attack;Strongest;S;S_S;S;For_S;S;C;Train;Light;Up;25;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;15;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;25;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;MostHealthy	for(Unit u){u.attack(Strongest) for(Unit u){u.train(Light,Up,25)} for(Unit u){u.build(Barracks,EnemyDir,15) u.idle()} for(Unit u){u.harvest(5)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Worker,Up,4) u.moveToUnit(Ally,LessHealthy)} u.attack(MostHealthy)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Ally;Farthest;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {e} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Ally,Farthest) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} u.attack(Weakest) if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Right;10;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;If_B_then_S;B;HasNumberOfUnits;Worker;100;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Right,10)} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} if(HasNumberOfUnits(Worker,100)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;Up;10;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Attack;Closest;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;For_S;S;C;MoveToUnit;Ally;Closest;S;C;Train;Light;EnemyDir;25;S;If_B_then_S;B;HasNumberOfUnits;Heavy;20;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;100;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;MoveAway;S;For_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Up;3;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;Weakest	for(Unit u){if(u.isBuilder()) then {u.moveToUnit(Enemy,Closest)} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Up,10)} if(u.canAttack()) then {for(Unit u){u.attack(Closest)}} if(u.isBuilder()) then {for(Unit u){u.moveToUnit(Ally,Closest)}} else { u.train(Light,EnemyDir,25)} if(HasNumberOfUnits(Heavy,20)) then {for(Unit u){u.moveToUnit(Enemy,Farthest)}} for(Unit u){u.harvest(100)} u.moveToUnit(Enemy,LessHealthy) if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.moveAway()}}}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,Farthest)} u.train(Worker,Up,3) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;10;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {if(u.HasUnitWithinDistanceFromOpponent(10)) then {u.moveToUnit(Ally,Weakest)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Ally,MostHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Attack;Farthest;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.attack(Farthest)} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;C;Train;Heavy;Down;15;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.attack(Closest) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.isBuilder()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} u.train(Heavy,Down,15) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;C;Train;Worker;Down;5;S;If_B_then_S;B;CanHarvest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Build;Barracks;Up;7;S;S_S;S;C;Train;Heavy;Down;15;S;C;Train;Ranged;Down;15;S;C;Attack;Closest;S;For_S;S;C;Harvest;9;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()}} for(Unit u){u.build(Barracks,EnemyDir,1)} u.train(Worker,Down,5) if(u.canHarvest()) then {u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.build(Barracks,Up,7)}} u.train(Heavy,Down,15) u.train(Ranged,Down,15) u.attack(Closest) for(Unit u){u.harvest(9)}} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;20;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Build;Base;EnemyDir;10;S;For_S;S;C;Harvest;6;S;For_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;100	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,20)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { for(Unit u){u.build(Base,EnemyDir,10)} for(Unit u){u.harvest(6)}} for(Unit u){u.attack(Weakest)} u.train(Worker,EnemyDir,100)}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Up;100;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) u.attack(Closest) u.train(Worker,Up,100) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(3)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;C;Attack;Weakest;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) u.attack(Weakest) u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;For_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} u.attack(Strongest) for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) for(Unit u){u.train(Worker,Up,8)} u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;7;S;S_S;S;C;Idle;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;C;Train;Ranged;Right;10;S;For_S;S;C;Train;Worker;Up;8;S;C;Train;Worker;Up;100;S;For_S;S;C;Harvest;3	for(Unit u){for(Unit u){u.train(Light,EnemyDir,7)} u.idle() u.attack(Strongest) for(Unit u){u.build(Barracks,Down,1)} u.train(Ranged,Right,10) for(Unit u){u.train(Worker,Up,8)} u.train(Worker,Up,100) for(Unit u){u.harvest(3)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway() u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} u.attack(Weakest) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;For_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;Train;Worker;Right;3;S;For_S;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} for(Unit u){u.idle()} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.train(Worker,Right,3) for(Unit u){u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;3;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Worker,Left,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.moveAway() u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,3) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Left;2;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;C;MoveAway;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;20;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Worker,Left,2) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} u.moveAway() u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,20) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;Right;1;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;Right;9;S;C;Train;Worker;Right;3;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;15;S;For_S;S;S_S;S;C;Train;Heavy;Left;20;S;If_B_then_S_else_S;B;CanAttack;S;Empty;S;C;Train;Light;Right;25	for(Unit u){u.moveToUnit(Enemy,Strongest) for(Unit u){u.build(Barracks,Right,1)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.attack(Closest)}} for(Unit u){u.train(Heavy,Right,9)} u.train(Worker,Right,3) for(Unit u){u.idle() u.harvest(15)} for(Unit u){u.train(Heavy,Left,20) if(u.canAttack()) then {e} else { u.train(Light,Right,25)}}}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Right;50	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Right,50)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Right;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Right,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Worker,Down,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){u.train(Heavy,EnemyDir,5)} u.train(Heavy,Down,7) u.train(Worker,Down,3)}
S;S_S;S;For_S;S;C;Build;Barracks;Down;4;S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;Harvest;3;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;C;Train;Heavy;Down;7;S;C;Train;Worker;Down;3	for(Unit u){u.build(Barracks,Down,4)} for(Unit u){for(Unit u){if(HasNumberOfUnits(Worker,3)) then {u.harvest(3)}} for(Unit u){u.attack(Closest)} u.train(Heavy,Down,7) u.train(Worker,Down,3)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;C;Harvest;100;S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Train;Worker;Left;5;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(100)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {u.attack(LessHealthy) for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.attack(LessHealthy) u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveToUnit(Ally,LessHealthy)} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;C;Attack;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;Train;Worker;Left;5;S;For_S;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Strongest) for(Unit u){u.build(Barracks,EnemyDir,1)} u.attack(Closest)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) if(u.canAttack()) then {for(Unit u){u.train(Worker,Left,5)}} for(Unit u){u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Down;3;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,3) u.train(Heavy,Up,10)}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Harvest;6;S;C;Attack;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;Train;Heavy;Down;9;S;C;Train;Heavy;Up;10	for(Unit u){u.idle() u.harvest(6) u.attack(MostHealthy) u.train(Worker,EnemyDir,9) u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,EnemyDir,1)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Heavy,Down,9) u.train(Heavy,Up,10)}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;2;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;6;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(2)} u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(6) u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}} if(u.HasUnitInOpponentRange()) then {e} else { if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}}}
S;For_S;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Harvest;2;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.harvest(2)} u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(2) u.train(Worker,Down,3) u.idle() u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;C;Harvest;25;S;S_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Train;Worker;Down;3;S;C;Idle;S;S_S;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.HasUnitThatKillsInOneAttack()) then {e} else { u.harvest(25)} u.harvest(2) u.train(Worker,Down,3) u.idle() u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;50;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;S_S;S;C;Harvest;2;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Light,Up,50)} u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Barracks,Up,2) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} else { e} u.harvest(2) u.train(Worker,Down,3) if(u.isBuilder()) then {for(Unit u){u.harvest(20) u.idle()}} u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;50;S;For_S;S;S_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;MostHealthy;S;Empty;S;S_S;S;C;Train;Worker;Down;3;S;S_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;S_S;S;C;Harvest;20;S;C;Idle;S;C;Attack;Weakest;S;For_S;S;If_B_then_S_else_S;B;HaveQtdUnitsAttacking;1;S;For_S;S;C;Attack;MostHealthy;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Up,50)} for(Unit u){u.build(Barracks,Up,2) if(u.OpponentHasUnitInPlayerRange()) then {u.attack(MostHealthy)} else { e} u.train(Worker,Down,3) if(u.isBuilder()) then {for(Unit u){u.harvest(20) u.idle()}} u.attack(Weakest) for(Unit u){if(HaveQtdUnitsAttacking(1)) then {for(Unit u){u.attack(MostHealthy)}} else { u.idle()}}}}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;7;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){u.harvest(7)}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;HasNumberOfUnits;Worker;5;S;C;Harvest;6;S;Empty;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(HasNumberOfUnits(Worker,5)) then {u.harvest(6)} else { e}}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Down,50)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Left,50)} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Build;Base;EnemyDir;6;S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;9;S;C;Attack;LessHealthy;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;For_S;S;C;Harvest;4;S;S_S;S;For_S;S;C;Train;Worker;Left;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){for(Unit u){if(u.canAttack()) then {u.build(Base,EnemyDir,6)}} for(Unit u){for(Unit u){u.train(Worker,Left,9)} u.attack(LessHealthy) for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {e} else { for(Unit u){u.harvest(4)}}}} for(Unit u){u.train(Worker,Left,50)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Weakest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Harvest;1;S;S_S;S;S_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;C;Train;Light;EnemyDir;50;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Worker,EnemyDir,7) u.harvest(1)} if(u.canHarvest()) then {u.idle()} u.train(Light,EnemyDir,50) u.build(Barracks,EnemyDir,5) if(u.canAttack()) then {u.idle()} u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Heavy,Right,1)} for(Unit u){u.train(Worker,EnemyDir,7)} u.idle() u.train(Light,EnemyDir,25) u.build(Barracks,EnemyDir,5) u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;1;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;C;Idle;S;C;Train;Light;EnemyDir;25;S;S_S;S;C;Build;Barracks;EnemyDir;5;S;C;Harvest;8;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Attack;Closest	for(Unit u){for(Unit u){u.train(Heavy,Right,1)} for(Unit u){u.train(Worker,EnemyDir,7)} u.idle() u.train(Light,EnemyDir,25) u.build(Barracks,EnemyDir,5) u.harvest(8)} for(Unit u){u.moveToUnit(Enemy,Closest) for(Unit u){u.attack(Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Up;5;S;C;Build;Base;Up;5;S;If_B_then_S;B;IsBuilder;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;2;S;S_S;S;C;Idle;S;For_S;S;C;Train;Light;EnemyDir;8;S;For_S;S;C;Harvest;6;S;For_S;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Up;6	for(Unit u){u.train(Heavy,Up,5) u.build(Base,Up,5) if(u.isBuilder()) then {u.build(Barracks,EnemyDir,2) u.idle() for(Unit u){u.train(Light,EnemyDir,8)} for(Unit u){u.harvest(6)} for(Unit u){u.attack(Closest) u.train(Worker,Up,6)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;EnemyDir;1;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;9;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.train(Heavy,Up,25)} u.train(Worker,EnemyDir,1)} if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,9)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;20;S;S_S;S;C;Attack;Strongest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Worker;Left;9;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(20) u.attack(Strongest) for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.moveToUnit(Ally,Weakest) if(u.OpponentHasUnitInPlayerRange()) then {u.train(Worker,Left,9)} for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;C;Harvest;7;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;Up;6;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(7) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.train(Worker,Up,6) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;2;S;S_S;S;C;Harvest;7;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;C;Attack;Strongest;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;For_S;S;C;Train;Heavy;Up;25;S;C;Train;Worker;Up;6;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,2) u.harvest(7) u.moveToUnit(Enemy,Closest) u.attack(Strongest) if(u.HasUnitInOpponentRange()) then {u.moveToUnit(Ally,Farthest)} for(Unit u){for(Unit u){u.train(Heavy,Up,25)}} u.train(Worker,Up,6) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;6;S;C;Attack;Closest;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(6)) then {u.attack(Closest)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;Attack;Closest;S;C;Idle;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(5)) then {u.attack(Closest)} u.idle() u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(50) u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Attack;Closest;S;C;Train;Worker;EnemyDir;5;S;C;Build;Barracks;Right;10;S;C;Harvest;4;S;C;Attack;Weakest	for(Unit u){u.train(Light,Up,4) for(Unit u){u.train(Heavy,Right,6)} if(u.OpponentHasUnitInPlayerRange()) then {u.attack(Closest)} u.train(Worker,EnemyDir,5) u.build(Barracks,Right,10) u.harvest(4) u.attack(Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;For_S;S;C;Train;Heavy;Right;6;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;Harvest;10;S;C;Attack;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Attack;Weakest;S;For_S;S;C;Harvest;10;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;C;Attack;Weakest;S;For_S;S;C;Train;Ranged;Left;8	for(Unit u){u.train(Light,Up,4) if(u.is(Base)) then {if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Weakest)} else { e}} for(Unit u){u.train(Heavy,Right,6)} u.idle() if(HaveQtdUnitsAttacking(7)) then {if(u.HasUnitThatKillsInOneAttack()) then {u.moveToUnit(Ally,LessHealthy) u.harvest(10) u.attack(LessHealthy) u.moveToUnit(Enemy,Closest)} u.attack(Weakest) for(Unit u){u.harvest(10)}} u.build(Barracks,EnemyDir,7) u.train(Worker,EnemyDir,5) u.harvest(4) u.attack(Weakest)} for(Unit u){u.train(Ranged,Left,8)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Up;4;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;is_Type;Base;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;10;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;For_S;S;C;Train;Heavy;Right;6;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Weakest;S;C;Build;Barracks;EnemyDir;7;S;C;Train;Worker;EnemyDir;5;S;C;Harvest;4;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;MoveAway	for(Unit u){u.train(Light,Up,4) for(Unit u){u.idle()} if(u.is(Base)) then {if(HasNumberOfWorkersHarvesting(10)) then {u.moveToUnit(Ally,Weakest)} else { e}} for(Unit u){u.train(Heavy,Right,6)} if(HaveQtdUnitsAttacking(7)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Weakest)} u.build(Barracks,EnemyDir,7) u.train(Worker,EnemyDir,5) u.harvest(4) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveAway()}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;C;Attack;Weakest;S;C;Train;Worker;Up;4;S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;7;S;Empty	for(Unit u){u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.moveToUnit(Enemy,LessHealthy) for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { u.attack(Weakest)} u.train(Worker,Up,4)} for(Unit u){if(u.canHarvest()) then {u.harvest(7)} else { e}}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;Up;50;S;Empty;S;C;Train;Worker;Up;4;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){if(u.isBuilder()) then {u.build(Barracks,Up,50)} else { e} u.train(Worker,Up,4)} for(Unit u){u.train(Light,EnemyDir,2)} u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;Train;Light;Up;10;S;C;MoveAway	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.train(Light,Up,10) u.moveAway()}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;10;S;S_S;S;C;Harvest;9;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;4;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Ranged;Up;6;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;S_S;S;For_S;S;For_S;S;C;Train;Heavy;Right;100;S;For_S;S;C;Train;Worker;Left;4;S;C;Train;Light;Up;10;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.idle()} u.train(Ranged,Up,1) u.build(Barracks,EnemyDir,10) u.harvest(9) for(Unit u){u.train(Heavy,Left,4)} u.moveToUnit(Enemy,LessHealthy) u.train(Ranged,Up,6) u.moveAway() u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.train(Heavy,Right,100)}} for(Unit u){u.train(Worker,Left,4)} u.train(Light,Up,10) u.attack(Strongest)}
S;For_S;S;S_S;S;C;Harvest;25;S;S_S;S;S_S;S;C;Attack;Closest;S;C;Train;Heavy;Right;10;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;15;S;For_S;S;C;Harvest;10;S;S_S;S;C;Train;Worker;EnemyDir;4;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Ranged;Down;3;S;For_S;S;C;Build;Barracks;Left;50	for(Unit u){u.harvest(25) u.attack(Closest) u.train(Heavy,Right,10) if(u.HasUnitWithinDistanceFromOpponent(15)) then {for(Unit u){u.harvest(10)}} u.train(Worker,EnemyDir,4) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Ranged,Down,3)} for(Unit u){u.build(Barracks,Left,50)}}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;C;Harvest;9;S;C;Train;Heavy;Up;8;S;S_S;S;C;Train;Light;Up;1;S;S_S;S;C;Attack;MostHealthy;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Down,2) u.harvest(9) u.train(Heavy,Up,8) u.train(Light,Up,1) u.attack(MostHealthy) u.train(Worker,Left,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;C;Build;Barracks;Down;2;S;S_S;S;S_S;S;C;Harvest;9;S;C;Train;Heavy;Up;5;S;C;Attack;LessHealthy;S;S_S;S;C;Train;Light;Up;1;S;S_S;S;C;Train;Worker;Left;5;S;C;MoveToUnit;Ally;MostHealthy	for(Unit u){for(Unit u){u.idle()} u.build(Barracks,Down,2) u.harvest(9) u.train(Heavy,Up,5) u.attack(LessHealthy) u.train(Light,Up,1) u.train(Worker,Left,5) u.moveToUnit(Ally,MostHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Harvest;100;S;C;Idle;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;Attack;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;100;S;S_S;S;C;Train;Worker;EnemyDir;4;S;S_S;S;For_S;S;C;Build;Barracks;Right;50;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(100) u.idle() for(Unit u){u.train(Heavy,EnemyDir,15)} u.attack(Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,100)} u.train(Worker,EnemyDir,4) for(Unit u){u.build(Barracks,Right,50)} u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;C;Harvest;100;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;15;S;C;Attack;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;For_S;S;C;Attack;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;3;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Worker;Up;4;S;For_S;S;S_S;S;C;Build;Barracks;Right;50;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;C;Harvest;100;S;C;Idle;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.harvest(100) for(Unit u){u.train(Heavy,EnemyDir,15)} u.attack(Closest) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.moveToUnit(Enemy,Farthest)} for(Unit u){for(Unit u){u.attack(MostHealthy)}}} u.moveToUnit(Ally,MostHealthy) u.train(Worker,EnemyDir,3) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Farthest) u.train(Worker,Up,4) for(Unit u){u.build(Barracks,Right,50) if(u.HasUnitInOpponentRange()) then {u.harvest(100) u.idle()}} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;C;Idle;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) for(Unit u){u.harvest(4)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle()}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;For_S;S;C;Harvest;4;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) for(Unit u){u.harvest(4)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Train;Worker;EnemyDir;2;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Idle;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Down;3;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.train(Worker,EnemyDir,2) u.train(Worker,EnemyDir,7) u.idle() if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Down,3)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;Right;3;S;S_S;S;C;Idle;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;10;S;S_S;S;C;Build;Barracks;Down;2;S;C;Attack;Weakest;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;S_S;S;C;Idle;S;C;Harvest;5;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Heavy;4;S;For_S;S;C;Train;Ranged;Up;50;S;For_S;S;C;Train;Heavy;Right;9	for(Unit u){u.train(Light,Right,3) u.idle() u.train(Worker,EnemyDir,7) if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,10)} u.build(Barracks,Down,2) u.attack(Weakest) if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.idle() u.harvest(5)}} for(Unit u){if(OpponentHasNumberOfUnits(Heavy,4)) then {for(Unit u){u.train(Ranged,Up,50)}} else { for(Unit u){u.train(Heavy,Right,9)}}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;6;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;7;S;Empty;S;S_S;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;8;S;C;Train;Ranged;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,6)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){if(u.canHarvest()) then {u.harvest(7)} else { e} u.attack(Closest) u.train(Worker,Down,8) u.train(Ranged,Down,50)}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;3;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;6;S;Empty;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;5;S;If_B_then_S;B;CanAttack;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,3)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){if(u.canHarvest()) then {u.harvest(6)} else { e} if(u.HasUnitWithinDistanceFromOpponent(5)) then {if(u.canAttack()) then {if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)}}} if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} u.attack(Strongest) u.train(Worker,Down,8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,50)}}
S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Up;15;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;S_S;S;If_B_then_S_else_S;B;CanHarvest;S;C;Harvest;6;S;Empty;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;S_S;S;C;Train;Worker;Down;8;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Light;Down;50	for(Unit u){u.idle() u.train(Heavy,Up,15)} for(Unit u){u.build(Barracks,EnemyDir,1)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.harvest(6)} else { e} if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Light,Down,50)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;C;Train;Ranged;Up;8;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;1;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20)} for(Unit u){u.train(Ranged,Up,8)} for(Unit u){u.build(Barracks,EnemyDir,1) u.harvest(3)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.moveToUnit(Ally,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,4) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;For_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;7;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;For_S;S;C;Train;Ranged;Left;8;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;25;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;CanHarvest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Attack;Closest;S;S_S;S;C;Train;Worker;Down;4;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.idle() u.train(Heavy,EnemyDir,20)} for(Unit u){if(HaveQtdUnitsAttacking(7)) then {for(Unit u){u.moveToUnit(Enemy,LessHealthy)}}} for(Unit u){u.train(Ranged,Left,8)} for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,25)} u.harvest(3)} for(Unit u){u.harvest(5) if(u.canHarvest()) then {u.moveToUnit(Enemy,Weakest)} if(u.canAttack()) then {u.attack(Closest)} u.train(Worker,Down,4) u.moveToUnit(Enemy,MostHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Light;EnemyDir;2;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;For_S;S;C;Train;Ranged;Left;8;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Build;Base;Up;5	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) if(u.is(Base)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.train(Light,EnemyDir,2) u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} for(Unit u){u.train(Ranged,Left,8)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Enemy,Weakest) u.build(Base,Up,5)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;If_B_then_S_else_S;B;is_Type;Base;S;C;MoveToUnit;Ally;Weakest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Idle;S;If_B_then_S_else_S;B;is_Type;Heavy;S;Empty;S;C;Harvest;3;S;S_S;S;For_S;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Light;Up;9	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) if(u.is(Base)) then {u.moveToUnit(Ally,Weakest)} else { for(Unit u){u.moveToUnit(Ally,Farthest)}}}} for(Unit u){u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.idle()}} if(u.is(Heavy)) then {e} else { u.harvest(3)}} for(Unit u){u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { e} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Light,Up,9)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;For_S;S;If_B_then_S_else_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;Empty;S;C;Train;Light;Left;5;S;If_B_then_S_else_S;B;is_Type;Heavy;S;C;MoveToUnit;Enemy;Closest;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Worker;Down;7;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {e} else { u.train(Light,Left,5)}} if(u.is(Heavy)) then {u.moveToUnit(Enemy,Closest)} else { u.harvest(3)}} for(Unit u){u.harvest(5) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Worker,Down,7)} else { u.moveToUnit(Ally,Weakest)} u.moveToUnit(Enemy,Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Ranged;Left;1;S;C;Train;Worker;Down;6;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;5;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Closest;S;For_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;Empty;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Train;Light;Down;10	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) u.train(Ranged,Left,1) u.train(Worker,Down,6)} for(Unit u){u.harvest(5) if(u.isBuilder()) then {u.moveToUnit(Ally,Strongest)} u.attack(Closest)} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {e} else { for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.train(Light,Down,10)}}}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;EnemyDir;20;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;3;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Idle;S;C;Train;Worker;Left;2;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Ranged;Right;1;S;C;Train;Worker;Down;6;S;For_S;S;S_S;S;C;Harvest;5;S;C;Attack;Closest	for(Unit u){u.train(Heavy,EnemyDir,20) if(HasNumberOfWorkersHarvesting(3)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,Closest)} u.idle() u.train(Worker,Left,2)} for(Unit u){u.build(Barracks,Up,1) u.train(Ranged,Right,1) u.train(Worker,Down,6)} for(Unit u){u.harvest(5) u.attack(Closest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Train;Ranged;Left;50;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Closest) for(Unit u){u.train(Ranged,Left,50)}} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;6;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Down;3;S;C;Train;Ranged;Up;1;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(6)) then {u.attack(Closest) u.train(Worker,Down,3)} else { u.train(Ranged,Up,1)} u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5)} for(Unit u){u.attack(LessHealthy)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;50;S;S_S;S;C;Harvest;7;S;C;Train;Worker;Down;5;S;For_S;S;C;Idle;S;For_S;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;15;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.build(Barracks,EnemyDir,100) for(Unit u){u.train(Heavy,Left,50)} u.harvest(7) u.train(Worker,Down,5) for(Unit u){u.idle()}} for(Unit u){u.attack(LessHealthy)} if(HasNumberOfWorkersHarvesting(15)) then {u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Right;8;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;For_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Attack;MostHealthy	for(Unit u){u.train(Worker,Right,8) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(15) for(Unit u){u.train(Heavy,Left,50)}} for(Unit u){u.attack(MostHealthy)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Train;Worker;Right;8;S;C;Build;Barracks;EnemyDir;100;S;For_S;S;C;Idle;S;S_S;S;C;Harvest;15;S;For_S;S;C;Train;Heavy;Left;50;S;For_S;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Worker,Right,8) u.build(Barracks,EnemyDir,100) for(Unit u){u.idle()} u.harvest(15) for(Unit u){u.train(Heavy,Left,50)}} for(Unit u){u.attack(Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;5;S;C;Harvest;2;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,EnemyDir,5)} u.harvest(2) u.attack(Weakest) u.train(Light,EnemyDir,50) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;5;S;C;Harvest;2;S;S_S;S;S_S;S;C;Attack;Weakest;S;S_S;S;C;Train;Light;EnemyDir;50;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Right;5	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.idle()} for(Unit u){u.train(Heavy,Left,5)} u.harvest(2) u.attack(Weakest) u.train(Light,EnemyDir,50) u.moveToUnit(Enemy,Weakest) u.train(Worker,Right,5)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;S_S;S;C;Harvest;4;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;S_S;S;C;Idle;S;C;Train;Light;Right;5;S;S_S;S;S_S;S;C;Train;Ranged;Right;7;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,7) for(Unit u){u.harvest(4) if(u.HasUnitThatKillsInOneAttack()) then {u.idle() u.train(Light,Right,5)}} u.train(Ranged,Right,7) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Right;7;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;7;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;C;Harvest;2;S;C;Attack;Closest;S;For_S;S;For_S;S;C;Idle	for(Unit u){u.build(Barracks,Right,7) u.train(Ranged,EnemyDir,7) for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.harvest(2) u.attack(Closest) for(Unit u){for(Unit u){u.idle()}}}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Right;1;S;S_S;S;C;Build;Barracks;Right;7;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;5;S;For_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;C;Attack;Closest;S;For_S;S;C;Idle	for(Unit u){u.train(Ranged,Right,1) u.build(Barracks,Right,7) for(Unit u){u.harvest(4)} for(Unit u){u.train(Worker,EnemyDir,5)} for(Unit u){u.train(Heavy,EnemyDir,50)} u.attack(Closest) for(Unit u){u.idle()}}
S;For_S;S;S_S;S;For_S;S;C;Train;Worker;Up;15;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;C;Idle;S;C;MoveAway;S;C;Harvest;9	for(Unit u){for(Unit u){u.train(Worker,Up,15)} for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Down,50)} u.idle() u.moveAway() u.harvest(9)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Down;50;S;S_S;S;C;MoveAway;S;For_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Base;Left;50;S;C;Harvest;9	for(Unit u){for(Unit u){u.harvest(3)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,Down,50)} u.moveAway() for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Base,Left,50)} u.harvest(9)}
S;For_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;For_S;S;C;Attack;LessHealthy;S;C;Train;Worker;EnemyDir;6	for(Unit u){u.moveToUnit(Ally,Strongest) u.moveToUnit(Ally,Farthest) for(Unit u){u.attack(LessHealthy)} u.train(Worker,EnemyDir,6)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Build;Base;EnemyDir;2;S;S_S;S;S_S;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Worker;Down;50	for(Unit u){for(Unit u){u.train(Worker,Up,3)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy) for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)}} u.build(Base,EnemyDir,2) u.harvest(8) u.moveToUnit(Enemy,Farthest) for(Unit u){u.moveToUnit(Ally,Farthest)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Down,50)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Harvest;1;S;S_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;Attack;Farthest;S;C;Train;Worker;Down;25	for(Unit u){u.moveToUnit(Ally,LessHealthy) u.harvest(1) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,LessHealthy) u.attack(Farthest) u.train(Worker,Down,25)}
S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Idle;S;C;Harvest;15;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;5	for(Unit u){for(Unit u){u.build(Barracks,Right,5) u.idle() u.harvest(15)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,5)}
S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;S_S;S;C;Build;Barracks;Right;5;S;S_S;S;C;Harvest;1;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Light;Up;5;S;For_S;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.train(Heavy,EnemyDir,15) for(Unit u){u.build(Barracks,Right,5) u.harvest(1) u.attack(Strongest)} u.moveToUnit(Enemy,MostHealthy) u.train(Light,Up,5)} for(Unit u){u.moveToUnit(Ally,Strongest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;For_S;S;C;Build;Barracks;Right;1;S;C;Train;Heavy;EnemyDir;15;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Light;Down;8;S;For_S;S;C;Train;Worker;Left;100	for(Unit u){for(Unit u){u.attack(Strongest) for(Unit u){u.build(Barracks,Right,1)} u.train(Heavy,EnemyDir,15)} for(Unit u){u.moveToUnit(Enemy,Closest)} u.train(Light,Down,8)} for(Unit u){u.train(Worker,Left,100)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;Up;5;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;MoveAway;S;C;Attack;Weakest	for(Unit u){u.idle() u.train(Ranged,Up,5)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,EnemyDir,25)}} for(Unit u){for(Unit u){u.moveToUnit(Ally,Weakest)} for(Unit u){u.moveAway()} u.attack(Weakest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;Train;Light;Left;20;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;C;Build;Barracks;Left;15;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Attack;Closest;S;S_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S_else_S;B;HasNumberOfUnits;Base;7;S;C;MoveToUnit;Enemy;LessHealthy;S;Empty	for(Unit u){u.harvest(8) u.train(Light,Left,20) for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.build(Barracks,Left,15)}}}} for(Unit u){u.idle()} for(Unit u){for(Unit u){for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Farthest)}} if(HasNumberOfUnits(Base,7)) then {u.moveToUnit(Enemy,LessHealthy)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;6;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,6) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Up;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Up,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;If_B_then_S_else_S;B;HasUnitThatKillsInOneAttack;S;For_S;S;C;Harvest;4;S;Empty;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Worker;Right;9	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) if(u.HasUnitThatKillsInOneAttack()) then {for(Unit u){u.harvest(4)}} else { e} u.moveToUnit(Enemy,Closest) u.train(Worker,Right,9)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;For_S;S;C;Build;Barracks;Down;1;S;S_S;S;C;Train;Heavy;Left;20;S;S_S;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.attack(Closest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.build(Barracks,Down,1)} u.train(Heavy,Left,20) for(Unit u){u.harvest(4)} u.moveToUnit(Enemy,Closest)}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;For_S;S;For_S;S;If_B_then_S;B;OpponentHasNumberOfUnits;Worker;25;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy;S;If_B_then_S;B;HasNumberOfUnits;Heavy;7;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Light;Left;15;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;5;S;Empty;S;C;MoveToUnit;Ally;Strongest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} for(Unit u){for(Unit u){if(OpponentHasNumberOfUnits(Worker,25)) then {u.moveToUnit(Enemy,Strongest)}}} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy) if(HasNumberOfUnits(Heavy,7)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Closest)} for(Unit u){u.train(Light,Left,15)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(5)) then {e} else { u.moveToUnit(Ally,Strongest)}}
S;S_S;S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;Train;Light;Left;15	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(MostHealthy) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)} for(Unit u){u.train(Light,Left,15)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;20;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,20) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(Weakest) u.train(Light,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Up;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,9) u.harvest(8) for(Unit u){u.train(Heavy,Up,10)} u.attack(Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Enemy,Strongest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;9;S;C;Harvest;8;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;EnemyDir;2;S;C;MoveToUnit;Ally;Closest;S;If_B_then_S;B;HasNumberOfUnits;Worker;3;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,9) u.harvest(8) for(Unit u){u.train(Heavy,Down,10)} u.attack(Weakest) u.train(Worker,EnemyDir,2) u.moveToUnit(Ally,Closest) if(HasNumberOfUnits(Worker,3)) then {u.moveToUnit(Ally,Farthest)} u.moveToUnit(Enemy,Farthest)}
S;S_S;S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;EnemyDir;15;S;For_S;S;C;Build;Barracks;Up;2;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Harvest;2;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;Strongest	for(Unit u){u.train(Ranged,EnemyDir,15) for(Unit u){u.build(Barracks,Up,2)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.harvest(2)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Strongest)} for(Unit u){u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,Strongest)}
S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;S_S;S;For_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Farthest;S;For_S;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Down,100)} for(Unit u){for(Unit u){for(Unit u){u.idle()}} for(Unit u){u.build(Barracks,Down,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Farthest)}} for(Unit u){for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;S_S;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Down;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest;S;For_S;S;For_S;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Down,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)}} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Weakest)}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Right;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Attack;Closest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Right,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.attack(Closest)}}
S;S_S;S;For_S;S;C;Train;Heavy;Left;100;S;For_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Harvest;2;S;S_S;S;C;Build;Barracks;Right;15;S;C;Harvest;50;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Down;4;S;C;Attack;Weakest	for(Unit u){u.train(Heavy,Left,100)} for(Unit u){for(Unit u){u.idle()} for(Unit u){u.harvest(2) u.build(Barracks,Right,15) u.harvest(50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,4) u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;3;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;Train;Heavy;EnemyDir;25;S;For_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Ranged;5;S;C;MoveToUnit;Ally;Strongest;S;C;Idle;S;S_S;S;C;Train;Light;EnemyDir;5;S;S_S;S;S_S;S;C;Train;Worker;Up;7;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Barracks;Right;6;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest	for(Unit u){for(Unit u){u.harvest(3) u.moveToUnit(Enemy,LessHealthy) u.train(Heavy,EnemyDir,25) for(Unit u){if(OpponentHasNumberOfUnits(Ranged,5)) then {u.moveToUnit(Ally,Strongest)} else { u.idle()}} u.train(Light,EnemyDir,5) u.train(Worker,Up,7) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Barracks,Right,6)}}} u.moveAway()} u.moveToUnit(Ally,Closest)}
S;For_S;S;If_B_then_S_else_S;B;CanHarvest;S;Empty;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;50;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Left;4;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Idle;S;For_S;S;C;Train;Ranged;Up;1;S;For_S;S;For_S;S;C;Train;Light;Down;100	for(Unit u){if(u.canHarvest()) then {e} else { u.moveToUnit(Enemy,Weakest) for(Unit u){if(HasNumberOfWorkersHarvesting(50)) then {u.moveToUnit(Ally,Closest)}} for(Unit u){u.build(Barracks,Left,4) u.attack(Strongest) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.idle()} for(Unit u){u.train(Ranged,Up,1)} for(Unit u){for(Unit u){u.train(Light,Down,100)}}}}}
S;S_S;S;For_S;S;S_S;S;C;Harvest;1;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Left;25;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Train;Light;EnemyDir;15	for(Unit u){u.harvest(1) for(Unit u){u.idle() u.build(Barracks,Left,25)} u.moveToUnit(Enemy,MostHealthy)} for(Unit u){u.moveToUnit(Enemy,Strongest) u.train(Light,EnemyDir,15)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Train;Light;EnemyDir;20;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Build;Barracks;Left;25;S;S_S;S;For_S;S;C;Harvest;50;S;S_S;S;For_S;S;C;Idle;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.moveToUnit(Ally,Weakest)} else { e} if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.moveToUnit(Ally,MostHealthy) u.moveToUnit(Ally,Strongest)} for(Unit u){u.train(Light,EnemyDir,20)} for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.build(Barracks,Left,25)}} for(Unit u){u.harvest(50)} for(Unit u){u.idle()} u.moveToUnit(Ally,LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;If_B_then_S_else_S;B;HasLessNumberOfUnits;Ranged;5;S;Empty;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;For_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;Strongest;S;C;Build;Barracks;Left;6;S;C;Train;Heavy;EnemyDir;20;S;For_S;S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){if(HasLessNumberOfUnits(Ranged,5)) then {e} else { u.moveToUnit(Enemy,Weakest)} for(Unit u){u.moveAway() for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(25)) then {for(Unit u){u.attack(Strongest)}} else { u.moveToUnit(Ally,Strongest)}}} u.build(Barracks,Left,6) u.train(Heavy,EnemyDir,20)} for(Unit u){for(Unit u){for(Unit u){u.attack(Strongest)} u.moveToUnit(Enemy,Closest)}}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;50;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.train(Heavy,EnemyDir,50) if(u.is(Worker)) then {for(Unit u){u.idle()} u.attack(Closest)} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}}}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;For_S;S;C;Idle;S;C;Attack;Closest;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.is(Worker)) then {for(Unit u){u.idle()} u.attack(Closest)} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}} u.idle()}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;is_Type;Worker;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4;S;C;Idle	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.is(Worker)) then {u.moveToUnit(Enemy,Strongest) u.idle()} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}} u.idle()}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Idle;S;C;MoveToUnit;Enemy;Weakest;S;If_B_then_S;B;HasLessNumberOfUnits;Barracks;1;S;For_S;S;C;Build;Barracks;Down;4	for(Unit u){u.train(Heavy,EnemyDir,6) if(u.OpponentHasUnitInPlayerRange()) then {u.idle()} u.moveToUnit(Enemy,Weakest) if(HasLessNumberOfUnits(Barracks,1)) then {for(Unit u){u.build(Barracks,Down,4)}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Heavy;Right;25;S;S_S;S;For_S;S;If_B_then_S;B;HasNumberOfUnits;Barracks;10;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Ally;LessHealthy;S;For_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;S_S;S;S_S;S;C;MoveAway;S;C;Train;Worker;Right;2;S;S_S;S;S_S;S;C;Attack;Closest;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Harvest;25;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Train;Worker;Up;9;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;If_B_then_S;B;CanHarvest;S;For_S;S;C;Train;Light;Up;2;S;S_S;S;For_S;S;C;Build;Barracks;Left;2;S;For_S;S;C;Idle	for(Unit u){for(Unit u){u.train(Heavy,Right,25)} for(Unit u){if(HasNumberOfUnits(Barracks,10)) then {u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,LessHealthy) for(Unit u){u.moveToUnit(Ally,Closest)}}} u.moveToUnit(Enemy,MostHealthy) u.moveAway() u.train(Worker,Right,2) u.attack(Closest) if(u.isBuilder()) then {for(Unit u){u.harvest(25)}} u.moveToUnit(Enemy,Weakest) u.train(Worker,Up,9) u.moveToUnit(Ally,LessHealthy) if(u.canHarvest()) then {for(Unit u){u.train(Light,Up,2)}} for(Unit u){u.build(Barracks,Left,2)} for(Unit u){u.idle()}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;C;Attack;Farthest;S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;MoveToUnit;Ally;LessHealthy;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;C;Train;Light;Down;50;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Ally,Strongest) u.attack(Farthest)} for(Unit u){for(Unit u){u.moveToUnit(Ally,MostHealthy)} u.moveToUnit(Ally,LessHealthy) u.moveToUnit(Enemy,Closest) u.moveToUnit(Ally,Closest) for(Unit u){u.moveToUnit(Ally,MostHealthy) u.train(Light,Down,50) u.moveToUnit(Enemy,Closest)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Attack;Closest;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;25;S;C;Train;Light;Up;3;S;C;Train;Ranged;EnemyDir;4	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.moveToUnit(Ally,Strongest)} for(Unit u){for(Unit u){u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Closest) u.moveAway() u.moveToUnit(Ally,Closest) u.attack(Closest) if(u.HasUnitWithinDistanceFromOpponent(25)) then {u.train(Light,Up,3)} else { u.train(Ranged,EnemyDir,4)}}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15) u.moveToUnit(Ally,Strongest)} for(Unit u){u.harvest(50) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15)} for(Unit u){u.harvest(50) u.attack(LessHealthy)}
S;S_S;S;For_S;S;C;Idle;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;Up;1;S;C;Train;Heavy;Left;15;S;For_S;S;S_S;S;C;Harvest;50;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){u.build(Barracks,Up,1) u.train(Heavy,Left,15)} for(Unit u){u.harvest(50) u.attack(Weakest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;4;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;5;S;C;Attack;Farthest;S;Empty;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Attack;Weakest;S;C;Train;Worker;Left;5;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Build;Barracks;Up;25;S;S_S;S;C;Train;Ranged;Down;7;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} if(OpponentHasNumberOfUnits(Worker,5)) then {u.attack(Farthest)} else { e} u.train(Heavy,Up,4) u.attack(Weakest) u.train(Worker,Left,5) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,Closest)} for(Unit u){u.build(Barracks,Up,25)} u.train(Ranged,Down,7) for(Unit u){u.moveToUnit(Enemy,LessHealthy) u.moveToUnit(Ally,LessHealthy)} u.moveToUnit(Ally,Farthest) for(Unit u){u.moveToUnit(Ally,Weakest)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} u.train(Heavy,Up,4) u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,Weakest) u.moveAway()} u.train(Heavy,Right,6) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;For_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;Train;Heavy;Up;4;S;S_S;S;S_S;S;C;Train;Worker;Left;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;For_S;S;C;Build;Barracks;Up;3;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;C;Train;Heavy;Right;6;S;S_S;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Attack;LessHealthy	for(Unit u){u.idle()} for(Unit u){for(Unit u){u.harvest(4)} u.train(Heavy,Up,4) u.train(Worker,Left,5) u.moveToUnit(Enemy,Weakest) for(Unit u){u.build(Barracks,Up,3)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway()} u.train(Heavy,Right,6) u.moveToUnit(Ally,MostHealthy) for(Unit u){u.attack(LessHealthy)}}
S;S_S;S;For_S;S;C;Train;Worker;Up;10;S;For_S;S;S_S;S;For_S;S;C;Attack;Closest;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Worker;Down;100;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Worker,Up,10)} for(Unit u){for(Unit u){u.attack(Closest)} u.moveToUnit(Ally,Farthest) u.train(Worker,Down,100) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;Train;Worker;EnemyDir;10	for(Unit u){for(Unit u){u.attack(Strongest)} u.train(Worker,EnemyDir,10)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;20;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveAway;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Ally;Closest;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Ally;Closest;S;S_S;S;For_S;S;C;MoveToUnit;Ally;MostHealthy;S;If_B_then_S_else_S;B;IsBuilder;S;Empty;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;C;Train;Worker;Right;25;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;1;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;Weakest	for(Unit u){for(Unit u){u.train(Worker,Left,20)} for(Unit u){u.harvest(3)} for(Unit u){u.moveToUnit(Enemy,Closest) u.moveAway() for(Unit u){u.idle()} u.moveToUnit(Ally,Closest) u.harvest(50) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,MostHealthy)} if(u.isBuilder()) then {e} else { u.moveToUnit(Ally,MostHealthy)} u.train(Worker,Right,25) u.moveToUnit(Ally,Weakest) if(u.HasUnitWithinDistanceFromOpponent(1)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;C;Harvest;3;S;For_S;S;S_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;MoveToUnit;Ally;Strongest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;7;S;C;MoveToUnit;Ally;MostHealthy;S;Empty;S;C;MoveToUnit;Ally;Weakest	for(Unit u){u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,20)} for(Unit u){u.harvest(3)} for(Unit u){for(Unit u){u.attack(Weakest)} u.moveToUnit(Ally,Closest) u.moveToUnit(Ally,Closest)} for(Unit u){u.moveToUnit(Ally,Strongest)} u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Worker,7)) then {u.moveToUnit(Ally,MostHealthy)} else { e} u.moveToUnit(Ally,Weakest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Build;Base;Up;8;S;C;MoveToUnit;Enemy;Weakest;S;For_S;S;C;Train;Worker;EnemyDir;20;S;For_S;S;C;Harvest;3;S;S_S;S;For_S;S;S_S;S;C;Attack;LessHealthy;S;For_S;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Weakest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Base;7;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;If_B_then_S;B;CanAttack;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){u.moveToUnit(Ally,Weakest) for(Unit u){u.build(Base,Up,8)} u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Worker,EnemyDir,20)} for(Unit u){u.harvest(3)} for(Unit u){u.attack(LessHealthy) for(Unit u){u.harvest(4)}} u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Weakest) if(OpponentHasNumberOfUnits(Base,7)) then {u.moveToUnit(Ally,Farthest)} else { e} if(u.canAttack()) then {u.moveToUnit(Ally,LessHealthy)}}
S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;EnemyDir;8;S;For_S;S;C;Train;Light;Right;9;S;For_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;8;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Enemy;LessHealthy;S;C;MoveAway	for(Unit u){u.build(Barracks,EnemyDir,8)} for(Unit u){u.train(Light,Right,9)} for(Unit u){for(Unit u){u.idle() u.harvest(8) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Enemy,LessHealthy) u.moveAway()}}
S;S_S;S;For_S;S;If_B_then_S;B;CanAttack;S;C;Idle;S;For_S;S;S_S;S;S_S;S;For_S;S;S_S;S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;8;S;C;Train;Light;Right;8;S;C;Harvest;2;S;S_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Attack;Strongest;S;If_B_then_S_else_S;B;IsBuilder;S;S_S;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveToUnit;Enemy;MostHealthy;S;Empty;S;If_B_then_S;B;HasLessNumberOfUnits;Light;0;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Ally;LessHealthy;S;Empty;S;S_S;S;S_S;S;C;Train;Worker;Down;10;S;C;Harvest;4;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){if(u.canAttack()) then {u.idle()}} for(Unit u){for(Unit u){for(Unit u){u.build(Barracks,EnemyDir,8) u.train(Light,Right,8)} u.harvest(2)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Strongest)} u.moveToUnit(Enemy,Closest) if(u.HasUnitThatKillsInOneAttack()) then {u.attack(Strongest)} if(u.isBuilder()) then {if(HasNumberOfWorkersHarvesting(2)) then {u.moveToUnit(Enemy,MostHealthy)} else { e} if(HasLessNumberOfUnits(Light,0)) then {for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.moveToUnit(Ally,LessHealthy)}} else { e} u.train(Worker,Down,10) u.harvest(4) u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Left,7)} u.moveToUnit(Enemy,Farthest) for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Worker;Left;7;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){for(Unit u){u.train(Worker,Left,7)} u.moveToUnit(Enemy,Farthest) if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.idle()} u.moveToUnit(Enemy,Closest) u.train(Heavy,Down,10) if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;MoveToUnit;Ally;LessHealthy;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.moveToUnit(Ally,LessHealthy)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;S_S;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {if(u.HasUnitInOpponentRange()) then {e} else { for(Unit u){u.train(Worker,EnemyDir,7)}}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;For_S;S;C;Train;Worker;EnemyDir;7;S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;C;Build;Barracks;EnemyDir;1;S;For_S;S;S_S;S;C;Train;Worker;Right;6;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;10;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;For_S;S;S_S;S;C;Harvest;6;S;S_S;S;If_B_then_S_else_S;B;HasUnitInOpponentRange;S;Empty;S;C;Harvest;50;S;C;Attack;Strongest;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Farthest;S;Empty	for(Unit u){if(u.isBuilder()) then {for(Unit u){u.train(Worker,EnemyDir,7)}} for(Unit u){if(u.canAttack()) then {u.build(Barracks,EnemyDir,1)} for(Unit u){u.train(Worker,Right,6) u.idle()} for(Unit u){u.train(Heavy,Down,10)} if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {for(Unit u){u.harvest(6) if(u.HasUnitInOpponentRange()) then {e} else { u.harvest(50)} u.attack(Strongest)}}} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Farthest)} else { e}}
S;For_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;7;S;C;MoveAway;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;S_S;S;C;Train;Ranged;Left;25;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(7)) then {u.moveAway()} else { u.moveToUnit(Ally,Farthest)} for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.attack(Weakest) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;100;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;C;Attack;LessHealthy;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100)} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){u.attack(LessHealthy)}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Attack;Closest;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Train;Heavy;Down;100;S;If_B_then_S;B;HasUnitInOpponentRange;S;C;Attack;Closest;S;S_S;S;For_S;S;C;Train;Worker;Right;4;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Build;Barracks;Up;2;S;C;Train;Ranged;Left;25;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;For_S;S;C;Harvest;5;S;S_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;20;S;For_S;S;For_S;S;C;Attack;Weakest;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Ally;Farthest;S;Empty;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){u.attack(Closest) for(Unit u){u.train(Heavy,Down,100) if(u.HasUnitInOpponentRange()) then {u.attack(Closest)}} for(Unit u){u.train(Worker,Right,4)} for(Unit u){u.idle() u.build(Barracks,Up,2)} u.train(Ranged,Left,25) u.moveToUnit(Enemy,Strongest) u.moveToUnit(Ally,Strongest) for(Unit u){u.harvest(5)} if(u.HasUnitWithinDistanceFromOpponent(20)) then {for(Unit u){for(Unit u){u.attack(Weakest)}}} u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.moveToUnit(Enemy,Weakest)} u.moveToUnit(Enemy,Closest) if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Ally,Farthest)} else { e} u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest;S;C;Train;Heavy;Right;5;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) u.idle() for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(5) u.attack(Farthest)} u.train(Heavy,Right,5)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;S_S;S;If_B_then_S;B;IsBuilder;S;S_S;S;C;Harvest;5;S;C;Attack;Farthest;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Heavy;Right;5;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){if(u.isBuilder()) then {u.harvest(5) u.attack(Farthest)} u.moveToUnit(Ally,Weakest) u.train(Heavy,Right,5)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Train;Ranged;Right;6;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.train(Ranged,Right,6)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;For_S;S;C;Build;Base;EnemyDir;10;S;Empty;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) if(u.OpponentHasUnitInPlayerRange()) then {for(Unit u){u.build(Base,EnemyDir,10)}} else { e} for(Unit u){u.idle()} u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;For_S;S;S_S;S;S_S;S;C;Train;Heavy;Right;9;S;S_S;S;C;Idle;S;For_S;S;For_S;S;C;Harvest;3;S;S_S;S;S_S;S;S_S;S;C;Build;Barracks;Up;2;S;C;MoveToUnit;Enemy;LessHealthy;S;S_S;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;C;Harvest;50;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;C;Train;Ranged;Right;50;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;Attack;Closest;S;C;Train;Worker;Up;6;S;C;MoveToUnit;Enemy;Weakest	for(Unit u){u.train(Heavy,Right,9) u.idle() for(Unit u){for(Unit u){u.harvest(3)}} u.build(Barracks,Up,2) u.moveToUnit(Enemy,LessHealthy) u.moveAway() u.harvest(50) u.moveToUnit(Enemy,Closest) u.train(Ranged,Right,50) u.moveToUnit(Enemy,Weakest) u.attack(Closest) u.train(Worker,Up,6) u.moveToUnit(Enemy,Weakest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;C;Train;Ranged;EnemyDir;2;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()}} u.train(Ranged,EnemyDir,2) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;C;Harvest;15;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;MostHealthy;S;C;Train;Worker;Up;3;S;For_S;S;C;Train;Light;EnemyDir;2;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;EnemyDir;6;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;2;S;C;MoveAway;S;If_B_then_S;B;HasLessNumberOfUnits;Ranged;1;S;C;MoveToUnit;Ally;Farthest;S;C;Train;Ranged;EnemyDir;2;S;For_S;S;C;Build;Barracks;Right;6	for(Unit u){u.idle()} for(Unit u){u.harvest(15) u.attack(MostHealthy) u.train(Worker,Up,3) for(Unit u){u.train(Light,EnemyDir,2)} u.moveToUnit(Enemy,Closest) for(Unit u){u.train(Heavy,EnemyDir,6)} for(Unit u){if(u.HasUnitWithinDistanceFromOpponent(2)) then {u.moveAway()}} if(HasLessNumberOfUnits(Ranged,1)) then {u.moveToUnit(Ally,Farthest)} u.train(Ranged,EnemyDir,2) for(Unit u){u.build(Barracks,Right,6)}}
S;S_S;S;S_S;S;For_S;S;S_S;S;S_S;S;C;Build;Barracks;Down;50;S;C;Train;Ranged;EnemyDir;50;S;C;Idle;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;MoveAway;S;S_S;S;If_B_then_S_else_S;B;HasUnitWithinDistanceFromOpponent;10;S;For_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Heavy;0;S;C;MoveToUnit;Enemy;Strongest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Harvest;5;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.build(Barracks,Down,50) u.train(Ranged,EnemyDir,50) u.idle()} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveAway() if(u.HasUnitWithinDistanceFromOpponent(10)) then {for(Unit u){for(Unit u){if(HasLessNumberOfUnits(Heavy,0)) then {u.moveToUnit(Enemy,Strongest)}}}} else { e} u.moveToUnit(Ally,Closest) for(Unit u){u.harvest(5)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Ranged;EnemyDir;50;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Harvest;5;S;C;MoveToUnit;Enemy;Farthest;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Ranged,EnemyDir,50)} for(Unit u){u.moveToUnit(Enemy,MostHealthy) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.build(Barracks,Up,2)} u.harvest(5) u.moveToUnit(Enemy,Farthest)}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;C;Train;Heavy;Down;50;S;For_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;S_S;S;C;Train;Light;Left;100;S;S_S;S;C;MoveToUnit;Ally;Closest;S;For_S;S;S_S;S;S_S;S;For_S;S;C;Build;Barracks;Up;2;S;C;Harvest;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveAway;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveToUnit;Enemy;Farthest	for(Unit u){u.idle() u.train(Heavy,Down,50)} for(Unit u){u.moveToUnit(Ally,Farthest) u.train(Light,Left,100) u.moveToUnit(Ally,Closest) for(Unit u){for(Unit u){u.build(Barracks,Up,2)} u.harvest(5) u.moveToUnit(Enemy,Weakest) u.moveAway()}} if(HaveQtdUnitsAttacking(5)) then {u.moveToUnit(Enemy,Farthest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;C;Harvest;50;S;For_S;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} u.harvest(50) for(Unit u){u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;Harvest;7;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.moveToUnit(Enemy,MostHealthy) u.train(Worker,Right,25)} for(Unit u){u.harvest(7)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;100;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.harvest(100) u.train(Worker,Right,25)} for(Unit u){u.moveToUnit(Enemy,Strongest)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;C;Harvest;100;S;S_S;S;C;Attack;Closest;S;C;Train;Worker;Right;25;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() u.harvest(100) u.attack(Closest) u.train(Worker,Right,25)} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Light;Down;3;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Build;Barracks;Left;7;S;If_B_then_S;B;HasUnitInOpponentRange;S;S_S;S;For_S;S;S_S;S;C;Idle;S;S_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;Train;Ranged;Right;1;S;If_B_then_S;B;IsBuilder;S;C;Attack;MostHealthy;S;S_S;S;For_S;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Train;Worker;Down;100;S;If_B_then_S;B;IsBuilder;S;C;MoveToUnit;Enemy;Farthest;S;C;Harvest;100;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Left;10;S;C;MoveToUnit;Enemy;Strongest;S;C;Attack;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Down,3)} if(u.HasUnitThatKillsInOneAttack()) then {u.build(Barracks,Left,7)} if(u.HasUnitInOpponentRange()) then {for(Unit u){u.idle() if(u.OpponentHasUnitInPlayerRange()) then {u.train(Ranged,Right,1)} if(u.isBuilder()) then {u.attack(MostHealthy)}} for(Unit u){u.moveToUnit(Enemy,MostHealthy)} u.train(Worker,Down,100) if(u.isBuilder()) then {u.moveToUnit(Enemy,Farthest)}} u.harvest(100) u.moveToUnit(Enemy,Weakest) for(Unit u){u.train(Heavy,Left,10)} u.moveToUnit(Enemy,Strongest) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Train;Ranged;Left;15;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Harvest;20;S;C;Attack;LessHealthy	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.train(Ranged,Left,15)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.harvest(20) u.attack(LessHealthy)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;If_B_then_S_else_S;B;IsBuilder;S;C;Build;Barracks;EnemyDir;10;S;Empty;S;S_S;S;S_S;S;S_S;S;C;Idle;S;For_S;S;C;Train;Heavy;EnemyDir;10;S;For_S;S;C;Train;Ranged;Left;15;S;C;Harvest;4;S;C;Train;Worker;EnemyDir;9;S;C;MoveToUnit;Enemy;MostHealthy;S;S_S;S;C;Attack;Weakest;S;C;MoveToUnit;Ally;Farthest	for(Unit u){if(u.isBuilder()) then {u.build(Barracks,EnemyDir,10)} else { e} u.idle() for(Unit u){u.train(Heavy,EnemyDir,10)} for(Unit u){u.train(Ranged,Left,15)} u.harvest(4) u.train(Worker,EnemyDir,9) u.moveToUnit(Enemy,MostHealthy) u.attack(Weakest) u.moveToUnit(Ally,Farthest)}
S;For_S;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;S_S;S;S_S;S;S_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;25;S;For_S;S;C;Harvest;8;S;For_S;S;For_S;S;C;Train;Worker;Right;4;S;C;Attack;MostHealthy;S;C;Train;Ranged;Left;9	for(Unit u){for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle() u.build(Barracks,EnemyDir,25) for(Unit u){u.harvest(8)} for(Unit u){for(Unit u){u.train(Worker,Right,4)}}}} u.attack(MostHealthy) u.train(Ranged,Left,9)}
S;S_S;S;For_S;S;C;Harvest;6;S;S_S;S;For_S;S;S_S;S;C;MoveAway;S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;7;S;If_B_then_S;B;HasUnitWithinDistanceFromOpponent;8;S;C;Train;Ranged;Up;4;S;S_S;S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Idle;S;C;Build;Barracks;EnemyDir;50;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Farthest;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;For_S;S;For_S;S;C;Train;Light;Left;7	for(Unit u){u.harvest(6)} for(Unit u){u.moveAway() for(Unit u){u.train(Worker,EnemyDir,7)} if(u.HasUnitWithinDistanceFromOpponent(8)) then {u.train(Ranged,Up,4)}} for(Unit u){for(Unit u){u.idle()} u.build(Barracks,EnemyDir,50) u.attack(Strongest) u.moveToUnit(Enemy,Farthest) u.moveToUnit(Enemy,MostHealthy)} for(Unit u){for(Unit u){for(Unit u){u.train(Light,Left,7)}}}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;9;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;S_S;S;C;Harvest;1;S;C;Train;Ranged;Down;1;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Idle;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,9) u.build(Base,EnemyDir,10) u.train(Heavy,Left,7) u.harvest(1) u.train(Ranged,Down,1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.idle()} u.attack(Strongest)}
S;S_S;S;For_S;S;C;Idle;S;For_S;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;5;S;C;MoveAway;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Train;Worker;Down;5;S;S_S;S;C;Train;Ranged;Right;2;S;C;Train;Worker;Right;7;S;S_S;S;C;MoveAway;S;C;Train;Ranged;Down;15;S;C;Build;Barracks;EnemyDir;20;S;If_B_then_S_else_S;B;OpponentHasUnitInPlayerRange;S;Empty;S;C;Train;Heavy;Right;15;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest	for(Unit u){u.idle()} for(Unit u){if(HaveQtdUnitsAttacking(5)) then {u.moveAway()} for(Unit u){u.train(Heavy,Down,8)} u.harvest(4) u.train(Worker,Down,5) u.train(Ranged,Right,2) u.train(Worker,Right,7) u.moveAway() u.train(Ranged,Down,15) u.build(Barracks,EnemyDir,20) if(u.OpponentHasUnitInPlayerRange()) then {e} else { u.train(Heavy,Right,15)} u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Left;7;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;C;MoveToUnit;Enemy;MostHealthy;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) u.train(Heavy,Left,7) for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) u.attack(Strongest)}
S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;C;Attack;Strongest	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) for(Unit u){u.idle()} u.harvest(1) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,EnemyDir,100)} u.attack(Strongest)}
S;S_S;S;For_S;S;S_S;S;For_S;S;C;Train;Light;Up;3;S;S_S;S;S_S;S;C;Train;Worker;EnemyDir;7;S;C;Build;Base;EnemyDir;10;S;S_S;S;S_S;S;For_S;S;C;Idle;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;1;S;C;Harvest;6;S;C;Build;Barracks;EnemyDir;100;S;C;Harvest;8;S;S_S;S;C;MoveToUnit;Enemy;MostHealthy;S;For_S;S;C;Train;Ranged;EnemyDir;100;S;C;MoveAway;S;For_S;S;C;MoveToUnit;Enemy;LessHealthy	for(Unit u){for(Unit u){u.train(Light,Up,3)} u.train(Worker,EnemyDir,7) u.build(Base,EnemyDir,10) for(Unit u){u.idle()} u.harvest(1) u.harvest(6) u.build(Barracks,EnemyDir,100) u.harvest(8) u.moveToUnit(Enemy,MostHealthy) for(Unit u){u.train(Ranged,EnemyDir,100)} u.moveAway()} for(Unit u){u.moveToUnit(Enemy,LessHealthy)}
S;For_S;S;S_S;S;S_S;S;C;Train;Ranged;Left;7;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Attack;Strongest;S;C;MoveToUnit;Enemy;Closest;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;If_B_then_S;B;HasLessNumberOfUnits;Light;1;S;C;MoveAway;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,Left,7) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveToUnit(Enemy,Closest) u.attack(Strongest) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){if(HasLessNumberOfUnits(Light,1)) then {u.moveAway()}} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;C;Idle;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) u.idle() for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;If_B_then_S;B;OpponentHasUnitThatKillsUnitInOneAttack;S;C;Idle;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;2;S;C;MoveAway;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;C;Attack;MostHealthy;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Ally;LessHealthy	for(Unit u){if(u.OpponentHasUnitThatKillsUnitInOneAttack()) then {u.idle()} if(HasNumberOfWorkersHarvesting(2)) then {u.moveAway()} u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.attack(MostHealthy) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Ally,LessHealthy)}}
S;For_S;S;S_S;S;C;Train;Ranged;EnemyDir;10;S;S_S;S;For_S;S;C;Train;Heavy;Down;8;S;S_S;S;S_S;S;C;Build;Barracks;EnemyDir;25;S;S_S;S;S_S;S;C;MoveAway;S;C;Attack;Weakest;S;C;MoveToUnit;Enemy;Closest;S;S_S;S;S_S;S;S_S;S;If_B_then_S;B;CanAttack;S;S_S;S;S_S;S;For_S;S;C;Harvest;2;S;For_S;S;If_B_then_S;B;is_Type;Barracks;S;For_S;S;C;Harvest;6;S;C;MoveToUnit;Ally;Closest;S;For_S;S;C;Idle;S;For_S;S;C;Harvest;1;S;S_S;S;For_S;S;C;Train;Light;Down;2;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;MoveToUnit;Enemy;Weakest;S;S_S;S;C;Train;Worker;EnemyDir;5;S;S_S;S;C;MoveToUnit;Enemy;Weakest;S;C;MoveToUnit;Enemy;MostHealthy	for(Unit u){u.train(Ranged,EnemyDir,10) for(Unit u){u.train(Heavy,Down,8)} u.build(Barracks,EnemyDir,25) u.moveAway() u.attack(Weakest) u.moveToUnit(Enemy,Closest) if(u.canAttack()) then {for(Unit u){u.harvest(2)} for(Unit u){if(u.is(Barracks)) then {for(Unit u){u.harvest(6)}}} u.moveToUnit(Ally,Closest)} for(Unit u){u.idle()} for(Unit u){u.harvest(1)} for(Unit u){u.train(Light,Down,2)} if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Ally,Farthest) u.moveToUnit(Enemy,Weakest)} else { u.train(Worker,EnemyDir,5) u.moveToUnit(Enemy,Weakest) u.moveToUnit(Enemy,MostHealthy)}}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Closest;S;C;Train;Worker;Up;4	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Closest) u.train(Worker,Up,4)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Strongest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;C;Train;Light;Up;25;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;MoveAway;S;S_S;S;C;Attack;Strongest;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Enemy,Strongest) for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} u.train(Light,Up,25) for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.moveAway() u.attack(Strongest) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;Train;Ranged;Left;8;S;S_S;S;S_S;S;S_S;S;C;Train;Heavy;Down;25;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Up;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)} for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.train(Ranged,Left,8) u.train(Heavy,Down,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Up,4) u.moveToUnit(Enemy,Closest)}
S;For_S;S;S_S;S;C;Build;Barracks;EnemyDir;9;S;S_S;S;S_S;S;S_S;S;S_S;S;C;Harvest;4;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Strongest;S;If_B_then_S_else_S;B;OpponentHasNumberOfUnits;Worker;100;S;C;MoveToUnit;Enemy;LessHealthy;S;C;Attack;Closest;S;For_S;S;C;Idle;S;If_B_then_S;B;is_Type;Light;S;For_S;S;S_S;S;S_S;S;C;MoveToUnit;Enemy;Closest;S;C;MoveToUnit;Enemy;Farthest;S;C;Attack;Weakest;S;For_S;S;If_B_then_S;B;HasUnitThatKillsInOneAttack;S;C;Train;Heavy;Down;8;S;S_S;S;C;Train;Ranged;Left;8;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Train;Ranged;EnemyDir;6;S;S_S;S;C;Train;Heavy;Down;25;S;C;MoveToUnit;Enemy;LessHealthy;S;If_B_then_S_else_S;B;CanAttack;S;C;MoveToUnit;Ally;Weakest;S;Empty;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;Train;Light;Left;20;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;C;Train;Worker;Right;4;S;C;MoveToUnit;Enemy;Closest	for(Unit u){u.build(Barracks,EnemyDir,9) u.harvest(4) u.moveToUnit(Ally,Strongest) if(OpponentHasNumberOfUnits(Worker,100)) then {u.moveToUnit(Enemy,LessHealthy)} else { u.attack(Closest)} for(Unit u){u.idle()} if(u.is(Light)) then {for(Unit u){u.moveToUnit(Enemy,Closest) u.moveToUnit(Enemy,Farthest) u.attack(Weakest)}} for(Unit u){if(u.HasUnitThatKillsInOneAttack()) then {u.train(Heavy,Down,8)}} u.train(Ranged,Left,8) for(Unit u){u.train(Ranged,EnemyDir,6)} u.train(Heavy,Down,25) u.moveToUnit(Enemy,LessHealthy) if(u.canAttack()) then {u.moveToUnit(Ally,Weakest)} else { e} u.moveToUnit(Ally,Weakest) u.train(Light,Left,20) u.moveToUnit(Ally,Weakest) u.train(Worker,Right,4) u.moveToUnit(Enemy,Closest)}
S;S_S;S;For_S;S;C;Train;Worker;EnemyDir;9;S;For_S;S;S_S;S;C;MoveToUnit;Enemy;Farthest;S;S_S;S;For_S;S;C;Harvest;5;S;For_S;S;C;Attack;Weakest	for(Unit u){u.train(Worker,EnemyDir,9)} for(Unit u){u.moveToUnit(Enemy,Farthest) for(Unit u){u.harvest(5)} for(Unit u){u.attack(Weakest)}}
S;For_S;S;S_S;S;S_S;S;C;Harvest;2;S;For_S;S;C;Train;Worker;Up;50;S;C;Attack;Closest	for(Unit u){u.harvest(2) for(Unit u){u.train(Worker,Up,50)} u.attack(Closest)}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;If_B_then_S;B;CanHarvest;S;C;Idle;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;S_S;S;For_S;S;C;Attack;Strongest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){if(u.canHarvest()) then {u.idle()}}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) for(Unit u){u.attack(Strongest)} u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;MostHealthy;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
S;For_S;S;S_S;S;S_S;S;S_S;S;S_S;S;S_S;S;C;MoveToUnit;Ally;Farthest;S;For_S;S;C;Train;Heavy;Down;8;S;C;Attack;LessHealthy;S;If_B_then_S;B;CanAttack;S;For_S;S;C;MoveToUnit;Enemy;Strongest;S;S_S;S;If_B_then_S;B;HaveQtdUnitsAttacking;1;S;C;MoveToUnit;Ally;Strongest;S;S_S;S;S_S;S;S_S;S;S_S;S;For_S;S;C;Harvest;3;S;If_B_then_S_else_S;B;HasNumberOfWorkersHarvesting;3;S;Empty;S;S_S;S;C;MoveToUnit;Ally;Weakest;S;C;MoveToUnit;Ally;MostHealthy;S;For_S;S;C;Train;Light;Right;10;S;For_S;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;If_B_then_S_else_S;B;IsBuilder;S;C;Harvest;15;S;Empty;S;S_S;S;If_B_then_S;B;HasNumberOfWorkersHarvesting;5;S;If_B_then_S;B;OpponentHasUnitInPlayerRange;S;C;MoveToUnit;Enemy;Closest;S;For_S;S;C;Idle;S;S_S;S;C;Train;Worker;EnemyDir;6;S;For_S;S;C;Build;Barracks;Left;20	for(Unit u){u.moveToUnit(Ally,Farthest) for(Unit u){u.train(Heavy,Down,8)} u.attack(LessHealthy) if(u.canAttack()) then {for(Unit u){u.moveToUnit(Enemy,Strongest)}} if(HaveQtdUnitsAttacking(1)) then {u.moveToUnit(Ally,Strongest)} for(Unit u){u.harvest(3)} if(HasNumberOfWorkersHarvesting(3)) then {e} else { u.moveToUnit(Ally,Weakest) u.moveToUnit(Ally,MostHealthy)} for(Unit u){u.train(Light,Right,10)} for(Unit u){if(u.OpponentHasUnitInPlayerRange()) then {if(u.isBuilder()) then {u.harvest(15)} else { e}}} if(HasNumberOfWorkersHarvesting(5)) then {if(u.OpponentHasUnitInPlayerRange()) then {u.moveToUnit(Enemy,Closest)}} for(Unit u){u.idle()} u.train(Worker,EnemyDir,6) for(Unit u){u.build(Barracks,Left,20)}}
